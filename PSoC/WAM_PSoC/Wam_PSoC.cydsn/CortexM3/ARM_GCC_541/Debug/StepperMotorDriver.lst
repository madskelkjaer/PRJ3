ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"StepperMotorDriver.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.moveAzimuth,"ax",%progbits
  20              		.align	2
  21              		.global	moveAzimuth
  22              		.thumb
  23              		.thumb_func
  24              		.type	moveAzimuth, %function
  25              	moveAzimuth:
  26              	.LFB64:
  27              		.file 1 "StepperMotorDriver.c"
   1:StepperMotorDriver.c **** /* ========================================
   2:StepperMotorDriver.c ****  *
   3:StepperMotorDriver.c ****  *          Thomas Degn Larsen
   4:StepperMotorDriver.c ****  *
   5:StepperMotorDriver.c ****  * ========================================
   6:StepperMotorDriver.c **** */
   7:StepperMotorDriver.c **** 
   8:StepperMotorDriver.c **** #include "project.h"
   9:StepperMotorDriver.c **** #include "StepperMotorDriver.h"
  10:StepperMotorDriver.c **** #include <stdio.h>
  11:StepperMotorDriver.c **** #define STEPS 8                         // number of steps before repeat (half step = 400 steps pr 
  12:StepperMotorDriver.c **** 
  13:StepperMotorDriver.c **** /******************
  14:StepperMotorDriver.c **** **   Variables   **
  15:StepperMotorDriver.c **** ******************/
  16:StepperMotorDriver.c **** static int stepSequence[STEPS][4] = {   // step sequence for motors
  17:StepperMotorDriver.c ****     {1, 0, 0, 0},                       // step 1
  18:StepperMotorDriver.c ****     {1, 1, 0, 0},                       // step 2
  19:StepperMotorDriver.c ****     {0, 1, 0, 0},                       // step 3
  20:StepperMotorDriver.c ****     {0, 1, 1, 0},                       // step 4
  21:StepperMotorDriver.c ****     {0, 0, 1, 0},                       // step 5
  22:StepperMotorDriver.c ****     {0, 0, 1, 1},                       // step 6
  23:StepperMotorDriver.c ****     {0, 0, 0, 1},                       // step 7
  24:StepperMotorDriver.c ****     {1, 0, 0, 1}                        // step 8
  25:StepperMotorDriver.c **** };
  26:StepperMotorDriver.c **** static int off[4] = {0, 0, 0, 0};       // step used to turn of motors
  27:StepperMotorDriver.c **** static long azimuthSteps = 8000000;     // counting steps for steppermotor moving solar panel horit
  28:StepperMotorDriver.c **** static long elevationSteps = 8000000;   // counting steps for steppermotor moving solar panel verti
  29:StepperMotorDriver.c **** static int aStep = 0;                   // number of steps to be taken with azimuth motor
  30:StepperMotorDriver.c **** static int eStep = 0;                   // number of steps to be taken with elevation motor
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 2


  31:StepperMotorDriver.c **** 
  32:StepperMotorDriver.c **** 
  33:StepperMotorDriver.c **** /******************
  34:StepperMotorDriver.c **** **   Functions   **
  35:StepperMotorDriver.c **** ******************/
  36:StepperMotorDriver.c **** void moveAzimuth(int steps)
  37:StepperMotorDriver.c **** {   // function to set steps to be takben by azimuth motor
  28              		.loc 1 37 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  38:StepperMotorDriver.c ****     aStep = steps;
  34              		.loc 1 38 0
  35 0000 014B     		ldr	r3, .L2
  36 0002 1860     		str	r0, [r3]
  37 0004 7047     		bx	lr
  38              	.L3:
  39 0006 00BF     		.align	2
  40              	.L2:
  41 0008 00000000 		.word	.LANCHOR0
  42              		.cfi_endproc
  43              	.LFE64:
  44              		.size	moveAzimuth, .-moveAzimuth
  45              		.section	.text.azimuthStep,"ax",%progbits
  46              		.align	2
  47              		.global	azimuthStep
  48              		.thumb
  49              		.thumb_func
  50              		.type	azimuthStep, %function
  51              	azimuthStep:
  52              	.LFB66:
  39:StepperMotorDriver.c **** }
  40:StepperMotorDriver.c **** 
  41:StepperMotorDriver.c **** int azimuth()
  42:StepperMotorDriver.c **** {   // function to calculate next azimutgh step based and call azimuthStep()
  43:StepperMotorDriver.c ****     if (Azimuth_Pin_1_Read() == 0 && Azimuth_Pin_2_Read() == 0 && Azimuth_Pin_3_Read() == 0 && Azim
  44:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
  45:StepperMotorDriver.c ****         azimuthStep(stepSequence[azimuthSteps % STEPS]);
  46:StepperMotorDriver.c ****         return 0;
  47:StepperMotorDriver.c ****     }
  48:StepperMotorDriver.c ****     if (aStep > 0)
  49:StepperMotorDriver.c ****     {   // turning right (positiv steps)
  50:StepperMotorDriver.c ****         if (!Limit_Right_Read())
  51:StepperMotorDriver.c ****         {   // if right limit is reached, don't move
  52:StepperMotorDriver.c ****             aStep = 0;
  53:StepperMotorDriver.c ****             return 0;
  54:StepperMotorDriver.c ****         }
  55:StepperMotorDriver.c ****         // set azimuth motor pins to next step and decrease steps to be taken
  56:StepperMotorDriver.c ****         azimuthStep(stepSequence[++azimuthSteps % STEPS]);
  57:StepperMotorDriver.c ****         aStep = aStep - 1;
  58:StepperMotorDriver.c ****         return 1;
  59:StepperMotorDriver.c ****     }
  60:StepperMotorDriver.c ****     else if (aStep < 0)
  61:StepperMotorDriver.c ****     {    // turning left (negativ steps)
  62:StepperMotorDriver.c ****         if (!Limit_Left_Read())
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 3


  63:StepperMotorDriver.c ****         {   // if left limit is reached, don't move
  64:StepperMotorDriver.c ****             aStep = 0;
  65:StepperMotorDriver.c ****             return 0;
  66:StepperMotorDriver.c ****         }
  67:StepperMotorDriver.c ****         // set azimuth motor pins to next step and decrease steps to be taken
  68:StepperMotorDriver.c ****         azimuthStep(stepSequence[--azimuthSteps % STEPS]);
  69:StepperMotorDriver.c ****         aStep = aStep + 1;
  70:StepperMotorDriver.c ****         return 1;
  71:StepperMotorDriver.c ****     }
  72:StepperMotorDriver.c ****     return -1;
  73:StepperMotorDriver.c **** }
  74:StepperMotorDriver.c **** 
  75:StepperMotorDriver.c **** void azimuthStep(int sequence[4])
  76:StepperMotorDriver.c **** {   // function to write sequence to azimuth motor pins
  53              		.loc 1 76 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              	.LVL1:
  58 0000 10B5     		push	{r4, lr}
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 4, -8
  61              		.cfi_offset 14, -4
  62 0002 0446     		mov	r4, r0
  77:StepperMotorDriver.c ****     Azimuth_Pin_1_Write(sequence[0]);
  63              		.loc 1 77 0
  64 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  65              	.LVL2:
  66 0006 FFF7FEFF 		bl	Azimuth_Pin_1_Write
  67              	.LVL3:
  78:StepperMotorDriver.c ****     Azimuth_Pin_2_Write(sequence[1]);
  68              		.loc 1 78 0
  69 000a 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
  70 000c FFF7FEFF 		bl	Azimuth_Pin_2_Write
  71              	.LVL4:
  79:StepperMotorDriver.c ****     Azimuth_Pin_3_Write(sequence[2]);
  72              		.loc 1 79 0
  73 0010 207A     		ldrb	r0, [r4, #8]	@ zero_extendqisi2
  74 0012 FFF7FEFF 		bl	Azimuth_Pin_3_Write
  75              	.LVL5:
  80:StepperMotorDriver.c ****     Azimuth_Pin_4_Write(sequence[3]);
  76              		.loc 1 80 0
  77 0016 207B     		ldrb	r0, [r4, #12]	@ zero_extendqisi2
  78 0018 FFF7FEFF 		bl	Azimuth_Pin_4_Write
  79              	.LVL6:
  80 001c 10BD     		pop	{r4, pc}
  81              		.cfi_endproc
  82              	.LFE66:
  83              		.size	azimuthStep, .-azimuthStep
  84 001e 00BF     		.section	.text.azimuth,"ax",%progbits
  85              		.align	2
  86              		.global	azimuth
  87              		.thumb
  88              		.thumb_func
  89              		.type	azimuth, %function
  90              	azimuth:
  91              	.LFB65:
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 4


  42:StepperMotorDriver.c ****     if (Azimuth_Pin_1_Read() == 0 && Azimuth_Pin_2_Read() == 0 && Azimuth_Pin_3_Read() == 0 && Azim
  92              		.loc 1 42 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96 0000 08B5     		push	{r3, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 3, -8
  99              		.cfi_offset 14, -4
  43:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 100              		.loc 1 43 0
 101 0002 FFF7FEFF 		bl	Azimuth_Pin_1_Read
 102              	.LVL7:
 103 0006 C0B9     		cbnz	r0, .L7
  43:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 104              		.loc 1 43 0 is_stmt 0 discriminator 1
 105 0008 FFF7FEFF 		bl	Azimuth_Pin_2_Read
 106              	.LVL8:
 107 000c A8B9     		cbnz	r0, .L7
  43:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 108              		.loc 1 43 0 discriminator 2
 109 000e FFF7FEFF 		bl	Azimuth_Pin_3_Read
 110              	.LVL9:
 111 0012 90B9     		cbnz	r0, .L7
  43:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 112              		.loc 1 43 0 discriminator 3
 113 0014 FFF7FEFF 		bl	Azimuth_Pin_4_Read
 114              	.LVL10:
 115 0018 78B9     		cbnz	r0, .L7
  45:StepperMotorDriver.c ****         return 0;
 116              		.loc 1 45 0 is_stmt 1
 117 001a 284B     		ldr	r3, .L17
 118 001c 1B68     		ldr	r3, [r3]
 119 001e 284A     		ldr	r2, .L17+4
 120 0020 1340     		ands	r3, r3, r2
 121 0022 03D5     		bpl	.L8
 122 0024 013B     		subs	r3, r3, #1
 123 0026 63F00703 		orn	r3, r3, #7
 124 002a 0133     		adds	r3, r3, #1
 125              	.L8:
 126 002c 2548     		ldr	r0, .L17+8
 127 002e 00EB0310 		add	r0, r0, r3, lsl #4
 128 0032 FFF7FEFF 		bl	azimuthStep
 129              	.LVL11:
  46:StepperMotorDriver.c ****     }
 130              		.loc 1 46 0
 131 0036 0020     		movs	r0, #0
 132 0038 08BD     		pop	{r3, pc}
 133              	.L7:
  48:StepperMotorDriver.c ****     {   // turning right (positiv steps)
 134              		.loc 1 48 0
 135 003a 234B     		ldr	r3, .L17+12
 136 003c 1B68     		ldr	r3, [r3]
 137 003e 002B     		cmp	r3, #0
 138 0040 1BDD     		ble	.L10
  50:StepperMotorDriver.c ****         {   // if right limit is reached, don't move
 139              		.loc 1 50 0
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 5


 140 0042 FFF7FEFF 		bl	Limit_Right_Read
 141              	.LVL12:
 142 0046 10B9     		cbnz	r0, .L11
  52:StepperMotorDriver.c ****             return 0;
 143              		.loc 1 52 0
 144 0048 1F4B     		ldr	r3, .L17+12
 145 004a 1860     		str	r0, [r3]
  53:StepperMotorDriver.c ****         }
 146              		.loc 1 53 0
 147 004c 08BD     		pop	{r3, pc}
 148              	.L11:
  56:StepperMotorDriver.c ****         aStep = aStep - 1;
 149              		.loc 1 56 0
 150 004e 1B4A     		ldr	r2, .L17
 151 0050 1368     		ldr	r3, [r2]
 152 0052 0133     		adds	r3, r3, #1
 153 0054 1360     		str	r3, [r2]
 154 0056 1A48     		ldr	r0, .L17+4
 155 0058 0340     		ands	r3, r3, r0
 156 005a 03D5     		bpl	.L12
 157 005c 013B     		subs	r3, r3, #1
 158 005e 63F00703 		orn	r3, r3, #7
 159 0062 0133     		adds	r3, r3, #1
 160              	.L12:
 161 0064 1748     		ldr	r0, .L17+8
 162 0066 00EB0310 		add	r0, r0, r3, lsl #4
 163 006a FFF7FEFF 		bl	azimuthStep
 164              	.LVL13:
  57:StepperMotorDriver.c ****         return 1;
 165              		.loc 1 57 0
 166 006e 164A     		ldr	r2, .L17+12
 167 0070 1368     		ldr	r3, [r2]
 168 0072 013B     		subs	r3, r3, #1
 169 0074 1360     		str	r3, [r2]
  58:StepperMotorDriver.c ****     }
 170              		.loc 1 58 0
 171 0076 0120     		movs	r0, #1
 172 0078 08BD     		pop	{r3, pc}
 173              	.L10:
  60:StepperMotorDriver.c ****     {    // turning left (negativ steps)
 174              		.loc 1 60 0
 175 007a 002B     		cmp	r3, #0
 176 007c 1BDA     		bge	.L15
  62:StepperMotorDriver.c ****         {   // if left limit is reached, don't move
 177              		.loc 1 62 0
 178 007e FFF7FEFF 		bl	Limit_Left_Read
 179              	.LVL14:
 180 0082 10B9     		cbnz	r0, .L13
  64:StepperMotorDriver.c ****             return 0;
 181              		.loc 1 64 0
 182 0084 104B     		ldr	r3, .L17+12
 183 0086 1860     		str	r0, [r3]
  65:StepperMotorDriver.c ****         }
 184              		.loc 1 65 0
 185 0088 08BD     		pop	{r3, pc}
 186              	.L13:
  68:StepperMotorDriver.c ****         aStep = aStep + 1;
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 6


 187              		.loc 1 68 0
 188 008a 0C4A     		ldr	r2, .L17
 189 008c 1368     		ldr	r3, [r2]
 190 008e 013B     		subs	r3, r3, #1
 191 0090 1360     		str	r3, [r2]
 192 0092 0B48     		ldr	r0, .L17+4
 193 0094 0340     		ands	r3, r3, r0
 194 0096 03D5     		bpl	.L14
 195 0098 013B     		subs	r3, r3, #1
 196 009a 63F00703 		orn	r3, r3, #7
 197 009e 0133     		adds	r3, r3, #1
 198              	.L14:
 199 00a0 0848     		ldr	r0, .L17+8
 200 00a2 00EB0310 		add	r0, r0, r3, lsl #4
 201 00a6 FFF7FEFF 		bl	azimuthStep
 202              	.LVL15:
  69:StepperMotorDriver.c ****         return 1;
 203              		.loc 1 69 0
 204 00aa 074A     		ldr	r2, .L17+12
 205 00ac 1368     		ldr	r3, [r2]
 206 00ae 0133     		adds	r3, r3, #1
 207 00b0 1360     		str	r3, [r2]
  70:StepperMotorDriver.c ****     }
 208              		.loc 1 70 0
 209 00b2 0120     		movs	r0, #1
 210 00b4 08BD     		pop	{r3, pc}
 211              	.L15:
  72:StepperMotorDriver.c **** }
 212              		.loc 1 72 0
 213 00b6 4FF0FF30 		mov	r0, #-1
  73:StepperMotorDriver.c **** 
 214              		.loc 1 73 0
 215 00ba 08BD     		pop	{r3, pc}
 216              	.L18:
 217              		.align	2
 218              	.L17:
 219 00bc 00000000 		.word	.LANCHOR1
 220 00c0 07000080 		.word	-2147483641
 221 00c4 04000000 		.word	.LANCHOR1+4
 222 00c8 00000000 		.word	.LANCHOR0
 223              		.cfi_endproc
 224              	.LFE65:
 225              		.size	azimuth, .-azimuth
 226              		.section	.text.moveElevation,"ax",%progbits
 227              		.align	2
 228              		.global	moveElevation
 229              		.thumb
 230              		.thumb_func
 231              		.type	moveElevation, %function
 232              	moveElevation:
 233              	.LFB67:
  81:StepperMotorDriver.c **** }
  82:StepperMotorDriver.c **** 
  83:StepperMotorDriver.c **** 
  84:StepperMotorDriver.c **** void moveElevation(int steps)
  85:StepperMotorDriver.c **** {   // function to set steps to be takben by elevation motor
 234              		.loc 1 85 0
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 7


 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 239              	.LVL16:
  86:StepperMotorDriver.c ****     eStep = steps;
 240              		.loc 1 86 0
 241 0000 014B     		ldr	r3, .L20
 242 0002 5860     		str	r0, [r3, #4]
 243 0004 7047     		bx	lr
 244              	.L21:
 245 0006 00BF     		.align	2
 246              	.L20:
 247 0008 00000000 		.word	.LANCHOR0
 248              		.cfi_endproc
 249              	.LFE67:
 250              		.size	moveElevation, .-moveElevation
 251              		.section	.text.elevationStep,"ax",%progbits
 252              		.align	2
 253              		.global	elevationStep
 254              		.thumb
 255              		.thumb_func
 256              		.type	elevationStep, %function
 257              	elevationStep:
 258              	.LFB69:
  87:StepperMotorDriver.c **** }
  88:StepperMotorDriver.c **** 
  89:StepperMotorDriver.c **** int elevation()
  90:StepperMotorDriver.c **** {   // function to calculate next elevation step based and call elevationStep()
  91:StepperMotorDriver.c ****     if (Elevation_Pin_1_Read() == 0 && Elevation_Pin_2_Read() == 0 && Elevation_Pin_3_Read() == 0 &
  92:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
  93:StepperMotorDriver.c ****         elevationStep(stepSequence[elevationSteps % STEPS]);
  94:StepperMotorDriver.c ****         return 0;
  95:StepperMotorDriver.c ****     }
  96:StepperMotorDriver.c ****     if (eStep > 0)
  97:StepperMotorDriver.c ****     {   // turning down (positiv steps)
  98:StepperMotorDriver.c ****         if (!Limit_Down_Read())
  99:StepperMotorDriver.c ****         {   // if down limit is reached, don't move
 100:StepperMotorDriver.c ****             eStep = 0;
 101:StepperMotorDriver.c ****             return 0;
 102:StepperMotorDriver.c ****         }
 103:StepperMotorDriver.c ****         // set elevation motor pins to next step and decrease steps to be taken
 104:StepperMotorDriver.c ****         elevationStep(stepSequence[++elevationSteps % STEPS]);
 105:StepperMotorDriver.c ****         eStep = eStep - 1;
 106:StepperMotorDriver.c ****         return 1;
 107:StepperMotorDriver.c ****     }
 108:StepperMotorDriver.c ****     
 109:StepperMotorDriver.c ****     else if (eStep < 0)
 110:StepperMotorDriver.c ****     {   // turning up (negativ steps)
 111:StepperMotorDriver.c ****         if (!Limit_Up_Read())
 112:StepperMotorDriver.c ****         {   // if up limit is reached, don't move
 113:StepperMotorDriver.c ****             eStep = 0;
 114:StepperMotorDriver.c ****             return 0;
 115:StepperMotorDriver.c ****         }
 116:StepperMotorDriver.c ****         // set elevation motor pins to next step and decrease steps to be taken
 117:StepperMotorDriver.c ****         elevationStep(stepSequence[--elevationSteps % STEPS]);
 118:StepperMotorDriver.c ****         eStep = eStep + 1;
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 8


 119:StepperMotorDriver.c ****         return 1;
 120:StepperMotorDriver.c ****     }
 121:StepperMotorDriver.c ****     return -1;
 122:StepperMotorDriver.c **** }
 123:StepperMotorDriver.c **** 
 124:StepperMotorDriver.c **** void elevationStep(int sequence[4])
 125:StepperMotorDriver.c **** {   // function to write sequence to elevation motor pins
 259              		.loc 1 125 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              	.LVL17:
 264 0000 10B5     		push	{r4, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 4, -8
 267              		.cfi_offset 14, -4
 268 0002 0446     		mov	r4, r0
 126:StepperMotorDriver.c ****     Elevation_Pin_1_Write(sequence[0]);
 269              		.loc 1 126 0
 270 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 271              	.LVL18:
 272 0006 FFF7FEFF 		bl	Elevation_Pin_1_Write
 273              	.LVL19:
 127:StepperMotorDriver.c ****     Elevation_Pin_2_Write(sequence[1]);
 274              		.loc 1 127 0
 275 000a 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 276 000c FFF7FEFF 		bl	Elevation_Pin_2_Write
 277              	.LVL20:
 128:StepperMotorDriver.c ****     Elevation_Pin_3_Write(sequence[2]);
 278              		.loc 1 128 0
 279 0010 207A     		ldrb	r0, [r4, #8]	@ zero_extendqisi2
 280 0012 FFF7FEFF 		bl	Elevation_Pin_3_Write
 281              	.LVL21:
 129:StepperMotorDriver.c ****     Elevation_Pin_4_Write(sequence[3]);
 282              		.loc 1 129 0
 283 0016 207B     		ldrb	r0, [r4, #12]	@ zero_extendqisi2
 284 0018 FFF7FEFF 		bl	Elevation_Pin_4_Write
 285              	.LVL22:
 286 001c 10BD     		pop	{r4, pc}
 287              		.cfi_endproc
 288              	.LFE69:
 289              		.size	elevationStep, .-elevationStep
 290 001e 00BF     		.section	.text.elevation,"ax",%progbits
 291              		.align	2
 292              		.global	elevation
 293              		.thumb
 294              		.thumb_func
 295              		.type	elevation, %function
 296              	elevation:
 297              	.LFB68:
  90:StepperMotorDriver.c ****     if (Elevation_Pin_1_Read() == 0 && Elevation_Pin_2_Read() == 0 && Elevation_Pin_3_Read() == 0 &
 298              		.loc 1 90 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 08B5     		push	{r3, lr}
 303              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 9


 304              		.cfi_offset 3, -8
 305              		.cfi_offset 14, -4
  91:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 306              		.loc 1 91 0
 307 0002 FFF7FEFF 		bl	Elevation_Pin_1_Read
 308              	.LVL23:
 309 0006 C8B9     		cbnz	r0, .L25
  91:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 310              		.loc 1 91 0 is_stmt 0 discriminator 1
 311 0008 FFF7FEFF 		bl	Elevation_Pin_2_Read
 312              	.LVL24:
 313 000c B0B9     		cbnz	r0, .L25
  91:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 314              		.loc 1 91 0 discriminator 2
 315 000e FFF7FEFF 		bl	Elevation_Pin_3_Read
 316              	.LVL25:
 317 0012 98B9     		cbnz	r0, .L25
  91:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 318              		.loc 1 91 0 discriminator 3
 319 0014 FFF7FEFF 		bl	Elevation_Pin_4_Read
 320              	.LVL26:
 321 0018 80B9     		cbnz	r0, .L25
  93:StepperMotorDriver.c ****         return 0;
 322              		.loc 1 93 0 is_stmt 1
 323 001a 2B4B     		ldr	r3, .L35
 324 001c D3F88430 		ldr	r3, [r3, #132]
 325 0020 2A4A     		ldr	r2, .L35+4
 326 0022 1340     		ands	r3, r3, r2
 327 0024 03D5     		bpl	.L26
 328 0026 013B     		subs	r3, r3, #1
 329 0028 63F00703 		orn	r3, r3, #7
 330 002c 0133     		adds	r3, r3, #1
 331              	.L26:
 332 002e 2848     		ldr	r0, .L35+8
 333 0030 00EB0310 		add	r0, r0, r3, lsl #4
 334 0034 FFF7FEFF 		bl	elevationStep
 335              	.LVL27:
  94:StepperMotorDriver.c ****     }
 336              		.loc 1 94 0
 337 0038 0020     		movs	r0, #0
 338 003a 08BD     		pop	{r3, pc}
 339              	.L25:
  96:StepperMotorDriver.c ****     {   // turning down (positiv steps)
 340              		.loc 1 96 0
 341 003c 254B     		ldr	r3, .L35+12
 342 003e 5B68     		ldr	r3, [r3, #4]
 343 0040 002B     		cmp	r3, #0
 344 0042 1DDD     		ble	.L28
  98:StepperMotorDriver.c ****         {   // if down limit is reached, don't move
 345              		.loc 1 98 0
 346 0044 FFF7FEFF 		bl	Limit_Down_Read
 347              	.LVL28:
 348 0048 10B9     		cbnz	r0, .L29
 100:StepperMotorDriver.c ****             return 0;
 349              		.loc 1 100 0
 350 004a 224B     		ldr	r3, .L35+12
 351 004c 5860     		str	r0, [r3, #4]
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 10


 101:StepperMotorDriver.c ****         }
 352              		.loc 1 101 0
 353 004e 08BD     		pop	{r3, pc}
 354              	.L29:
 104:StepperMotorDriver.c ****         eStep = eStep - 1;
 355              		.loc 1 104 0
 356 0050 1D4A     		ldr	r2, .L35
 357 0052 D2F88430 		ldr	r3, [r2, #132]
 358 0056 0133     		adds	r3, r3, #1
 359 0058 C2F88430 		str	r3, [r2, #132]
 360 005c 1B48     		ldr	r0, .L35+4
 361 005e 0340     		ands	r3, r3, r0
 362 0060 03D5     		bpl	.L30
 363 0062 013B     		subs	r3, r3, #1
 364 0064 63F00703 		orn	r3, r3, #7
 365 0068 0133     		adds	r3, r3, #1
 366              	.L30:
 367 006a 1948     		ldr	r0, .L35+8
 368 006c 00EB0310 		add	r0, r0, r3, lsl #4
 369 0070 FFF7FEFF 		bl	elevationStep
 370              	.LVL29:
 105:StepperMotorDriver.c ****         return 1;
 371              		.loc 1 105 0
 372 0074 174A     		ldr	r2, .L35+12
 373 0076 5368     		ldr	r3, [r2, #4]
 374 0078 013B     		subs	r3, r3, #1
 375 007a 5360     		str	r3, [r2, #4]
 106:StepperMotorDriver.c ****     }
 376              		.loc 1 106 0
 377 007c 0120     		movs	r0, #1
 378 007e 08BD     		pop	{r3, pc}
 379              	.L28:
 109:StepperMotorDriver.c ****     {   // turning up (negativ steps)
 380              		.loc 1 109 0
 381 0080 002B     		cmp	r3, #0
 382 0082 1DDA     		bge	.L33
 111:StepperMotorDriver.c ****         {   // if up limit is reached, don't move
 383              		.loc 1 111 0
 384 0084 FFF7FEFF 		bl	Limit_Up_Read
 385              	.LVL30:
 386 0088 10B9     		cbnz	r0, .L31
 113:StepperMotorDriver.c ****             return 0;
 387              		.loc 1 113 0
 388 008a 124B     		ldr	r3, .L35+12
 389 008c 5860     		str	r0, [r3, #4]
 114:StepperMotorDriver.c ****         }
 390              		.loc 1 114 0
 391 008e 08BD     		pop	{r3, pc}
 392              	.L31:
 117:StepperMotorDriver.c ****         eStep = eStep + 1;
 393              		.loc 1 117 0
 394 0090 0D4A     		ldr	r2, .L35
 395 0092 D2F88430 		ldr	r3, [r2, #132]
 396 0096 013B     		subs	r3, r3, #1
 397 0098 C2F88430 		str	r3, [r2, #132]
 398 009c 0B48     		ldr	r0, .L35+4
 399 009e 0340     		ands	r3, r3, r0
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 11


 400 00a0 03D5     		bpl	.L32
 401 00a2 013B     		subs	r3, r3, #1
 402 00a4 63F00703 		orn	r3, r3, #7
 403 00a8 0133     		adds	r3, r3, #1
 404              	.L32:
 405 00aa 0948     		ldr	r0, .L35+8
 406 00ac 00EB0310 		add	r0, r0, r3, lsl #4
 407 00b0 FFF7FEFF 		bl	elevationStep
 408              	.LVL31:
 118:StepperMotorDriver.c ****         return 1;
 409              		.loc 1 118 0
 410 00b4 074A     		ldr	r2, .L35+12
 411 00b6 5368     		ldr	r3, [r2, #4]
 412 00b8 0133     		adds	r3, r3, #1
 413 00ba 5360     		str	r3, [r2, #4]
 119:StepperMotorDriver.c ****     }
 414              		.loc 1 119 0
 415 00bc 0120     		movs	r0, #1
 416 00be 08BD     		pop	{r3, pc}
 417              	.L33:
 121:StepperMotorDriver.c **** }
 418              		.loc 1 121 0
 419 00c0 4FF0FF30 		mov	r0, #-1
 122:StepperMotorDriver.c **** 
 420              		.loc 1 122 0
 421 00c4 08BD     		pop	{r3, pc}
 422              	.L36:
 423 00c6 00BF     		.align	2
 424              	.L35:
 425 00c8 00000000 		.word	.LANCHOR1
 426 00cc 07000080 		.word	-2147483641
 427 00d0 04000000 		.word	.LANCHOR1+4
 428 00d4 00000000 		.word	.LANCHOR0
 429              		.cfi_endproc
 430              	.LFE68:
 431              		.size	elevation, .-elevation
 432              		.section	.text.MOTOR_STEP,"ax",%progbits
 433              		.align	2
 434              		.global	MOTOR_STEP
 435              		.thumb
 436              		.thumb_func
 437              		.type	MOTOR_STEP, %function
 438              	MOTOR_STEP:
 439              	.LFB70:
 130:StepperMotorDriver.c **** }
 131:StepperMotorDriver.c **** 
 132:StepperMotorDriver.c **** 
 133:StepperMotorDriver.c **** CY_ISR(MOTOR_STEP)
 134:StepperMotorDriver.c **** {   // interupt rutine activated by clock to take steps
 440              		.loc 1 134 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 08B5     		push	{r3, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 3, -8
 447              		.cfi_offset 14, -4
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 12


 135:StepperMotorDriver.c ****     if (aStep)
 448              		.loc 1 135 0
 449 0002 194B     		ldr	r3, .L45
 450 0004 1B68     		ldr	r3, [r3]
 451 0006 13B1     		cbz	r3, .L38
 136:StepperMotorDriver.c ****     {   // if aStep != 0 move
 137:StepperMotorDriver.c ****         azimuth();
 452              		.loc 1 137 0
 453 0008 FFF7FEFF 		bl	azimuth
 454              	.LVL32:
 455 000c 12E0     		b	.L39
 456              	.L38:
 138:StepperMotorDriver.c ****     }
 139:StepperMotorDriver.c ****     else if (Azimuth_Pin_1_Read() == 1 || Azimuth_Pin_2_Read() == 1 || Azimuth_Pin_3_Read() == 1 ||
 457              		.loc 1 139 0
 458 000e FFF7FEFF 		bl	Azimuth_Pin_1_Read
 459              	.LVL33:
 460 0012 0128     		cmp	r0, #1
 461 0014 0BD0     		beq	.L40
 462              		.loc 1 139 0 is_stmt 0 discriminator 1
 463 0016 FFF7FEFF 		bl	Azimuth_Pin_2_Read
 464              	.LVL34:
 465 001a 0128     		cmp	r0, #1
 466 001c 07D0     		beq	.L40
 467              		.loc 1 139 0 discriminator 2
 468 001e FFF7FEFF 		bl	Azimuth_Pin_3_Read
 469              	.LVL35:
 470 0022 0128     		cmp	r0, #1
 471 0024 03D0     		beq	.L40
 472              		.loc 1 139 0 discriminator 3
 473 0026 FFF7FEFF 		bl	Azimuth_Pin_4_Read
 474              	.LVL36:
 475 002a 0128     		cmp	r0, #1
 476 002c 02D1     		bne	.L39
 477              	.L40:
 140:StepperMotorDriver.c ****     {   // if we didn't move and motor is on, turn it off
 141:StepperMotorDriver.c ****         azimuthStep(off);
 478              		.loc 1 141 0 is_stmt 1
 479 002e 0F48     		ldr	r0, .L45+4
 480 0030 FFF7FEFF 		bl	azimuthStep
 481              	.LVL37:
 482              	.L39:
 142:StepperMotorDriver.c ****     }
 143:StepperMotorDriver.c ****     
 144:StepperMotorDriver.c ****     if (eStep)
 483              		.loc 1 144 0
 484 0034 0C4B     		ldr	r3, .L45
 485 0036 5B68     		ldr	r3, [r3, #4]
 486 0038 13B1     		cbz	r3, .L41
 145:StepperMotorDriver.c ****     {   // if eStep != 0 move
 146:StepperMotorDriver.c ****         elevation();
 487              		.loc 1 146 0
 488 003a FFF7FEFF 		bl	elevation
 489              	.LVL38:
 490 003e 08BD     		pop	{r3, pc}
 491              	.L41:
 147:StepperMotorDriver.c ****     }
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 13


 148:StepperMotorDriver.c ****     else if (Elevation_Pin_1_Read() == 1 || Elevation_Pin_2_Read() == 1 || Elevation_Pin_3_Read() =
 492              		.loc 1 148 0
 493 0040 FFF7FEFF 		bl	Elevation_Pin_1_Read
 494              	.LVL39:
 495 0044 0128     		cmp	r0, #1
 496 0046 0BD0     		beq	.L43
 497              		.loc 1 148 0 is_stmt 0 discriminator 1
 498 0048 FFF7FEFF 		bl	Elevation_Pin_2_Read
 499              	.LVL40:
 500 004c 0128     		cmp	r0, #1
 501 004e 07D0     		beq	.L43
 502              		.loc 1 148 0 discriminator 2
 503 0050 FFF7FEFF 		bl	Elevation_Pin_3_Read
 504              	.LVL41:
 505 0054 0128     		cmp	r0, #1
 506 0056 03D0     		beq	.L43
 507              		.loc 1 148 0 discriminator 3
 508 0058 FFF7FEFF 		bl	Elevation_Pin_4_Read
 509              	.LVL42:
 510 005c 0128     		cmp	r0, #1
 511 005e 02D1     		bne	.L37
 512              	.L43:
 149:StepperMotorDriver.c ****     {   // if we didn't move and motor is on, turn it off
 150:StepperMotorDriver.c ****         elevationStep(off);
 513              		.loc 1 150 0 is_stmt 1
 514 0060 0248     		ldr	r0, .L45+4
 515 0062 FFF7FEFF 		bl	elevationStep
 516              	.LVL43:
 517              	.L37:
 518 0066 08BD     		pop	{r3, pc}
 519              	.L46:
 520              		.align	2
 521              	.L45:
 522 0068 00000000 		.word	.LANCHOR0
 523 006c 08000000 		.word	.LANCHOR0+8
 524              		.cfi_endproc
 525              	.LFE70:
 526              		.size	MOTOR_STEP, .-MOTOR_STEP
 527              		.section	.text.limitLeft,"ax",%progbits
 528              		.align	2
 529              		.global	limitLeft
 530              		.thumb
 531              		.thumb_func
 532              		.type	limitLeft, %function
 533              	limitLeft:
 534              	.LFB71:
 151:StepperMotorDriver.c ****     }
 152:StepperMotorDriver.c **** }
 153:StepperMotorDriver.c **** 
 154:StepperMotorDriver.c **** bool limitLeft(){return !Limit_Left_Read();}
 535              		.loc 1 154 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539 0000 08B5     		push	{r3, lr}
 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 3, -8
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 14


 542              		.cfi_offset 14, -4
 543              		.loc 1 154 0
 544 0002 FFF7FEFF 		bl	Limit_Left_Read
 545              	.LVL44:
 546 0006 B0FA80F0 		clz	r0, r0
 547 000a 4009     		lsrs	r0, r0, #5
 548 000c 08BD     		pop	{r3, pc}
 549              		.cfi_endproc
 550              	.LFE71:
 551              		.size	limitLeft, .-limitLeft
 552 000e 00BF     		.section	.text.limitRight,"ax",%progbits
 553              		.align	2
 554              		.global	limitRight
 555              		.thumb
 556              		.thumb_func
 557              		.type	limitRight, %function
 558              	limitRight:
 559              	.LFB72:
 155:StepperMotorDriver.c **** 
 156:StepperMotorDriver.c **** bool limitRight(){return !Limit_Right_Read();}
 560              		.loc 1 156 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564 0000 08B5     		push	{r3, lr}
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 3, -8
 567              		.cfi_offset 14, -4
 568              		.loc 1 156 0
 569 0002 FFF7FEFF 		bl	Limit_Right_Read
 570              	.LVL45:
 571 0006 B0FA80F0 		clz	r0, r0
 572 000a 4009     		lsrs	r0, r0, #5
 573 000c 08BD     		pop	{r3, pc}
 574              		.cfi_endproc
 575              	.LFE72:
 576              		.size	limitRight, .-limitRight
 577 000e 00BF     		.section	.text.limitUp,"ax",%progbits
 578              		.align	2
 579              		.global	limitUp
 580              		.thumb
 581              		.thumb_func
 582              		.type	limitUp, %function
 583              	limitUp:
 584              	.LFB73:
 157:StepperMotorDriver.c **** 
 158:StepperMotorDriver.c **** bool limitUp(){return !Limit_Up_Read();}
 585              		.loc 1 158 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 08B5     		push	{r3, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 3, -8
 592              		.cfi_offset 14, -4
 593              		.loc 1 158 0
 594 0002 FFF7FEFF 		bl	Limit_Up_Read
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 15


 595              	.LVL46:
 596 0006 B0FA80F0 		clz	r0, r0
 597 000a 4009     		lsrs	r0, r0, #5
 598 000c 08BD     		pop	{r3, pc}
 599              		.cfi_endproc
 600              	.LFE73:
 601              		.size	limitUp, .-limitUp
 602 000e 00BF     		.section	.text.limitDown,"ax",%progbits
 603              		.align	2
 604              		.global	limitDown
 605              		.thumb
 606              		.thumb_func
 607              		.type	limitDown, %function
 608              	limitDown:
 609              	.LFB74:
 159:StepperMotorDriver.c **** 
 160:StepperMotorDriver.c **** bool limitDown(){return !Limit_Down_Read();}
 610              		.loc 1 160 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614 0000 08B5     		push	{r3, lr}
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 3, -8
 617              		.cfi_offset 14, -4
 618              		.loc 1 160 0
 619 0002 FFF7FEFF 		bl	Limit_Down_Read
 620              	.LVL47:
 621 0006 B0FA80F0 		clz	r0, r0
 622 000a 4009     		lsrs	r0, r0, #5
 623 000c 08BD     		pop	{r3, pc}
 624              		.cfi_endproc
 625              	.LFE74:
 626              		.size	limitDown, .-limitDown
 627 000e 00BF     		.data
 628              		.align	2
 629              		.set	.LANCHOR1,. + 0
 630              		.type	azimuthSteps, %object
 631              		.size	azimuthSteps, 4
 632              	azimuthSteps:
 633 0000 00127A00 		.word	8000000
 634              		.type	stepSequence, %object
 635              		.size	stepSequence, 128
 636              	stepSequence:
 637 0004 01000000 		.word	1
 638 0008 00000000 		.word	0
 639 000c 00000000 		.word	0
 640 0010 00000000 		.word	0
 641 0014 01000000 		.word	1
 642 0018 01000000 		.word	1
 643 001c 00000000 		.word	0
 644 0020 00000000 		.word	0
 645 0024 00000000 		.word	0
 646 0028 01000000 		.word	1
 647 002c 00000000 		.word	0
 648 0030 00000000 		.word	0
 649 0034 00000000 		.word	0
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 16


 650 0038 01000000 		.word	1
 651 003c 01000000 		.word	1
 652 0040 00000000 		.word	0
 653 0044 00000000 		.word	0
 654 0048 00000000 		.word	0
 655 004c 01000000 		.word	1
 656 0050 00000000 		.word	0
 657 0054 00000000 		.word	0
 658 0058 00000000 		.word	0
 659 005c 01000000 		.word	1
 660 0060 01000000 		.word	1
 661 0064 00000000 		.word	0
 662 0068 00000000 		.word	0
 663 006c 00000000 		.word	0
 664 0070 01000000 		.word	1
 665 0074 01000000 		.word	1
 666 0078 00000000 		.word	0
 667 007c 00000000 		.word	0
 668 0080 01000000 		.word	1
 669              		.type	elevationSteps, %object
 670              		.size	elevationSteps, 4
 671              	elevationSteps:
 672 0084 00127A00 		.word	8000000
 673              		.bss
 674              		.align	2
 675              		.set	.LANCHOR0,. + 0
 676              		.type	aStep, %object
 677              		.size	aStep, 4
 678              	aStep:
 679 0000 00000000 		.space	4
 680              		.type	eStep, %object
 681              		.size	eStep, 4
 682              	eStep:
 683 0004 00000000 		.space	4
 684              		.type	off, %object
 685              		.size	off, 16
 686              	off:
 687 0008 00000000 		.space	16
 687      00000000 
 687      00000000 
 687      00000000 
 688              		.text
 689              	.Letext0:
 690              		.file 2 "e:\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\\include\\mac
 691              		.file 3 "e:\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\\include\\sys
 692              		.file 4 "Generated_Source\\PSoC5/Azimuth_Pin_1.h"
 693              		.file 5 "Generated_Source\\PSoC5/Azimuth_Pin_2.h"
 694              		.file 6 "Generated_Source\\PSoC5/Azimuth_Pin_3.h"
 695              		.file 7 "Generated_Source\\PSoC5/Azimuth_Pin_4.h"
 696              		.file 8 "Generated_Source\\PSoC5/Limit_Right.h"
 697              		.file 9 "Generated_Source\\PSoC5/Limit_Left.h"
 698              		.file 10 "Generated_Source\\PSoC5/Elevation_Pin_1.h"
 699              		.file 11 "Generated_Source\\PSoC5/Elevation_Pin_2.h"
 700              		.file 12 "Generated_Source\\PSoC5/Elevation_Pin_3.h"
 701              		.file 13 "Generated_Source\\PSoC5/Elevation_Pin_4.h"
 702              		.file 14 "Generated_Source\\PSoC5/Limit_Down.h"
 703              		.file 15 "Generated_Source\\PSoC5/Limit_Up.h"
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 17


 704              		.file 16 "Generated_Source\\PSoC5/core_cm3.h"
 705              		.section	.debug_info,"",%progbits
 706              	.Ldebug_info0:
 707 0000 FB040000 		.4byte	0x4fb
 708 0004 0400     		.2byte	0x4
 709 0006 00000000 		.4byte	.Ldebug_abbrev0
 710 000a 04       		.byte	0x4
 711 000b 01       		.uleb128 0x1
 712 000c CB000000 		.4byte	.LASF55
 713 0010 0C       		.byte	0xc
 714 0011 BE020000 		.4byte	.LASF56
 715 0015 59020000 		.4byte	.LASF57
 716 0019 00000000 		.4byte	.Ldebug_ranges0+0
 717 001d 00000000 		.4byte	0
 718 0021 00000000 		.4byte	.Ldebug_line0
 719 0025 02       		.uleb128 0x2
 720 0026 01       		.byte	0x1
 721 0027 06       		.byte	0x6
 722 0028 C7030000 		.4byte	.LASF0
 723 002c 02       		.uleb128 0x2
 724 002d 01       		.byte	0x1
 725 002e 08       		.byte	0x8
 726 002f BD000000 		.4byte	.LASF1
 727 0033 02       		.uleb128 0x2
 728 0034 02       		.byte	0x2
 729 0035 05       		.byte	0x5
 730 0036 67030000 		.4byte	.LASF2
 731 003a 02       		.uleb128 0x2
 732 003b 02       		.byte	0x2
 733 003c 07       		.byte	0x7
 734 003d 9C010000 		.4byte	.LASF3
 735 0041 03       		.uleb128 0x3
 736 0042 0E000000 		.4byte	.LASF9
 737 0046 02       		.byte	0x2
 738 0047 3F       		.byte	0x3f
 739 0048 4C000000 		.4byte	0x4c
 740 004c 02       		.uleb128 0x2
 741 004d 04       		.byte	0x4
 742 004e 05       		.byte	0x5
 743 004f B2030000 		.4byte	.LASF4
 744 0053 02       		.uleb128 0x2
 745 0054 04       		.byte	0x4
 746 0055 07       		.byte	0x7
 747 0056 80010000 		.4byte	.LASF5
 748 005a 02       		.uleb128 0x2
 749 005b 08       		.byte	0x8
 750 005c 05       		.byte	0x5
 751 005d 11030000 		.4byte	.LASF6
 752 0061 02       		.uleb128 0x2
 753 0062 08       		.byte	0x8
 754 0063 07       		.byte	0x7
 755 0064 3C020000 		.4byte	.LASF7
 756 0068 04       		.uleb128 0x4
 757 0069 04       		.byte	0x4
 758 006a 05       		.byte	0x5
 759 006b 696E7400 		.ascii	"int\000"
 760 006f 02       		.uleb128 0x2
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 18


 761 0070 04       		.byte	0x4
 762 0071 07       		.byte	0x7
 763 0072 2F020000 		.4byte	.LASF8
 764 0076 03       		.uleb128 0x3
 765 0077 DD020000 		.4byte	.LASF10
 766 007b 03       		.byte	0x3
 767 007c 2C       		.byte	0x2c
 768 007d 41000000 		.4byte	0x41
 769 0081 02       		.uleb128 0x2
 770 0082 04       		.byte	0x4
 771 0083 04       		.byte	0x4
 772 0084 94000000 		.4byte	.LASF11
 773 0088 02       		.uleb128 0x2
 774 0089 08       		.byte	0x8
 775 008a 04       		.byte	0x4
 776 008b AF010000 		.4byte	.LASF12
 777 008f 02       		.uleb128 0x2
 778 0090 01       		.byte	0x1
 779 0091 08       		.byte	0x8
 780 0092 35030000 		.4byte	.LASF13
 781 0096 02       		.uleb128 0x2
 782 0097 08       		.byte	0x8
 783 0098 04       		.byte	0x4
 784 0099 BB030000 		.4byte	.LASF14
 785 009d 02       		.uleb128 0x2
 786 009e 04       		.byte	0x4
 787 009f 07       		.byte	0x7
 788 00a0 E5020000 		.4byte	.LASF15
 789 00a4 05       		.uleb128 0x5
 790 00a5 FE010000 		.4byte	.LASF16
 791 00a9 01       		.byte	0x1
 792 00aa 24       		.byte	0x24
 793 00ab 00000000 		.4byte	.LFB64
 794 00af 0C000000 		.4byte	.LFE64-.LFB64
 795 00b3 01       		.uleb128 0x1
 796 00b4 9C       		.byte	0x9c
 797 00b5 C7000000 		.4byte	0xc7
 798 00b9 06       		.uleb128 0x6
 799 00ba E3010000 		.4byte	.LASF18
 800 00be 01       		.byte	0x1
 801 00bf 24       		.byte	0x24
 802 00c0 68000000 		.4byte	0x68
 803 00c4 01       		.uleb128 0x1
 804 00c5 50       		.byte	0x50
 805 00c6 00       		.byte	0
 806 00c7 05       		.uleb128 0x5
 807 00c8 A6030000 		.4byte	.LASF17
 808 00cc 01       		.byte	0x1
 809 00cd 4B       		.byte	0x4b
 810 00ce 00000000 		.4byte	.LFB66
 811 00d2 1E000000 		.4byte	.LFE66-.LFB66
 812 00d6 01       		.uleb128 0x1
 813 00d7 9C       		.byte	0x9c
 814 00d8 10010000 		.4byte	0x110
 815 00dc 07       		.uleb128 0x7
 816 00dd 26020000 		.4byte	.LASF19
 817 00e1 01       		.byte	0x1
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 19


 818 00e2 4B       		.byte	0x4b
 819 00e3 10010000 		.4byte	0x110
 820 00e7 00000000 		.4byte	.LLST0
 821 00eb 08       		.uleb128 0x8
 822 00ec 0A000000 		.4byte	.LVL3
 823 00f0 22040000 		.4byte	0x422
 824 00f4 08       		.uleb128 0x8
 825 00f5 10000000 		.4byte	.LVL4
 826 00f9 2D040000 		.4byte	0x42d
 827 00fd 08       		.uleb128 0x8
 828 00fe 16000000 		.4byte	.LVL5
 829 0102 38040000 		.4byte	0x438
 830 0106 08       		.uleb128 0x8
 831 0107 1C000000 		.4byte	.LVL6
 832 010b 43040000 		.4byte	0x443
 833 010f 00       		.byte	0
 834 0110 09       		.uleb128 0x9
 835 0111 04       		.byte	0x4
 836 0112 68000000 		.4byte	0x68
 837 0116 0A       		.uleb128 0xa
 838 0117 B6020000 		.4byte	.LASF20
 839 011b 01       		.byte	0x1
 840 011c 29       		.byte	0x29
 841 011d 68000000 		.4byte	0x68
 842 0121 00000000 		.4byte	.LFB65
 843 0125 CC000000 		.4byte	.LFE65-.LFB65
 844 0129 01       		.uleb128 0x1
 845 012a 9C       		.byte	0x9c
 846 012b 81010000 		.4byte	0x181
 847 012f 08       		.uleb128 0x8
 848 0130 06000000 		.4byte	.LVL7
 849 0134 4E040000 		.4byte	0x44e
 850 0138 08       		.uleb128 0x8
 851 0139 0C000000 		.4byte	.LVL8
 852 013d 59040000 		.4byte	0x459
 853 0141 08       		.uleb128 0x8
 854 0142 12000000 		.4byte	.LVL9
 855 0146 64040000 		.4byte	0x464
 856 014a 08       		.uleb128 0x8
 857 014b 18000000 		.4byte	.LVL10
 858 014f 6F040000 		.4byte	0x46f
 859 0153 08       		.uleb128 0x8
 860 0154 36000000 		.4byte	.LVL11
 861 0158 C7000000 		.4byte	0xc7
 862 015c 08       		.uleb128 0x8
 863 015d 46000000 		.4byte	.LVL12
 864 0161 7A040000 		.4byte	0x47a
 865 0165 08       		.uleb128 0x8
 866 0166 6E000000 		.4byte	.LVL13
 867 016a C7000000 		.4byte	0xc7
 868 016e 08       		.uleb128 0x8
 869 016f 82000000 		.4byte	.LVL14
 870 0173 85040000 		.4byte	0x485
 871 0177 08       		.uleb128 0x8
 872 0178 AA000000 		.4byte	.LVL15
 873 017c C7000000 		.4byte	0xc7
 874 0180 00       		.byte	0
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 20


 875 0181 05       		.uleb128 0x5
 876 0182 00000000 		.4byte	.LASF21
 877 0186 01       		.byte	0x1
 878 0187 54       		.byte	0x54
 879 0188 00000000 		.4byte	.LFB67
 880 018c 0C000000 		.4byte	.LFE67-.LFB67
 881 0190 01       		.uleb128 0x1
 882 0191 9C       		.byte	0x9c
 883 0192 A4010000 		.4byte	0x1a4
 884 0196 06       		.uleb128 0x6
 885 0197 E3010000 		.4byte	.LASF18
 886 019b 01       		.byte	0x1
 887 019c 54       		.byte	0x54
 888 019d 68000000 		.4byte	0x68
 889 01a1 01       		.uleb128 0x1
 890 01a2 50       		.byte	0x50
 891 01a3 00       		.byte	0
 892 01a4 05       		.uleb128 0x5
 893 01a5 72000000 		.4byte	.LASF22
 894 01a9 01       		.byte	0x1
 895 01aa 7C       		.byte	0x7c
 896 01ab 00000000 		.4byte	.LFB69
 897 01af 1E000000 		.4byte	.LFE69-.LFB69
 898 01b3 01       		.uleb128 0x1
 899 01b4 9C       		.byte	0x9c
 900 01b5 ED010000 		.4byte	0x1ed
 901 01b9 07       		.uleb128 0x7
 902 01ba 26020000 		.4byte	.LASF19
 903 01be 01       		.byte	0x1
 904 01bf 7C       		.byte	0x7c
 905 01c0 10010000 		.4byte	0x110
 906 01c4 1E000000 		.4byte	.LLST1
 907 01c8 08       		.uleb128 0x8
 908 01c9 0A000000 		.4byte	.LVL19
 909 01cd 90040000 		.4byte	0x490
 910 01d1 08       		.uleb128 0x8
 911 01d2 10000000 		.4byte	.LVL20
 912 01d6 9B040000 		.4byte	0x49b
 913 01da 08       		.uleb128 0x8
 914 01db 16000000 		.4byte	.LVL21
 915 01df A6040000 		.4byte	0x4a6
 916 01e3 08       		.uleb128 0x8
 917 01e4 1C000000 		.4byte	.LVL22
 918 01e8 B1040000 		.4byte	0x4b1
 919 01ec 00       		.byte	0
 920 01ed 0A       		.uleb128 0xa
 921 01ee 3A030000 		.4byte	.LASF23
 922 01f2 01       		.byte	0x1
 923 01f3 59       		.byte	0x59
 924 01f4 68000000 		.4byte	0x68
 925 01f8 00000000 		.4byte	.LFB68
 926 01fc D8000000 		.4byte	.LFE68-.LFB68
 927 0200 01       		.uleb128 0x1
 928 0201 9C       		.byte	0x9c
 929 0202 58020000 		.4byte	0x258
 930 0206 08       		.uleb128 0x8
 931 0207 06000000 		.4byte	.LVL23
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 21


 932 020b BC040000 		.4byte	0x4bc
 933 020f 08       		.uleb128 0x8
 934 0210 0C000000 		.4byte	.LVL24
 935 0214 C7040000 		.4byte	0x4c7
 936 0218 08       		.uleb128 0x8
 937 0219 12000000 		.4byte	.LVL25
 938 021d D2040000 		.4byte	0x4d2
 939 0221 08       		.uleb128 0x8
 940 0222 18000000 		.4byte	.LVL26
 941 0226 DD040000 		.4byte	0x4dd
 942 022a 08       		.uleb128 0x8
 943 022b 38000000 		.4byte	.LVL27
 944 022f A4010000 		.4byte	0x1a4
 945 0233 08       		.uleb128 0x8
 946 0234 48000000 		.4byte	.LVL28
 947 0238 E8040000 		.4byte	0x4e8
 948 023c 08       		.uleb128 0x8
 949 023d 74000000 		.4byte	.LVL29
 950 0241 A4010000 		.4byte	0x1a4
 951 0245 08       		.uleb128 0x8
 952 0246 88000000 		.4byte	.LVL30
 953 024a F3040000 		.4byte	0x4f3
 954 024e 08       		.uleb128 0x8
 955 024f B4000000 		.4byte	.LVL31
 956 0253 A4010000 		.4byte	0x1a4
 957 0257 00       		.byte	0
 958 0258 05       		.uleb128 0x5
 959 0259 D8010000 		.4byte	.LASF24
 960 025d 01       		.byte	0x1
 961 025e 85       		.byte	0x85
 962 025f 00000000 		.4byte	.LFB70
 963 0263 70000000 		.4byte	.LFE70-.LFB70
 964 0267 01       		.uleb128 0x1
 965 0268 9C       		.byte	0x9c
 966 0269 F2020000 		.4byte	0x2f2
 967 026d 08       		.uleb128 0x8
 968 026e 0C000000 		.4byte	.LVL32
 969 0272 16010000 		.4byte	0x116
 970 0276 08       		.uleb128 0x8
 971 0277 12000000 		.4byte	.LVL33
 972 027b 4E040000 		.4byte	0x44e
 973 027f 08       		.uleb128 0x8
 974 0280 1A000000 		.4byte	.LVL34
 975 0284 59040000 		.4byte	0x459
 976 0288 08       		.uleb128 0x8
 977 0289 22000000 		.4byte	.LVL35
 978 028d 64040000 		.4byte	0x464
 979 0291 08       		.uleb128 0x8
 980 0292 2A000000 		.4byte	.LVL36
 981 0296 6F040000 		.4byte	0x46f
 982 029a 0B       		.uleb128 0xb
 983 029b 34000000 		.4byte	.LVL37
 984 029f C7000000 		.4byte	0xc7
 985 02a3 B1020000 		.4byte	0x2b1
 986 02a7 0C       		.uleb128 0xc
 987 02a8 01       		.uleb128 0x1
 988 02a9 50       		.byte	0x50
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 22


 989 02aa 05       		.uleb128 0x5
 990 02ab 03       		.byte	0x3
 991 02ac 08000000 		.4byte	.LANCHOR0+8
 992 02b0 00       		.byte	0
 993 02b1 08       		.uleb128 0x8
 994 02b2 3E000000 		.4byte	.LVL38
 995 02b6 ED010000 		.4byte	0x1ed
 996 02ba 08       		.uleb128 0x8
 997 02bb 44000000 		.4byte	.LVL39
 998 02bf BC040000 		.4byte	0x4bc
 999 02c3 08       		.uleb128 0x8
 1000 02c4 4C000000 		.4byte	.LVL40
 1001 02c8 C7040000 		.4byte	0x4c7
 1002 02cc 08       		.uleb128 0x8
 1003 02cd 54000000 		.4byte	.LVL41
 1004 02d1 D2040000 		.4byte	0x4d2
 1005 02d5 08       		.uleb128 0x8
 1006 02d6 5C000000 		.4byte	.LVL42
 1007 02da DD040000 		.4byte	0x4dd
 1008 02de 0D       		.uleb128 0xd
 1009 02df 66000000 		.4byte	.LVL43
 1010 02e3 A4010000 		.4byte	0x1a4
 1011 02e7 0C       		.uleb128 0xc
 1012 02e8 01       		.uleb128 0x1
 1013 02e9 50       		.byte	0x50
 1014 02ea 05       		.uleb128 0x5
 1015 02eb 03       		.byte	0x3
 1016 02ec 08000000 		.4byte	.LANCHOR0+8
 1017 02f0 00       		.byte	0
 1018 02f1 00       		.byte	0
 1019 02f2 0A       		.uleb128 0xa
 1020 02f3 D3020000 		.4byte	.LASF25
 1021 02f7 01       		.byte	0x1
 1022 02f8 9A       		.byte	0x9a
 1023 02f9 15030000 		.4byte	0x315
 1024 02fd 00000000 		.4byte	.LFB71
 1025 0301 0E000000 		.4byte	.LFE71-.LFB71
 1026 0305 01       		.uleb128 0x1
 1027 0306 9C       		.byte	0x9c
 1028 0307 15030000 		.4byte	0x315
 1029 030b 08       		.uleb128 0x8
 1030 030c 06000000 		.4byte	.LVL44
 1031 0310 85040000 		.4byte	0x485
 1032 0314 00       		.byte	0
 1033 0315 02       		.uleb128 0x2
 1034 0316 01       		.byte	0x1
 1035 0317 02       		.byte	0x2
 1036 0318 E6030000 		.4byte	.LASF26
 1037 031c 0A       		.uleb128 0xa
 1038 031d 42000000 		.4byte	.LASF27
 1039 0321 01       		.byte	0x1
 1040 0322 9C       		.byte	0x9c
 1041 0323 15030000 		.4byte	0x315
 1042 0327 00000000 		.4byte	.LFB72
 1043 032b 0E000000 		.4byte	.LFE72-.LFB72
 1044 032f 01       		.uleb128 0x1
 1045 0330 9C       		.byte	0x9c
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 23


 1046 0331 3F030000 		.4byte	0x33f
 1047 0335 08       		.uleb128 0x8
 1048 0336 06000000 		.4byte	.LVL45
 1049 033a 7A040000 		.4byte	0x47a
 1050 033e 00       		.byte	0
 1051 033f 0A       		.uleb128 0xa
 1052 0340 71030000 		.4byte	.LASF28
 1053 0344 01       		.byte	0x1
 1054 0345 9E       		.byte	0x9e
 1055 0346 15030000 		.4byte	0x315
 1056 034a 00000000 		.4byte	.LFB73
 1057 034e 0E000000 		.4byte	.LFE73-.LFB73
 1058 0352 01       		.uleb128 0x1
 1059 0353 9C       		.byte	0x9c
 1060 0354 62030000 		.4byte	0x362
 1061 0358 08       		.uleb128 0x8
 1062 0359 06000000 		.4byte	.LVL46
 1063 035d F3040000 		.4byte	0x4f3
 1064 0361 00       		.byte	0
 1065 0362 0A       		.uleb128 0xa
 1066 0363 92010000 		.4byte	.LASF29
 1067 0367 01       		.byte	0x1
 1068 0368 A0       		.byte	0xa0
 1069 0369 15030000 		.4byte	0x315
 1070 036d 00000000 		.4byte	.LFB74
 1071 0371 0E000000 		.4byte	.LFE74-.LFB74
 1072 0375 01       		.uleb128 0x1
 1073 0376 9C       		.byte	0x9c
 1074 0377 85030000 		.4byte	0x385
 1075 037b 08       		.uleb128 0x8
 1076 037c 06000000 		.4byte	.LVL47
 1077 0380 E8040000 		.4byte	0x4e8
 1078 0384 00       		.byte	0
 1079 0385 0E       		.uleb128 0xe
 1080 0386 68000000 		.4byte	0x68
 1081 038a 9B030000 		.4byte	0x39b
 1082 038e 0F       		.uleb128 0xf
 1083 038f 9D000000 		.4byte	0x9d
 1084 0393 07       		.byte	0x7
 1085 0394 0F       		.uleb128 0xf
 1086 0395 9D000000 		.4byte	0x9d
 1087 0399 03       		.byte	0x3
 1088 039a 00       		.byte	0
 1089 039b 10       		.uleb128 0x10
 1090 039c 44030000 		.4byte	.LASF30
 1091 03a0 01       		.byte	0x1
 1092 03a1 10       		.byte	0x10
 1093 03a2 85030000 		.4byte	0x385
 1094 03a6 05       		.uleb128 0x5
 1095 03a7 03       		.byte	0x3
 1096 03a8 04000000 		.4byte	stepSequence
 1097 03ac 0E       		.uleb128 0xe
 1098 03ad 68000000 		.4byte	0x68
 1099 03b1 BC030000 		.4byte	0x3bc
 1100 03b5 0F       		.uleb128 0xf
 1101 03b6 9D000000 		.4byte	0x9d
 1102 03ba 03       		.byte	0x3
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 24


 1103 03bb 00       		.byte	0
 1104 03bc 11       		.uleb128 0x11
 1105 03bd 6F666600 		.ascii	"off\000"
 1106 03c1 01       		.byte	0x1
 1107 03c2 1A       		.byte	0x1a
 1108 03c3 AC030000 		.4byte	0x3ac
 1109 03c7 05       		.uleb128 0x5
 1110 03c8 03       		.byte	0x3
 1111 03c9 08000000 		.4byte	off
 1112 03cd 10       		.uleb128 0x10
 1113 03ce 04030000 		.4byte	.LASF31
 1114 03d2 01       		.byte	0x1
 1115 03d3 1B       		.byte	0x1b
 1116 03d4 4C000000 		.4byte	0x4c
 1117 03d8 05       		.uleb128 0x5
 1118 03d9 03       		.byte	0x3
 1119 03da 00000000 		.4byte	azimuthSteps
 1120 03de 10       		.uleb128 0x10
 1121 03df 89030000 		.4byte	.LASF32
 1122 03e3 01       		.byte	0x1
 1123 03e4 1C       		.byte	0x1c
 1124 03e5 4C000000 		.4byte	0x4c
 1125 03e9 05       		.uleb128 0x5
 1126 03ea 03       		.byte	0x3
 1127 03eb 84000000 		.4byte	elevationSteps
 1128 03ef 10       		.uleb128 0x10
 1129 03f0 53020000 		.4byte	.LASF33
 1130 03f4 01       		.byte	0x1
 1131 03f5 1D       		.byte	0x1d
 1132 03f6 68000000 		.4byte	0x68
 1133 03fa 05       		.uleb128 0x5
 1134 03fb 03       		.byte	0x3
 1135 03fc 00000000 		.4byte	aStep
 1136 0400 10       		.uleb128 0x10
 1137 0401 20020000 		.4byte	.LASF34
 1138 0405 01       		.byte	0x1
 1139 0406 1E       		.byte	0x1e
 1140 0407 68000000 		.4byte	0x68
 1141 040b 05       		.uleb128 0x5
 1142 040c 03       		.byte	0x3
 1143 040d 04000000 		.4byte	eStep
 1144 0411 12       		.uleb128 0x12
 1145 0412 B6010000 		.4byte	.LASF58
 1146 0416 10       		.byte	0x10
 1147 0417 1207     		.2byte	0x712
 1148 0419 1D040000 		.4byte	0x41d
 1149 041d 13       		.uleb128 0x13
 1150 041e 76000000 		.4byte	0x76
 1151 0422 14       		.uleb128 0x14
 1152 0423 5E000000 		.4byte	.LASF35
 1153 0427 5E000000 		.4byte	.LASF35
 1154 042b 04       		.byte	0x4
 1155 042c 26       		.byte	0x26
 1156 042d 14       		.uleb128 0x14
 1157 042e 59010000 		.4byte	.LASF36
 1158 0432 59010000 		.4byte	.LASF36
 1159 0436 05       		.byte	0x5
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 25


 1160 0437 26       		.byte	0x26
 1161 0438 14       		.uleb128 0x14
 1162 0439 80000000 		.4byte	.LASF37
 1163 043d 80000000 		.4byte	.LASF37
 1164 0441 06       		.byte	0x6
 1165 0442 26       		.byte	0x26
 1166 0443 14       		.uleb128 0x14
 1167 0444 EC030000 		.4byte	.LASF38
 1168 0448 EC030000 		.4byte	.LASF38
 1169 044c 07       		.byte	0x7
 1170 044d 26       		.byte	0x26
 1171 044e 14       		.uleb128 0x14
 1172 044f 6D010000 		.4byte	.LASF39
 1173 0453 6D010000 		.4byte	.LASF39
 1174 0457 04       		.byte	0x4
 1175 0458 29       		.byte	0x29
 1176 0459 14       		.uleb128 0x14
 1177 045a 00040000 		.4byte	.LASF40
 1178 045e 00040000 		.4byte	.LASF40
 1179 0462 05       		.byte	0x5
 1180 0463 29       		.byte	0x29
 1181 0464 14       		.uleb128 0x14
 1182 0465 D3030000 		.4byte	.LASF41
 1183 0469 D3030000 		.4byte	.LASF41
 1184 046d 06       		.byte	0x6
 1185 046e 29       		.byte	0x29
 1186 046f 14       		.uleb128 0x14
 1187 0470 9A000000 		.4byte	.LASF42
 1188 0474 9A000000 		.4byte	.LASF42
 1189 0478 07       		.byte	0x7
 1190 0479 29       		.byte	0x29
 1191 047a 14       		.uleb128 0x14
 1192 047b 4D000000 		.4byte	.LASF43
 1193 047f 4D000000 		.4byte	.LASF43
 1194 0483 08       		.byte	0x8
 1195 0484 29       		.byte	0x29
 1196 0485 14       		.uleb128 0x14
 1197 0486 AD000000 		.4byte	.LASF44
 1198 048a AD000000 		.4byte	.LASF44
 1199 048e 09       		.byte	0x9
 1200 048f 29       		.byte	0x29
 1201 0490 14       		.uleb128 0x14
 1202 0491 0A020000 		.4byte	.LASF45
 1203 0495 0A020000 		.4byte	.LASF45
 1204 0499 0A       		.byte	0xa
 1205 049a 26       		.byte	0x26
 1206 049b 14       		.uleb128 0x14
 1207 049c 1F030000 		.4byte	.LASF46
 1208 04a0 1F030000 		.4byte	.LASF46
 1209 04a4 0B       		.byte	0xb
 1210 04a5 26       		.byte	0x26
 1211 04a6 14       		.uleb128 0x14
 1212 04a7 EE020000 		.4byte	.LASF47
 1213 04ab EE020000 		.4byte	.LASF47
 1214 04af 0C       		.byte	0xc
 1215 04b0 26       		.byte	0x26
 1216 04b1 14       		.uleb128 0x14
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 26


 1217 04b2 51030000 		.4byte	.LASF48
 1218 04b6 51030000 		.4byte	.LASF48
 1219 04ba 0D       		.byte	0xd
 1220 04bb 26       		.byte	0x26
 1221 04bc 14       		.uleb128 0x14
 1222 04bd E9010000 		.4byte	.LASF49
 1223 04c1 E9010000 		.4byte	.LASF49
 1224 04c5 0A       		.byte	0xa
 1225 04c6 29       		.byte	0x29
 1226 04c7 14       		.uleb128 0x14
 1227 04c8 18000000 		.4byte	.LASF50
 1228 04cc 18000000 		.4byte	.LASF50
 1229 04d0 0B       		.byte	0xb
 1230 04d1 29       		.byte	0x29
 1231 04d2 14       		.uleb128 0x14
 1232 04d3 2D000000 		.4byte	.LASF51
 1233 04d7 2D000000 		.4byte	.LASF51
 1234 04db 0C       		.byte	0xc
 1235 04dc 29       		.byte	0x29
 1236 04dd 14       		.uleb128 0x14
 1237 04de C3010000 		.4byte	.LASF52
 1238 04e2 C3010000 		.4byte	.LASF52
 1239 04e6 0D       		.byte	0xd
 1240 04e7 29       		.byte	0x29
 1241 04e8 14       		.uleb128 0x14
 1242 04e9 79030000 		.4byte	.LASF53
 1243 04ed 79030000 		.4byte	.LASF53
 1244 04f1 0E       		.byte	0xe
 1245 04f2 29       		.byte	0x29
 1246 04f3 14       		.uleb128 0x14
 1247 04f4 98030000 		.4byte	.LASF54
 1248 04f8 98030000 		.4byte	.LASF54
 1249 04fc 0F       		.byte	0xf
 1250 04fd 29       		.byte	0x29
 1251 04fe 00       		.byte	0
 1252              		.section	.debug_abbrev,"",%progbits
 1253              	.Ldebug_abbrev0:
 1254 0000 01       		.uleb128 0x1
 1255 0001 11       		.uleb128 0x11
 1256 0002 01       		.byte	0x1
 1257 0003 25       		.uleb128 0x25
 1258 0004 0E       		.uleb128 0xe
 1259 0005 13       		.uleb128 0x13
 1260 0006 0B       		.uleb128 0xb
 1261 0007 03       		.uleb128 0x3
 1262 0008 0E       		.uleb128 0xe
 1263 0009 1B       		.uleb128 0x1b
 1264 000a 0E       		.uleb128 0xe
 1265 000b 55       		.uleb128 0x55
 1266 000c 17       		.uleb128 0x17
 1267 000d 11       		.uleb128 0x11
 1268 000e 01       		.uleb128 0x1
 1269 000f 10       		.uleb128 0x10
 1270 0010 17       		.uleb128 0x17
 1271 0011 00       		.byte	0
 1272 0012 00       		.byte	0
 1273 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 27


 1274 0014 24       		.uleb128 0x24
 1275 0015 00       		.byte	0
 1276 0016 0B       		.uleb128 0xb
 1277 0017 0B       		.uleb128 0xb
 1278 0018 3E       		.uleb128 0x3e
 1279 0019 0B       		.uleb128 0xb
 1280 001a 03       		.uleb128 0x3
 1281 001b 0E       		.uleb128 0xe
 1282 001c 00       		.byte	0
 1283 001d 00       		.byte	0
 1284 001e 03       		.uleb128 0x3
 1285 001f 16       		.uleb128 0x16
 1286 0020 00       		.byte	0
 1287 0021 03       		.uleb128 0x3
 1288 0022 0E       		.uleb128 0xe
 1289 0023 3A       		.uleb128 0x3a
 1290 0024 0B       		.uleb128 0xb
 1291 0025 3B       		.uleb128 0x3b
 1292 0026 0B       		.uleb128 0xb
 1293 0027 49       		.uleb128 0x49
 1294 0028 13       		.uleb128 0x13
 1295 0029 00       		.byte	0
 1296 002a 00       		.byte	0
 1297 002b 04       		.uleb128 0x4
 1298 002c 24       		.uleb128 0x24
 1299 002d 00       		.byte	0
 1300 002e 0B       		.uleb128 0xb
 1301 002f 0B       		.uleb128 0xb
 1302 0030 3E       		.uleb128 0x3e
 1303 0031 0B       		.uleb128 0xb
 1304 0032 03       		.uleb128 0x3
 1305 0033 08       		.uleb128 0x8
 1306 0034 00       		.byte	0
 1307 0035 00       		.byte	0
 1308 0036 05       		.uleb128 0x5
 1309 0037 2E       		.uleb128 0x2e
 1310 0038 01       		.byte	0x1
 1311 0039 3F       		.uleb128 0x3f
 1312 003a 19       		.uleb128 0x19
 1313 003b 03       		.uleb128 0x3
 1314 003c 0E       		.uleb128 0xe
 1315 003d 3A       		.uleb128 0x3a
 1316 003e 0B       		.uleb128 0xb
 1317 003f 3B       		.uleb128 0x3b
 1318 0040 0B       		.uleb128 0xb
 1319 0041 27       		.uleb128 0x27
 1320 0042 19       		.uleb128 0x19
 1321 0043 11       		.uleb128 0x11
 1322 0044 01       		.uleb128 0x1
 1323 0045 12       		.uleb128 0x12
 1324 0046 06       		.uleb128 0x6
 1325 0047 40       		.uleb128 0x40
 1326 0048 18       		.uleb128 0x18
 1327 0049 9742     		.uleb128 0x2117
 1328 004b 19       		.uleb128 0x19
 1329 004c 01       		.uleb128 0x1
 1330 004d 13       		.uleb128 0x13
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 28


 1331 004e 00       		.byte	0
 1332 004f 00       		.byte	0
 1333 0050 06       		.uleb128 0x6
 1334 0051 05       		.uleb128 0x5
 1335 0052 00       		.byte	0
 1336 0053 03       		.uleb128 0x3
 1337 0054 0E       		.uleb128 0xe
 1338 0055 3A       		.uleb128 0x3a
 1339 0056 0B       		.uleb128 0xb
 1340 0057 3B       		.uleb128 0x3b
 1341 0058 0B       		.uleb128 0xb
 1342 0059 49       		.uleb128 0x49
 1343 005a 13       		.uleb128 0x13
 1344 005b 02       		.uleb128 0x2
 1345 005c 18       		.uleb128 0x18
 1346 005d 00       		.byte	0
 1347 005e 00       		.byte	0
 1348 005f 07       		.uleb128 0x7
 1349 0060 05       		.uleb128 0x5
 1350 0061 00       		.byte	0
 1351 0062 03       		.uleb128 0x3
 1352 0063 0E       		.uleb128 0xe
 1353 0064 3A       		.uleb128 0x3a
 1354 0065 0B       		.uleb128 0xb
 1355 0066 3B       		.uleb128 0x3b
 1356 0067 0B       		.uleb128 0xb
 1357 0068 49       		.uleb128 0x49
 1358 0069 13       		.uleb128 0x13
 1359 006a 02       		.uleb128 0x2
 1360 006b 17       		.uleb128 0x17
 1361 006c 00       		.byte	0
 1362 006d 00       		.byte	0
 1363 006e 08       		.uleb128 0x8
 1364 006f 898201   		.uleb128 0x4109
 1365 0072 00       		.byte	0
 1366 0073 11       		.uleb128 0x11
 1367 0074 01       		.uleb128 0x1
 1368 0075 31       		.uleb128 0x31
 1369 0076 13       		.uleb128 0x13
 1370 0077 00       		.byte	0
 1371 0078 00       		.byte	0
 1372 0079 09       		.uleb128 0x9
 1373 007a 0F       		.uleb128 0xf
 1374 007b 00       		.byte	0
 1375 007c 0B       		.uleb128 0xb
 1376 007d 0B       		.uleb128 0xb
 1377 007e 49       		.uleb128 0x49
 1378 007f 13       		.uleb128 0x13
 1379 0080 00       		.byte	0
 1380 0081 00       		.byte	0
 1381 0082 0A       		.uleb128 0xa
 1382 0083 2E       		.uleb128 0x2e
 1383 0084 01       		.byte	0x1
 1384 0085 3F       		.uleb128 0x3f
 1385 0086 19       		.uleb128 0x19
 1386 0087 03       		.uleb128 0x3
 1387 0088 0E       		.uleb128 0xe
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 29


 1388 0089 3A       		.uleb128 0x3a
 1389 008a 0B       		.uleb128 0xb
 1390 008b 3B       		.uleb128 0x3b
 1391 008c 0B       		.uleb128 0xb
 1392 008d 49       		.uleb128 0x49
 1393 008e 13       		.uleb128 0x13
 1394 008f 11       		.uleb128 0x11
 1395 0090 01       		.uleb128 0x1
 1396 0091 12       		.uleb128 0x12
 1397 0092 06       		.uleb128 0x6
 1398 0093 40       		.uleb128 0x40
 1399 0094 18       		.uleb128 0x18
 1400 0095 9742     		.uleb128 0x2117
 1401 0097 19       		.uleb128 0x19
 1402 0098 01       		.uleb128 0x1
 1403 0099 13       		.uleb128 0x13
 1404 009a 00       		.byte	0
 1405 009b 00       		.byte	0
 1406 009c 0B       		.uleb128 0xb
 1407 009d 898201   		.uleb128 0x4109
 1408 00a0 01       		.byte	0x1
 1409 00a1 11       		.uleb128 0x11
 1410 00a2 01       		.uleb128 0x1
 1411 00a3 31       		.uleb128 0x31
 1412 00a4 13       		.uleb128 0x13
 1413 00a5 01       		.uleb128 0x1
 1414 00a6 13       		.uleb128 0x13
 1415 00a7 00       		.byte	0
 1416 00a8 00       		.byte	0
 1417 00a9 0C       		.uleb128 0xc
 1418 00aa 8A8201   		.uleb128 0x410a
 1419 00ad 00       		.byte	0
 1420 00ae 02       		.uleb128 0x2
 1421 00af 18       		.uleb128 0x18
 1422 00b0 9142     		.uleb128 0x2111
 1423 00b2 18       		.uleb128 0x18
 1424 00b3 00       		.byte	0
 1425 00b4 00       		.byte	0
 1426 00b5 0D       		.uleb128 0xd
 1427 00b6 898201   		.uleb128 0x4109
 1428 00b9 01       		.byte	0x1
 1429 00ba 11       		.uleb128 0x11
 1430 00bb 01       		.uleb128 0x1
 1431 00bc 31       		.uleb128 0x31
 1432 00bd 13       		.uleb128 0x13
 1433 00be 00       		.byte	0
 1434 00bf 00       		.byte	0
 1435 00c0 0E       		.uleb128 0xe
 1436 00c1 01       		.uleb128 0x1
 1437 00c2 01       		.byte	0x1
 1438 00c3 49       		.uleb128 0x49
 1439 00c4 13       		.uleb128 0x13
 1440 00c5 01       		.uleb128 0x1
 1441 00c6 13       		.uleb128 0x13
 1442 00c7 00       		.byte	0
 1443 00c8 00       		.byte	0
 1444 00c9 0F       		.uleb128 0xf
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 30


 1445 00ca 21       		.uleb128 0x21
 1446 00cb 00       		.byte	0
 1447 00cc 49       		.uleb128 0x49
 1448 00cd 13       		.uleb128 0x13
 1449 00ce 2F       		.uleb128 0x2f
 1450 00cf 0B       		.uleb128 0xb
 1451 00d0 00       		.byte	0
 1452 00d1 00       		.byte	0
 1453 00d2 10       		.uleb128 0x10
 1454 00d3 34       		.uleb128 0x34
 1455 00d4 00       		.byte	0
 1456 00d5 03       		.uleb128 0x3
 1457 00d6 0E       		.uleb128 0xe
 1458 00d7 3A       		.uleb128 0x3a
 1459 00d8 0B       		.uleb128 0xb
 1460 00d9 3B       		.uleb128 0x3b
 1461 00da 0B       		.uleb128 0xb
 1462 00db 49       		.uleb128 0x49
 1463 00dc 13       		.uleb128 0x13
 1464 00dd 02       		.uleb128 0x2
 1465 00de 18       		.uleb128 0x18
 1466 00df 00       		.byte	0
 1467 00e0 00       		.byte	0
 1468 00e1 11       		.uleb128 0x11
 1469 00e2 34       		.uleb128 0x34
 1470 00e3 00       		.byte	0
 1471 00e4 03       		.uleb128 0x3
 1472 00e5 08       		.uleb128 0x8
 1473 00e6 3A       		.uleb128 0x3a
 1474 00e7 0B       		.uleb128 0xb
 1475 00e8 3B       		.uleb128 0x3b
 1476 00e9 0B       		.uleb128 0xb
 1477 00ea 49       		.uleb128 0x49
 1478 00eb 13       		.uleb128 0x13
 1479 00ec 02       		.uleb128 0x2
 1480 00ed 18       		.uleb128 0x18
 1481 00ee 00       		.byte	0
 1482 00ef 00       		.byte	0
 1483 00f0 12       		.uleb128 0x12
 1484 00f1 34       		.uleb128 0x34
 1485 00f2 00       		.byte	0
 1486 00f3 03       		.uleb128 0x3
 1487 00f4 0E       		.uleb128 0xe
 1488 00f5 3A       		.uleb128 0x3a
 1489 00f6 0B       		.uleb128 0xb
 1490 00f7 3B       		.uleb128 0x3b
 1491 00f8 05       		.uleb128 0x5
 1492 00f9 49       		.uleb128 0x49
 1493 00fa 13       		.uleb128 0x13
 1494 00fb 3F       		.uleb128 0x3f
 1495 00fc 19       		.uleb128 0x19
 1496 00fd 3C       		.uleb128 0x3c
 1497 00fe 19       		.uleb128 0x19
 1498 00ff 00       		.byte	0
 1499 0100 00       		.byte	0
 1500 0101 13       		.uleb128 0x13
 1501 0102 35       		.uleb128 0x35
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 31


 1502 0103 00       		.byte	0
 1503 0104 49       		.uleb128 0x49
 1504 0105 13       		.uleb128 0x13
 1505 0106 00       		.byte	0
 1506 0107 00       		.byte	0
 1507 0108 14       		.uleb128 0x14
 1508 0109 2E       		.uleb128 0x2e
 1509 010a 00       		.byte	0
 1510 010b 3F       		.uleb128 0x3f
 1511 010c 19       		.uleb128 0x19
 1512 010d 3C       		.uleb128 0x3c
 1513 010e 19       		.uleb128 0x19
 1514 010f 6E       		.uleb128 0x6e
 1515 0110 0E       		.uleb128 0xe
 1516 0111 03       		.uleb128 0x3
 1517 0112 0E       		.uleb128 0xe
 1518 0113 3A       		.uleb128 0x3a
 1519 0114 0B       		.uleb128 0xb
 1520 0115 3B       		.uleb128 0x3b
 1521 0116 0B       		.uleb128 0xb
 1522 0117 00       		.byte	0
 1523 0118 00       		.byte	0
 1524 0119 00       		.byte	0
 1525              		.section	.debug_loc,"",%progbits
 1526              	.Ldebug_loc0:
 1527              	.LLST0:
 1528 0000 00000000 		.4byte	.LVL1
 1529 0004 06000000 		.4byte	.LVL2
 1530 0008 0100     		.2byte	0x1
 1531 000a 50       		.byte	0x50
 1532 000b 06000000 		.4byte	.LVL2
 1533 000f 1E000000 		.4byte	.LFE66
 1534 0013 0100     		.2byte	0x1
 1535 0015 54       		.byte	0x54
 1536 0016 00000000 		.4byte	0
 1537 001a 00000000 		.4byte	0
 1538              	.LLST1:
 1539 001e 00000000 		.4byte	.LVL17
 1540 0022 06000000 		.4byte	.LVL18
 1541 0026 0100     		.2byte	0x1
 1542 0028 50       		.byte	0x50
 1543 0029 06000000 		.4byte	.LVL18
 1544 002d 1E000000 		.4byte	.LFE69
 1545 0031 0100     		.2byte	0x1
 1546 0033 54       		.byte	0x54
 1547 0034 00000000 		.4byte	0
 1548 0038 00000000 		.4byte	0
 1549              		.section	.debug_aranges,"",%progbits
 1550 0000 6C000000 		.4byte	0x6c
 1551 0004 0200     		.2byte	0x2
 1552 0006 00000000 		.4byte	.Ldebug_info0
 1553 000a 04       		.byte	0x4
 1554 000b 00       		.byte	0
 1555 000c 0000     		.2byte	0
 1556 000e 0000     		.2byte	0
 1557 0010 00000000 		.4byte	.LFB64
 1558 0014 0C000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 32


 1559 0018 00000000 		.4byte	.LFB66
 1560 001c 1E000000 		.4byte	.LFE66-.LFB66
 1561 0020 00000000 		.4byte	.LFB65
 1562 0024 CC000000 		.4byte	.LFE65-.LFB65
 1563 0028 00000000 		.4byte	.LFB67
 1564 002c 0C000000 		.4byte	.LFE67-.LFB67
 1565 0030 00000000 		.4byte	.LFB69
 1566 0034 1E000000 		.4byte	.LFE69-.LFB69
 1567 0038 00000000 		.4byte	.LFB68
 1568 003c D8000000 		.4byte	.LFE68-.LFB68
 1569 0040 00000000 		.4byte	.LFB70
 1570 0044 70000000 		.4byte	.LFE70-.LFB70
 1571 0048 00000000 		.4byte	.LFB71
 1572 004c 0E000000 		.4byte	.LFE71-.LFB71
 1573 0050 00000000 		.4byte	.LFB72
 1574 0054 0E000000 		.4byte	.LFE72-.LFB72
 1575 0058 00000000 		.4byte	.LFB73
 1576 005c 0E000000 		.4byte	.LFE73-.LFB73
 1577 0060 00000000 		.4byte	.LFB74
 1578 0064 0E000000 		.4byte	.LFE74-.LFB74
 1579 0068 00000000 		.4byte	0
 1580 006c 00000000 		.4byte	0
 1581              		.section	.debug_ranges,"",%progbits
 1582              	.Ldebug_ranges0:
 1583 0000 00000000 		.4byte	.LFB64
 1584 0004 0C000000 		.4byte	.LFE64
 1585 0008 00000000 		.4byte	.LFB66
 1586 000c 1E000000 		.4byte	.LFE66
 1587 0010 00000000 		.4byte	.LFB65
 1588 0014 CC000000 		.4byte	.LFE65
 1589 0018 00000000 		.4byte	.LFB67
 1590 001c 0C000000 		.4byte	.LFE67
 1591 0020 00000000 		.4byte	.LFB69
 1592 0024 1E000000 		.4byte	.LFE69
 1593 0028 00000000 		.4byte	.LFB68
 1594 002c D8000000 		.4byte	.LFE68
 1595 0030 00000000 		.4byte	.LFB70
 1596 0034 70000000 		.4byte	.LFE70
 1597 0038 00000000 		.4byte	.LFB71
 1598 003c 0E000000 		.4byte	.LFE71
 1599 0040 00000000 		.4byte	.LFB72
 1600 0044 0E000000 		.4byte	.LFE72
 1601 0048 00000000 		.4byte	.LFB73
 1602 004c 0E000000 		.4byte	.LFE73
 1603 0050 00000000 		.4byte	.LFB74
 1604 0054 0E000000 		.4byte	.LFE74
 1605 0058 00000000 		.4byte	0
 1606 005c 00000000 		.4byte	0
 1607              		.section	.debug_line,"",%progbits
 1608              	.Ldebug_line0:
 1609 0000 2A030000 		.section	.debug_str,"MS",%progbits,1
 1609      0200F401 
 1609      00000201 
 1609      FB0E0D00 
 1609      01010101 
 1610              	.LASF21:
 1611 0000 6D6F7665 		.ascii	"moveElevation\000"
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 33


 1611      456C6576 
 1611      6174696F 
 1611      6E00
 1612              	.LASF9:
 1613 000e 5F5F696E 		.ascii	"__int32_t\000"
 1613      7433325F 
 1613      7400
 1614              	.LASF50:
 1615 0018 456C6576 		.ascii	"Elevation_Pin_2_Read\000"
 1615      6174696F 
 1615      6E5F5069 
 1615      6E5F325F 
 1615      52656164 
 1616              	.LASF51:
 1617 002d 456C6576 		.ascii	"Elevation_Pin_3_Read\000"
 1617      6174696F 
 1617      6E5F5069 
 1617      6E5F335F 
 1617      52656164 
 1618              	.LASF27:
 1619 0042 6C696D69 		.ascii	"limitRight\000"
 1619      74526967 
 1619      687400
 1620              	.LASF43:
 1621 004d 4C696D69 		.ascii	"Limit_Right_Read\000"
 1621      745F5269 
 1621      6768745F 
 1621      52656164 
 1621      00
 1622              	.LASF35:
 1623 005e 417A696D 		.ascii	"Azimuth_Pin_1_Write\000"
 1623      7574685F 
 1623      50696E5F 
 1623      315F5772 
 1623      69746500 
 1624              	.LASF22:
 1625 0072 656C6576 		.ascii	"elevationStep\000"
 1625      6174696F 
 1625      6E537465 
 1625      7000
 1626              	.LASF37:
 1627 0080 417A696D 		.ascii	"Azimuth_Pin_3_Write\000"
 1627      7574685F 
 1627      50696E5F 
 1627      335F5772 
 1627      69746500 
 1628              	.LASF11:
 1629 0094 666C6F61 		.ascii	"float\000"
 1629      7400
 1630              	.LASF42:
 1631 009a 417A696D 		.ascii	"Azimuth_Pin_4_Read\000"
 1631      7574685F 
 1631      50696E5F 
 1631      345F5265 
 1631      616400
 1632              	.LASF44:
 1633 00ad 4C696D69 		.ascii	"Limit_Left_Read\000"
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 34


 1633      745F4C65 
 1633      66745F52 
 1633      65616400 
 1634              	.LASF1:
 1635 00bd 756E7369 		.ascii	"unsigned char\000"
 1635      676E6564 
 1635      20636861 
 1635      7200
 1636              	.LASF55:
 1637 00cb 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1637      43313120 
 1637      352E342E 
 1637      31203230 
 1637      31363036 
 1638 00fe 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1638      20726576 
 1638      6973696F 
 1638      6E203233 
 1638      37373135 
 1639 0131 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1639      66756E63 
 1639      74696F6E 
 1639      2D736563 
 1639      74696F6E 
 1640              	.LASF36:
 1641 0159 417A696D 		.ascii	"Azimuth_Pin_2_Write\000"
 1641      7574685F 
 1641      50696E5F 
 1641      325F5772 
 1641      69746500 
 1642              	.LASF39:
 1643 016d 417A696D 		.ascii	"Azimuth_Pin_1_Read\000"
 1643      7574685F 
 1643      50696E5F 
 1643      315F5265 
 1643      616400
 1644              	.LASF5:
 1645 0180 6C6F6E67 		.ascii	"long unsigned int\000"
 1645      20756E73 
 1645      69676E65 
 1645      6420696E 
 1645      7400
 1646              	.LASF29:
 1647 0192 6C696D69 		.ascii	"limitDown\000"
 1647      74446F77 
 1647      6E00
 1648              	.LASF3:
 1649 019c 73686F72 		.ascii	"short unsigned int\000"
 1649      7420756E 
 1649      7369676E 
 1649      65642069 
 1649      6E7400
 1650              	.LASF12:
 1651 01af 646F7562 		.ascii	"double\000"
 1651      6C6500
 1652              	.LASF58:
 1653 01b6 49544D5F 		.ascii	"ITM_RxBuffer\000"
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 35


 1653      52784275 
 1653      66666572 
 1653      00
 1654              	.LASF52:
 1655 01c3 456C6576 		.ascii	"Elevation_Pin_4_Read\000"
 1655      6174696F 
 1655      6E5F5069 
 1655      6E5F345F 
 1655      52656164 
 1656              	.LASF24:
 1657 01d8 4D4F544F 		.ascii	"MOTOR_STEP\000"
 1657      525F5354 
 1657      455000
 1658              	.LASF18:
 1659 01e3 73746570 		.ascii	"steps\000"
 1659      7300
 1660              	.LASF49:
 1661 01e9 456C6576 		.ascii	"Elevation_Pin_1_Read\000"
 1661      6174696F 
 1661      6E5F5069 
 1661      6E5F315F 
 1661      52656164 
 1662              	.LASF16:
 1663 01fe 6D6F7665 		.ascii	"moveAzimuth\000"
 1663      417A696D 
 1663      75746800 
 1664              	.LASF45:
 1665 020a 456C6576 		.ascii	"Elevation_Pin_1_Write\000"
 1665      6174696F 
 1665      6E5F5069 
 1665      6E5F315F 
 1665      57726974 
 1666              	.LASF34:
 1667 0220 65537465 		.ascii	"eStep\000"
 1667      7000
 1668              	.LASF19:
 1669 0226 73657175 		.ascii	"sequence\000"
 1669      656E6365 
 1669      00
 1670              	.LASF8:
 1671 022f 756E7369 		.ascii	"unsigned int\000"
 1671      676E6564 
 1671      20696E74 
 1671      00
 1672              	.LASF7:
 1673 023c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1673      206C6F6E 
 1673      6720756E 
 1673      7369676E 
 1673      65642069 
 1674              	.LASF33:
 1675 0253 61537465 		.ascii	"aStep\000"
 1675      7000
 1676              	.LASF57:
 1677 0259 433A5C55 		.ascii	"C:\\Users\\perhi\\OneDrive - Aarhus universitet\\Do"
 1677      73657273 
 1677      5C706572 
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 36


 1677      68695C4F 
 1677      6E654472 
 1678 0288 6B756D65 		.ascii	"kumenter\\PSoC Creator\\WAM_PSoC\\Wam_PSoC.cydsn\000"
 1678      6E746572 
 1678      5C50536F 
 1678      43204372 
 1678      6561746F 
 1679              	.LASF20:
 1680 02b6 617A696D 		.ascii	"azimuth\000"
 1680      75746800 
 1681              	.LASF56:
 1682 02be 53746570 		.ascii	"StepperMotorDriver.c\000"
 1682      7065724D 
 1682      6F746F72 
 1682      44726976 
 1682      65722E63 
 1683              	.LASF25:
 1684 02d3 6C696D69 		.ascii	"limitLeft\000"
 1684      744C6566 
 1684      7400
 1685              	.LASF10:
 1686 02dd 696E7433 		.ascii	"int32_t\000"
 1686      325F7400 
 1687              	.LASF15:
 1688 02e5 73697A65 		.ascii	"sizetype\000"
 1688      74797065 
 1688      00
 1689              	.LASF47:
 1690 02ee 456C6576 		.ascii	"Elevation_Pin_3_Write\000"
 1690      6174696F 
 1690      6E5F5069 
 1690      6E5F335F 
 1690      57726974 
 1691              	.LASF31:
 1692 0304 617A696D 		.ascii	"azimuthSteps\000"
 1692      75746853 
 1692      74657073 
 1692      00
 1693              	.LASF6:
 1694 0311 6C6F6E67 		.ascii	"long long int\000"
 1694      206C6F6E 
 1694      6720696E 
 1694      7400
 1695              	.LASF46:
 1696 031f 456C6576 		.ascii	"Elevation_Pin_2_Write\000"
 1696      6174696F 
 1696      6E5F5069 
 1696      6E5F325F 
 1696      57726974 
 1697              	.LASF13:
 1698 0335 63686172 		.ascii	"char\000"
 1698      00
 1699              	.LASF23:
 1700 033a 656C6576 		.ascii	"elevation\000"
 1700      6174696F 
 1700      6E00
 1701              	.LASF30:
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 37


 1702 0344 73746570 		.ascii	"stepSequence\000"
 1702      53657175 
 1702      656E6365 
 1702      00
 1703              	.LASF48:
 1704 0351 456C6576 		.ascii	"Elevation_Pin_4_Write\000"
 1704      6174696F 
 1704      6E5F5069 
 1704      6E5F345F 
 1704      57726974 
 1705              	.LASF2:
 1706 0367 73686F72 		.ascii	"short int\000"
 1706      7420696E 
 1706      7400
 1707              	.LASF28:
 1708 0371 6C696D69 		.ascii	"limitUp\000"
 1708      74557000 
 1709              	.LASF53:
 1710 0379 4C696D69 		.ascii	"Limit_Down_Read\000"
 1710      745F446F 
 1710      776E5F52 
 1710      65616400 
 1711              	.LASF32:
 1712 0389 656C6576 		.ascii	"elevationSteps\000"
 1712      6174696F 
 1712      6E537465 
 1712      707300
 1713              	.LASF54:
 1714 0398 4C696D69 		.ascii	"Limit_Up_Read\000"
 1714      745F5570 
 1714      5F526561 
 1714      6400
 1715              	.LASF17:
 1716 03a6 617A696D 		.ascii	"azimuthStep\000"
 1716      75746853 
 1716      74657000 
 1717              	.LASF4:
 1718 03b2 6C6F6E67 		.ascii	"long int\000"
 1718      20696E74 
 1718      00
 1719              	.LASF14:
 1720 03bb 6C6F6E67 		.ascii	"long double\000"
 1720      20646F75 
 1720      626C6500 
 1721              	.LASF0:
 1722 03c7 7369676E 		.ascii	"signed char\000"
 1722      65642063 
 1722      68617200 
 1723              	.LASF41:
 1724 03d3 417A696D 		.ascii	"Azimuth_Pin_3_Read\000"
 1724      7574685F 
 1724      50696E5F 
 1724      335F5265 
 1724      616400
 1725              	.LASF26:
 1726 03e6 5F426F6F 		.ascii	"_Bool\000"
 1726      6C00
ARM GAS  C:\Users\perhi\AppData\Local\Temp\ccEcv2qo.s 			page 38


 1727              	.LASF38:
 1728 03ec 417A696D 		.ascii	"Azimuth_Pin_4_Write\000"
 1728      7574685F 
 1728      50696E5F 
 1728      345F5772 
 1728      69746500 
 1729              	.LASF40:
 1730 0400 417A696D 		.ascii	"Azimuth_Pin_2_Read\000"
 1730      7574685F 
 1730      50696E5F 
 1730      325F5265 
 1730      616400
 1731              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
