ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"StepperMotorDriver.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.moveAzimuth,"ax",%progbits
  20              		.align	2
  21              		.global	moveAzimuth
  22              		.thumb
  23              		.thumb_func
  24              		.type	moveAzimuth, %function
  25              	moveAzimuth:
  26              	.LFB64:
  27              		.file 1 "StepperMotorDriver.c"
   1:StepperMotorDriver.c **** /* ========================================
   2:StepperMotorDriver.c ****  *
   3:StepperMotorDriver.c ****  *          Thomas Degn Larsen
   4:StepperMotorDriver.c ****  *
   5:StepperMotorDriver.c ****  * ========================================
   6:StepperMotorDriver.c **** */
   7:StepperMotorDriver.c **** 
   8:StepperMotorDriver.c **** #include "project.h"
   9:StepperMotorDriver.c **** #include "StepperMotorDriver.h"
  10:StepperMotorDriver.c **** #include <stdio.h>
  11:StepperMotorDriver.c **** #include <math.h>
  12:StepperMotorDriver.c **** #define STEPS 8                         // number of steps before repeat (half step = 400 steps pr 
  13:StepperMotorDriver.c **** 
  14:StepperMotorDriver.c **** /******************
  15:StepperMotorDriver.c **** **   Variables   **
  16:StepperMotorDriver.c **** ******************/
  17:StepperMotorDriver.c **** static int stepSequence[STEPS][4] = {   // step sequence for motors
  18:StepperMotorDriver.c ****     {1, 0, 0, 1},                       // step 1
  19:StepperMotorDriver.c ****     {0, 0, 0, 1},                       // step 2
  20:StepperMotorDriver.c ****     {0, 0, 1, 1},                       // step 3
  21:StepperMotorDriver.c ****     {0, 0, 1, 0},                       // step 4
  22:StepperMotorDriver.c ****     {0, 1, 1, 0},                       // step 5
  23:StepperMotorDriver.c ****     {0, 1, 0, 0},                       // step 6
  24:StepperMotorDriver.c ****     {1, 1, 0, 0},                       // step 7
  25:StepperMotorDriver.c ****     {1, 0, 0, 0}                        // step 8
  26:StepperMotorDriver.c **** };
  27:StepperMotorDriver.c ****     
  28:StepperMotorDriver.c **** static int off[4] = {0, 0, 0, 0};       // step used to turn of motors
  29:StepperMotorDriver.c **** static long azimuthSteps = 8000000;     // counting steps for steppermotor moving solar panel horit
  30:StepperMotorDriver.c **** static long elevationSteps = 8000000;   // counting steps for steppermotor moving solar panel verti
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 2


  31:StepperMotorDriver.c **** static int aStep = 0;                   // number of steps to be taken with azimuth motor
  32:StepperMotorDriver.c **** static int eStep = 0;                   // number of steps to be taken with elevation motor
  33:StepperMotorDriver.c **** static int16_t currentAsteps = 0;
  34:StepperMotorDriver.c **** static int16_t currentEsteps = 0;
  35:StepperMotorDriver.c **** 
  36:StepperMotorDriver.c **** 
  37:StepperMotorDriver.c **** /******************
  38:StepperMotorDriver.c **** **   Functions   **
  39:StepperMotorDriver.c **** ******************/
  40:StepperMotorDriver.c **** void moveAzimuth(int steps)
  41:StepperMotorDriver.c **** {   // function to set steps to be takben by azimuth motor
  28              		.loc 1 41 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  42:StepperMotorDriver.c ****     aStep = steps;
  34              		.loc 1 42 0
  35 0000 014B     		ldr	r3, .L2
  36 0002 1860     		str	r0, [r3]
  37 0004 7047     		bx	lr
  38              	.L3:
  39 0006 00BF     		.align	2
  40              	.L2:
  41 0008 00000000 		.word	.LANCHOR0
  42              		.cfi_endproc
  43              	.LFE64:
  44              		.size	moveAzimuth, .-moveAzimuth
  45              		.global	__aeabi_i2f
  46              		.global	__aeabi_fmul
  47              		.global	__aeabi_f2d
  48              		.global	__aeabi_d2iz
  49              		.section	.text.getAzimuth,"ax",%progbits
  50              		.align	2
  51              		.global	getAzimuth
  52              		.thumb
  53              		.thumb_func
  54              		.type	getAzimuth, %function
  55              	getAzimuth:
  56              	.LFB65:
  43:StepperMotorDriver.c **** }
  44:StepperMotorDriver.c **** 
  45:StepperMotorDriver.c **** int16_t getAzimuth()
  46:StepperMotorDriver.c **** {
  57              		.loc 1 46 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 64
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61 0000 30B5     		push	{r4, r5, lr}
  62              		.cfi_def_cfa_offset 12
  63              		.cfi_offset 4, -12
  64              		.cfi_offset 5, -8
  65              		.cfi_offset 14, -4
  66 0002 91B0     		sub	sp, sp, #68
  67              		.cfi_def_cfa_offset 80
  68              	.LVL1:
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 3


  47:StepperMotorDriver.c ****     const float degress_per_step = 0.9 / 18; // 1:18 gear ratio
  48:StepperMotorDriver.c ****     
  49:StepperMotorDriver.c ****     float total_degrees = currentAsteps * degress_per_step;
  69              		.loc 1 49 0
  70 0004 0D4B     		ldr	r3, .L6
  71 0006 B3F90450 		ldrsh	r5, [r3, #4]
  72 000a 2846     		mov	r0, r5
  73 000c FFF7FEFF 		bl	__aeabi_i2f
  74              	.LVL2:
  75 0010 0B49     		ldr	r1, .L6+4
  76 0012 FFF7FEFF 		bl	__aeabi_fmul
  77              	.LVL3:
  50:StepperMotorDriver.c ****     int16_t rounded = (int16_t)round(total_degrees);
  78              		.loc 1 50 0
  79 0016 FFF7FEFF 		bl	__aeabi_f2d
  80              	.LVL4:
  81 001a FFF7FEFF 		bl	round
  82              	.LVL5:
  83 001e FFF7FEFF 		bl	__aeabi_d2iz
  84              	.LVL6:
  85 0022 04B2     		sxth	r4, r0
  86              	.LVL7:
  51:StepperMotorDriver.c ****     
  52:StepperMotorDriver.c ****     char buff[64];
  53:StepperMotorDriver.c ****     sprintf(buff, "Asteps: %i - Rounded: %i \r\n", currentAsteps, rounded);
  87              		.loc 1 53 0
  88 0024 2346     		mov	r3, r4
  89 0026 2A46     		mov	r2, r5
  90 0028 0649     		ldr	r1, .L6+8
  91 002a 6846     		mov	r0, sp
  92 002c FFF7FEFF 		bl	sprintf
  93              	.LVL8:
  54:StepperMotorDriver.c ****     UART_1_PutString(buff);
  94              		.loc 1 54 0
  95 0030 6846     		mov	r0, sp
  96 0032 FFF7FEFF 		bl	UART_1_PutString
  97              	.LVL9:
  55:StepperMotorDriver.c ****     
  56:StepperMotorDriver.c ****     return rounded;
  57:StepperMotorDriver.c **** }
  98              		.loc 1 57 0
  99 0036 2046     		mov	r0, r4
 100 0038 11B0     		add	sp, sp, #68
 101              		.cfi_def_cfa_offset 12
 102              		@ sp needed
 103 003a 30BD     		pop	{r4, r5, pc}
 104              	.LVL10:
 105              	.L7:
 106              		.align	2
 107              	.L6:
 108 003c 00000000 		.word	.LANCHOR0
 109 0040 CDCC4C3D 		.word	1028443341
 110 0044 00000000 		.word	.LC0
 111              		.cfi_endproc
 112              	.LFE65:
 113              		.size	getAzimuth, .-getAzimuth
 114              		.section	.text.getElevation,"ax",%progbits
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 4


 115              		.align	2
 116              		.global	getElevation
 117              		.thumb
 118              		.thumb_func
 119              		.type	getElevation, %function
 120              	getElevation:
 121              	.LFB66:
  58:StepperMotorDriver.c **** 
  59:StepperMotorDriver.c **** int16_t getElevation()
  60:StepperMotorDriver.c **** {
 122              		.loc 1 60 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 64
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126 0000 30B5     		push	{r4, r5, lr}
 127              		.cfi_def_cfa_offset 12
 128              		.cfi_offset 4, -12
 129              		.cfi_offset 5, -8
 130              		.cfi_offset 14, -4
 131 0002 91B0     		sub	sp, sp, #68
 132              		.cfi_def_cfa_offset 80
 133              	.LVL11:
  61:StepperMotorDriver.c ****     const float degress_per_step = 0.9 / 20; // 1:20 gear ratio
  62:StepperMotorDriver.c ****     
  63:StepperMotorDriver.c ****     float total_degrees = currentEsteps * degress_per_step;
 134              		.loc 1 63 0
 135 0004 0D4D     		ldr	r5, .L10
 136 0006 B5F90600 		ldrsh	r0, [r5, #6]
 137 000a FFF7FEFF 		bl	__aeabi_i2f
 138              	.LVL12:
 139 000e 0C49     		ldr	r1, .L10+4
 140 0010 FFF7FEFF 		bl	__aeabi_fmul
 141              	.LVL13:
  64:StepperMotorDriver.c ****     int16_t rounded = (int16_t)round(total_degrees);
 142              		.loc 1 64 0
 143 0014 FFF7FEFF 		bl	__aeabi_f2d
 144              	.LVL14:
 145 0018 FFF7FEFF 		bl	round
 146              	.LVL15:
 147 001c FFF7FEFF 		bl	__aeabi_d2iz
 148              	.LVL16:
 149 0020 04B2     		sxth	r4, r0
 150              	.LVL17:
  65:StepperMotorDriver.c ****     
  66:StepperMotorDriver.c ****     char buff[64];
  67:StepperMotorDriver.c ****     sprintf(buff, "Esteps: %i - Rounded: %i \r\n", currentAsteps, rounded);
 151              		.loc 1 67 0
 152 0022 2346     		mov	r3, r4
 153 0024 B5F90420 		ldrsh	r2, [r5, #4]
 154 0028 0649     		ldr	r1, .L10+8
 155 002a 6846     		mov	r0, sp
 156 002c FFF7FEFF 		bl	sprintf
 157              	.LVL18:
  68:StepperMotorDriver.c ****     UART_1_PutString(buff);
 158              		.loc 1 68 0
 159 0030 6846     		mov	r0, sp
 160 0032 FFF7FEFF 		bl	UART_1_PutString
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 5


 161              	.LVL19:
  69:StepperMotorDriver.c ****     
  70:StepperMotorDriver.c ****     return rounded;
  71:StepperMotorDriver.c **** }
 162              		.loc 1 71 0
 163 0036 2046     		mov	r0, r4
 164 0038 11B0     		add	sp, sp, #68
 165              		.cfi_def_cfa_offset 12
 166              		@ sp needed
 167 003a 30BD     		pop	{r4, r5, pc}
 168              	.LVL20:
 169              	.L11:
 170              		.align	2
 171              	.L10:
 172 003c 00000000 		.word	.LANCHOR0
 173 0040 EC51383D 		.word	1027101164
 174 0044 1C000000 		.word	.LC1
 175              		.cfi_endproc
 176              	.LFE66:
 177              		.size	getElevation, .-getElevation
 178              		.section	.text.resetAzimuth,"ax",%progbits
 179              		.align	2
 180              		.global	resetAzimuth
 181              		.thumb
 182              		.thumb_func
 183              		.type	resetAzimuth, %function
 184              	resetAzimuth:
 185              	.LFB67:
  72:StepperMotorDriver.c **** 
  73:StepperMotorDriver.c **** void resetAzimuth()
  74:StepperMotorDriver.c **** {
 186              		.loc 1 74 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
  75:StepperMotorDriver.c ****     currentAsteps = 0;
 191              		.loc 1 75 0
 192 0000 0022     		movs	r2, #0
 193 0002 014B     		ldr	r3, .L13
 194 0004 9A80     		strh	r2, [r3, #4]	@ movhi
 195 0006 7047     		bx	lr
 196              	.L14:
 197              		.align	2
 198              	.L13:
 199 0008 00000000 		.word	.LANCHOR0
 200              		.cfi_endproc
 201              	.LFE67:
 202              		.size	resetAzimuth, .-resetAzimuth
 203              		.section	.text.resetElevation,"ax",%progbits
 204              		.align	2
 205              		.global	resetElevation
 206              		.thumb
 207              		.thumb_func
 208              		.type	resetElevation, %function
 209              	resetElevation:
 210              	.LFB68:
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 6


  76:StepperMotorDriver.c **** }
  77:StepperMotorDriver.c **** void resetElevation()
  78:StepperMotorDriver.c **** {
 211              		.loc 1 78 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
  79:StepperMotorDriver.c ****     currentEsteps = 0;
 216              		.loc 1 79 0
 217 0000 0022     		movs	r2, #0
 218 0002 014B     		ldr	r3, .L16
 219 0004 DA80     		strh	r2, [r3, #6]	@ movhi
 220 0006 7047     		bx	lr
 221              	.L17:
 222              		.align	2
 223              	.L16:
 224 0008 00000000 		.word	.LANCHOR0
 225              		.cfi_endproc
 226              	.LFE68:
 227              		.size	resetElevation, .-resetElevation
 228              		.section	.text.azimuthStep,"ax",%progbits
 229              		.align	2
 230              		.global	azimuthStep
 231              		.thumb
 232              		.thumb_func
 233              		.type	azimuthStep, %function
 234              	azimuthStep:
 235              	.LFB70:
  80:StepperMotorDriver.c **** }
  81:StepperMotorDriver.c **** 
  82:StepperMotorDriver.c **** void azimuth()
  83:StepperMotorDriver.c **** {   // function to calculate next azimutgh step based and call azimuthStep()
  84:StepperMotorDriver.c ****     if (Azimuth_Pin_1_Read() == 0 && Azimuth_Pin_2_Read() == 0 && Azimuth_Pin_3_Read() == 0 && Azim
  85:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
  86:StepperMotorDriver.c ****         azimuthStep(stepSequence[azimuthSteps % STEPS]);
  87:StepperMotorDriver.c ****         return;
  88:StepperMotorDriver.c ****     }
  89:StepperMotorDriver.c ****     if (aStep > 0)
  90:StepperMotorDriver.c ****     {   // turning left (positiv steps)
  91:StepperMotorDriver.c ****         if (!Limit_Left_Read())
  92:StepperMotorDriver.c ****         {   // if left limit is reached, don't move
  93:StepperMotorDriver.c ****             aStep = 0;
  94:StepperMotorDriver.c ****             return;
  95:StepperMotorDriver.c ****         }
  96:StepperMotorDriver.c ****         // set azimuth motor pins to next step and decrease steps to be taken
  97:StepperMotorDriver.c ****         azimuthStep(stepSequence[++azimuthSteps % STEPS]);
  98:StepperMotorDriver.c ****         aStep = aStep - 1;
  99:StepperMotorDriver.c ****         currentAsteps = currentAsteps + 1;
 100:StepperMotorDriver.c ****         return;
 101:StepperMotorDriver.c ****     }
 102:StepperMotorDriver.c ****     else if (aStep < 0)
 103:StepperMotorDriver.c ****     {    // turning right (negativ steps)
 104:StepperMotorDriver.c ****         if (!Limit_Right_Read())
 105:StepperMotorDriver.c ****         {   // if right limit is reached, don't move
 106:StepperMotorDriver.c ****             aStep = 0;
 107:StepperMotorDriver.c ****             return;
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 7


 108:StepperMotorDriver.c ****         }
 109:StepperMotorDriver.c ****         // set azimuth motor pins to next step and decrease steps to be taken
 110:StepperMotorDriver.c ****         azimuthStep(stepSequence[--azimuthSteps % STEPS]);
 111:StepperMotorDriver.c ****         aStep = aStep + 1;
 112:StepperMotorDriver.c ****         currentAsteps = currentAsteps - 1;
 113:StepperMotorDriver.c ****         return;
 114:StepperMotorDriver.c ****     }
 115:StepperMotorDriver.c ****     return;
 116:StepperMotorDriver.c **** }
 117:StepperMotorDriver.c **** 
 118:StepperMotorDriver.c **** void azimuthStep(int sequence[4])
 119:StepperMotorDriver.c **** {   // function to write sequence to azimuth motor pins
 236              		.loc 1 119 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              	.LVL21:
 241 0000 10B5     		push	{r4, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 4, -8
 244              		.cfi_offset 14, -4
 245 0002 0446     		mov	r4, r0
 120:StepperMotorDriver.c ****     Azimuth_Pin_1_Write(sequence[0]);
 246              		.loc 1 120 0
 247 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 248              	.LVL22:
 249 0006 FFF7FEFF 		bl	Azimuth_Pin_1_Write
 250              	.LVL23:
 121:StepperMotorDriver.c ****     Azimuth_Pin_2_Write(sequence[1]);
 251              		.loc 1 121 0
 252 000a 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 253 000c FFF7FEFF 		bl	Azimuth_Pin_2_Write
 254              	.LVL24:
 122:StepperMotorDriver.c ****     Azimuth_Pin_3_Write(sequence[2]);
 255              		.loc 1 122 0
 256 0010 207A     		ldrb	r0, [r4, #8]	@ zero_extendqisi2
 257 0012 FFF7FEFF 		bl	Azimuth_Pin_3_Write
 258              	.LVL25:
 123:StepperMotorDriver.c ****     Azimuth_Pin_4_Write(sequence[3]);
 259              		.loc 1 123 0
 260 0016 207B     		ldrb	r0, [r4, #12]	@ zero_extendqisi2
 261 0018 FFF7FEFF 		bl	Azimuth_Pin_4_Write
 262              	.LVL26:
 263 001c 10BD     		pop	{r4, pc}
 264              		.cfi_endproc
 265              	.LFE70:
 266              		.size	azimuthStep, .-azimuthStep
 267 001e 00BF     		.section	.text.azimuth,"ax",%progbits
 268              		.align	2
 269              		.global	azimuth
 270              		.thumb
 271              		.thumb_func
 272              		.type	azimuth, %function
 273              	azimuth:
 274              	.LFB69:
  83:StepperMotorDriver.c ****     if (Azimuth_Pin_1_Read() == 0 && Azimuth_Pin_2_Read() == 0 && Azimuth_Pin_3_Read() == 0 && Azim
 275              		.loc 1 83 0
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 8


 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279 0000 08B5     		push	{r3, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 3, -8
 282              		.cfi_offset 14, -4
  84:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 283              		.loc 1 84 0
 284 0002 FFF7FEFF 		bl	Azimuth_Pin_1_Read
 285              	.LVL27:
 286 0006 B8B9     		cbnz	r0, .L21
  84:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 287              		.loc 1 84 0 is_stmt 0 discriminator 1
 288 0008 FFF7FEFF 		bl	Azimuth_Pin_2_Read
 289              	.LVL28:
 290 000c A0B9     		cbnz	r0, .L21
  84:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 291              		.loc 1 84 0 discriminator 2
 292 000e FFF7FEFF 		bl	Azimuth_Pin_3_Read
 293              	.LVL29:
 294 0012 88B9     		cbnz	r0, .L21
  84:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 295              		.loc 1 84 0 discriminator 3
 296 0014 FFF7FEFF 		bl	Azimuth_Pin_4_Read
 297              	.LVL30:
 298 0018 70B9     		cbnz	r0, .L21
  86:StepperMotorDriver.c ****         return;
 299              		.loc 1 86 0 is_stmt 1
 300 001a 294B     		ldr	r3, .L30
 301 001c 1B68     		ldr	r3, [r3]
 302 001e 294A     		ldr	r2, .L30+4
 303 0020 1340     		ands	r3, r3, r2
 304 0022 03D5     		bpl	.L22
 305 0024 013B     		subs	r3, r3, #1
 306 0026 63F00703 		orn	r3, r3, #7
 307 002a 0133     		adds	r3, r3, #1
 308              	.L22:
 309 002c 2648     		ldr	r0, .L30+8
 310 002e 00EB0310 		add	r0, r0, r3, lsl #4
 311 0032 FFF7FEFF 		bl	azimuthStep
 312              	.LVL31:
  87:StepperMotorDriver.c ****     }
 313              		.loc 1 87 0
 314 0036 08BD     		pop	{r3, pc}
 315              	.L21:
  89:StepperMotorDriver.c ****     {   // turning left (positiv steps)
 316              		.loc 1 89 0
 317 0038 244B     		ldr	r3, .L30+12
 318 003a 1B68     		ldr	r3, [r3]
 319 003c 002B     		cmp	r3, #0
 320 003e 1EDD     		ble	.L24
  91:StepperMotorDriver.c ****         {   // if left limit is reached, don't move
 321              		.loc 1 91 0
 322 0040 FFF7FEFF 		bl	Limit_Left_Read
 323              	.LVL32:
 324 0044 18B9     		cbnz	r0, .L25
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 9


  93:StepperMotorDriver.c ****             return;
 325              		.loc 1 93 0
 326 0046 0022     		movs	r2, #0
 327 0048 204B     		ldr	r3, .L30+12
 328 004a 1A60     		str	r2, [r3]
  94:StepperMotorDriver.c ****         }
 329              		.loc 1 94 0
 330 004c 08BD     		pop	{r3, pc}
 331              	.L25:
  97:StepperMotorDriver.c ****         aStep = aStep - 1;
 332              		.loc 1 97 0
 333 004e 1C4A     		ldr	r2, .L30
 334 0050 1368     		ldr	r3, [r2]
 335 0052 0133     		adds	r3, r3, #1
 336 0054 1360     		str	r3, [r2]
 337 0056 1B48     		ldr	r0, .L30+4
 338 0058 0340     		ands	r3, r3, r0
 339 005a 03D5     		bpl	.L26
 340 005c 013B     		subs	r3, r3, #1
 341 005e 63F00703 		orn	r3, r3, #7
 342 0062 0133     		adds	r3, r3, #1
 343              	.L26:
 344 0064 1848     		ldr	r0, .L30+8
 345 0066 00EB0310 		add	r0, r0, r3, lsl #4
 346 006a FFF7FEFF 		bl	azimuthStep
 347              	.LVL33:
  98:StepperMotorDriver.c ****         currentAsteps = currentAsteps + 1;
 348              		.loc 1 98 0
 349 006e 174B     		ldr	r3, .L30+12
 350 0070 1A68     		ldr	r2, [r3]
 351 0072 013A     		subs	r2, r2, #1
 352 0074 1A60     		str	r2, [r3]
  99:StepperMotorDriver.c ****         return;
 353              		.loc 1 99 0
 354 0076 9A88     		ldrh	r2, [r3, #4]
 355 0078 0132     		adds	r2, r2, #1
 356 007a 9A80     		strh	r2, [r3, #4]	@ movhi
 100:StepperMotorDriver.c ****     }
 357              		.loc 1 100 0
 358 007c 08BD     		pop	{r3, pc}
 359              	.L24:
 102:StepperMotorDriver.c ****     {    // turning right (negativ steps)
 360              		.loc 1 102 0
 361 007e 002B     		cmp	r3, #0
 362 0080 1DDA     		bge	.L20
 104:StepperMotorDriver.c ****         {   // if right limit is reached, don't move
 363              		.loc 1 104 0
 364 0082 FFF7FEFF 		bl	Limit_Right_Read
 365              	.LVL34:
 366 0086 18B9     		cbnz	r0, .L27
 106:StepperMotorDriver.c ****             return;
 367              		.loc 1 106 0
 368 0088 0022     		movs	r2, #0
 369 008a 104B     		ldr	r3, .L30+12
 370 008c 1A60     		str	r2, [r3]
 107:StepperMotorDriver.c ****         }
 371              		.loc 1 107 0
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 10


 372 008e 08BD     		pop	{r3, pc}
 373              	.L27:
 110:StepperMotorDriver.c ****         aStep = aStep + 1;
 374              		.loc 1 110 0
 375 0090 0B4A     		ldr	r2, .L30
 376 0092 1368     		ldr	r3, [r2]
 377 0094 013B     		subs	r3, r3, #1
 378 0096 1360     		str	r3, [r2]
 379 0098 0A48     		ldr	r0, .L30+4
 380 009a 0340     		ands	r3, r3, r0
 381 009c 03D5     		bpl	.L28
 382 009e 013B     		subs	r3, r3, #1
 383 00a0 63F00703 		orn	r3, r3, #7
 384 00a4 0133     		adds	r3, r3, #1
 385              	.L28:
 386 00a6 0848     		ldr	r0, .L30+8
 387 00a8 00EB0310 		add	r0, r0, r3, lsl #4
 388 00ac FFF7FEFF 		bl	azimuthStep
 389              	.LVL35:
 111:StepperMotorDriver.c ****         currentAsteps = currentAsteps - 1;
 390              		.loc 1 111 0
 391 00b0 064B     		ldr	r3, .L30+12
 392 00b2 1A68     		ldr	r2, [r3]
 393 00b4 0132     		adds	r2, r2, #1
 394 00b6 1A60     		str	r2, [r3]
 112:StepperMotorDriver.c ****         return;
 395              		.loc 1 112 0
 396 00b8 9A88     		ldrh	r2, [r3, #4]
 397 00ba 013A     		subs	r2, r2, #1
 398 00bc 9A80     		strh	r2, [r3, #4]	@ movhi
 399              	.L20:
 400 00be 08BD     		pop	{r3, pc}
 401              	.L31:
 402              		.align	2
 403              	.L30:
 404 00c0 00000000 		.word	.LANCHOR1
 405 00c4 07000080 		.word	-2147483641
 406 00c8 04000000 		.word	.LANCHOR1+4
 407 00cc 00000000 		.word	.LANCHOR0
 408              		.cfi_endproc
 409              	.LFE69:
 410              		.size	azimuth, .-azimuth
 411              		.section	.text.moveElevation,"ax",%progbits
 412              		.align	2
 413              		.global	moveElevation
 414              		.thumb
 415              		.thumb_func
 416              		.type	moveElevation, %function
 417              	moveElevation:
 418              	.LFB71:
 124:StepperMotorDriver.c **** }
 125:StepperMotorDriver.c **** 
 126:StepperMotorDriver.c **** 
 127:StepperMotorDriver.c **** void moveElevation(int steps)
 128:StepperMotorDriver.c **** {   // function to set steps to be takben by elevation motor
 419              		.loc 1 128 0
 420              		.cfi_startproc
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 11


 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424              	.LVL36:
 129:StepperMotorDriver.c ****     eStep = steps;
 425              		.loc 1 129 0
 426 0000 014B     		ldr	r3, .L33
 427 0002 9860     		str	r0, [r3, #8]
 428 0004 7047     		bx	lr
 429              	.L34:
 430 0006 00BF     		.align	2
 431              	.L33:
 432 0008 00000000 		.word	.LANCHOR0
 433              		.cfi_endproc
 434              	.LFE71:
 435              		.size	moveElevation, .-moveElevation
 436              		.section	.text.elevationStep,"ax",%progbits
 437              		.align	2
 438              		.global	elevationStep
 439              		.thumb
 440              		.thumb_func
 441              		.type	elevationStep, %function
 442              	elevationStep:
 443              	.LFB73:
 130:StepperMotorDriver.c **** }
 131:StepperMotorDriver.c **** 
 132:StepperMotorDriver.c **** void elevation()
 133:StepperMotorDriver.c **** {   // function to calculate next elevation step based and call elevationStep()
 134:StepperMotorDriver.c ****     if (Elevation_Pin_1_Read() == 0 && Elevation_Pin_2_Read() == 0 && Elevation_Pin_3_Read() == 0 &
 135:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 136:StepperMotorDriver.c ****         elevationStep(stepSequence[elevationSteps % STEPS]);
 137:StepperMotorDriver.c ****         return;
 138:StepperMotorDriver.c ****     }
 139:StepperMotorDriver.c ****     if (eStep > 0)
 140:StepperMotorDriver.c ****     {   // turning up (positiv steps)
 141:StepperMotorDriver.c ****         if (!Limit_Up_Read())
 142:StepperMotorDriver.c ****         {   // if up limit is reached, don't move
 143:StepperMotorDriver.c ****             eStep = 0;
 144:StepperMotorDriver.c ****             return;
 145:StepperMotorDriver.c ****         }
 146:StepperMotorDriver.c ****         // set elevation motor pins to next step and decrease steps to be taken
 147:StepperMotorDriver.c ****         elevationStep(stepSequence[++elevationSteps % STEPS]);
 148:StepperMotorDriver.c ****         eStep = eStep - 1;
 149:StepperMotorDriver.c ****         currentEsteps = currentEsteps + 1;
 150:StepperMotorDriver.c ****         return;
 151:StepperMotorDriver.c ****     }
 152:StepperMotorDriver.c ****     
 153:StepperMotorDriver.c ****     else if (eStep < 0)
 154:StepperMotorDriver.c ****     {   // turning down (negativ steps)
 155:StepperMotorDriver.c ****         if (!Limit_Down_Read())
 156:StepperMotorDriver.c ****         {   // if down limit is reached, don't move
 157:StepperMotorDriver.c ****             eStep = 0;
 158:StepperMotorDriver.c ****             return;
 159:StepperMotorDriver.c ****         }
 160:StepperMotorDriver.c ****         // set elevation motor pins to next step and decrease steps to be taken
 161:StepperMotorDriver.c ****         elevationStep(stepSequence[--elevationSteps % STEPS]);
 162:StepperMotorDriver.c ****         eStep = eStep + 1;
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 12


 163:StepperMotorDriver.c ****         currentEsteps = currentEsteps - 1;
 164:StepperMotorDriver.c ****         return;
 165:StepperMotorDriver.c ****     }
 166:StepperMotorDriver.c ****     return;
 167:StepperMotorDriver.c **** }
 168:StepperMotorDriver.c **** 
 169:StepperMotorDriver.c **** void elevationStep(int sequence[4])
 170:StepperMotorDriver.c **** {   // function to write sequence to elevation motor pins
 444              		.loc 1 170 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              	.LVL37:
 449 0000 10B5     		push	{r4, lr}
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 4, -8
 452              		.cfi_offset 14, -4
 453 0002 0446     		mov	r4, r0
 171:StepperMotorDriver.c ****     Elevation_Pin_1_Write(sequence[0]);
 454              		.loc 1 171 0
 455 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 456              	.LVL38:
 457 0006 FFF7FEFF 		bl	Elevation_Pin_1_Write
 458              	.LVL39:
 172:StepperMotorDriver.c ****     Elevation_Pin_2_Write(sequence[1]);
 459              		.loc 1 172 0
 460 000a 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 461 000c FFF7FEFF 		bl	Elevation_Pin_2_Write
 462              	.LVL40:
 173:StepperMotorDriver.c ****     Elevation_Pin_3_Write(sequence[2]);
 463              		.loc 1 173 0
 464 0010 207A     		ldrb	r0, [r4, #8]	@ zero_extendqisi2
 465 0012 FFF7FEFF 		bl	Elevation_Pin_3_Write
 466              	.LVL41:
 174:StepperMotorDriver.c ****     Elevation_Pin_4_Write(sequence[3]);
 467              		.loc 1 174 0
 468 0016 207B     		ldrb	r0, [r4, #12]	@ zero_extendqisi2
 469 0018 FFF7FEFF 		bl	Elevation_Pin_4_Write
 470              	.LVL42:
 471 001c 10BD     		pop	{r4, pc}
 472              		.cfi_endproc
 473              	.LFE73:
 474              		.size	elevationStep, .-elevationStep
 475 001e 00BF     		.section	.text.elevation,"ax",%progbits
 476              		.align	2
 477              		.global	elevation
 478              		.thumb
 479              		.thumb_func
 480              		.type	elevation, %function
 481              	elevation:
 482              	.LFB72:
 133:StepperMotorDriver.c ****     if (Elevation_Pin_1_Read() == 0 && Elevation_Pin_2_Read() == 0 && Elevation_Pin_3_Read() == 0 &
 483              		.loc 1 133 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 13


 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 3, -8
 490              		.cfi_offset 14, -4
 134:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 491              		.loc 1 134 0
 492 0002 FFF7FEFF 		bl	Elevation_Pin_1_Read
 493              	.LVL43:
 494 0006 C0B9     		cbnz	r0, .L38
 134:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 495              		.loc 1 134 0 is_stmt 0 discriminator 1
 496 0008 FFF7FEFF 		bl	Elevation_Pin_2_Read
 497              	.LVL44:
 498 000c A8B9     		cbnz	r0, .L38
 134:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 499              		.loc 1 134 0 discriminator 2
 500 000e FFF7FEFF 		bl	Elevation_Pin_3_Read
 501              	.LVL45:
 502 0012 90B9     		cbnz	r0, .L38
 134:StepperMotorDriver.c ****     {   // if the motor is off turn it on, on the same step as last time
 503              		.loc 1 134 0 discriminator 3
 504 0014 FFF7FEFF 		bl	Elevation_Pin_4_Read
 505              	.LVL46:
 506 0018 78B9     		cbnz	r0, .L38
 136:StepperMotorDriver.c ****         return;
 507              		.loc 1 136 0 is_stmt 1
 508 001a 2C4B     		ldr	r3, .L47
 509 001c D3F88430 		ldr	r3, [r3, #132]
 510 0020 2B4A     		ldr	r2, .L47+4
 511 0022 1340     		ands	r3, r3, r2
 512 0024 03D5     		bpl	.L39
 513 0026 013B     		subs	r3, r3, #1
 514 0028 63F00703 		orn	r3, r3, #7
 515 002c 0133     		adds	r3, r3, #1
 516              	.L39:
 517 002e 2948     		ldr	r0, .L47+8
 518 0030 00EB0310 		add	r0, r0, r3, lsl #4
 519 0034 FFF7FEFF 		bl	elevationStep
 520              	.LVL47:
 137:StepperMotorDriver.c ****     }
 521              		.loc 1 137 0
 522 0038 08BD     		pop	{r3, pc}
 523              	.L38:
 139:StepperMotorDriver.c ****     {   // turning up (positiv steps)
 524              		.loc 1 139 0
 525 003a 274B     		ldr	r3, .L47+12
 526 003c 9B68     		ldr	r3, [r3, #8]
 527 003e 002B     		cmp	r3, #0
 528 0040 20DD     		ble	.L41
 141:StepperMotorDriver.c ****         {   // if up limit is reached, don't move
 529              		.loc 1 141 0
 530 0042 FFF7FEFF 		bl	Limit_Up_Read
 531              	.LVL48:
 532 0046 18B9     		cbnz	r0, .L42
 143:StepperMotorDriver.c ****             return;
 533              		.loc 1 143 0
 534 0048 0022     		movs	r2, #0
 535 004a 234B     		ldr	r3, .L47+12
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 14


 536 004c 9A60     		str	r2, [r3, #8]
 144:StepperMotorDriver.c ****         }
 537              		.loc 1 144 0
 538 004e 08BD     		pop	{r3, pc}
 539              	.L42:
 147:StepperMotorDriver.c ****         eStep = eStep - 1;
 540              		.loc 1 147 0
 541 0050 1E4A     		ldr	r2, .L47
 542 0052 D2F88430 		ldr	r3, [r2, #132]
 543 0056 0133     		adds	r3, r3, #1
 544 0058 C2F88430 		str	r3, [r2, #132]
 545 005c 1C48     		ldr	r0, .L47+4
 546 005e 0340     		ands	r3, r3, r0
 547 0060 03D5     		bpl	.L43
 548 0062 013B     		subs	r3, r3, #1
 549 0064 63F00703 		orn	r3, r3, #7
 550 0068 0133     		adds	r3, r3, #1
 551              	.L43:
 552 006a 1A48     		ldr	r0, .L47+8
 553 006c 00EB0310 		add	r0, r0, r3, lsl #4
 554 0070 FFF7FEFF 		bl	elevationStep
 555              	.LVL49:
 148:StepperMotorDriver.c ****         currentEsteps = currentEsteps + 1;
 556              		.loc 1 148 0
 557 0074 184B     		ldr	r3, .L47+12
 558 0076 9A68     		ldr	r2, [r3, #8]
 559 0078 013A     		subs	r2, r2, #1
 560 007a 9A60     		str	r2, [r3, #8]
 149:StepperMotorDriver.c ****         return;
 561              		.loc 1 149 0
 562 007c DA88     		ldrh	r2, [r3, #6]
 563 007e 0132     		adds	r2, r2, #1
 564 0080 DA80     		strh	r2, [r3, #6]	@ movhi
 150:StepperMotorDriver.c ****     }
 565              		.loc 1 150 0
 566 0082 08BD     		pop	{r3, pc}
 567              	.L41:
 153:StepperMotorDriver.c ****     {   // turning down (negativ steps)
 568              		.loc 1 153 0
 569 0084 002B     		cmp	r3, #0
 570 0086 1FDA     		bge	.L37
 155:StepperMotorDriver.c ****         {   // if down limit is reached, don't move
 571              		.loc 1 155 0
 572 0088 FFF7FEFF 		bl	Limit_Down_Read
 573              	.LVL50:
 574 008c 18B9     		cbnz	r0, .L44
 157:StepperMotorDriver.c ****             return;
 575              		.loc 1 157 0
 576 008e 0022     		movs	r2, #0
 577 0090 114B     		ldr	r3, .L47+12
 578 0092 9A60     		str	r2, [r3, #8]
 158:StepperMotorDriver.c ****         }
 579              		.loc 1 158 0
 580 0094 08BD     		pop	{r3, pc}
 581              	.L44:
 161:StepperMotorDriver.c ****         eStep = eStep + 1;
 582              		.loc 1 161 0
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 15


 583 0096 0D4A     		ldr	r2, .L47
 584 0098 D2F88430 		ldr	r3, [r2, #132]
 585 009c 013B     		subs	r3, r3, #1
 586 009e C2F88430 		str	r3, [r2, #132]
 587 00a2 0B48     		ldr	r0, .L47+4
 588 00a4 0340     		ands	r3, r3, r0
 589 00a6 03D5     		bpl	.L45
 590 00a8 013B     		subs	r3, r3, #1
 591 00aa 63F00703 		orn	r3, r3, #7
 592 00ae 0133     		adds	r3, r3, #1
 593              	.L45:
 594 00b0 0848     		ldr	r0, .L47+8
 595 00b2 00EB0310 		add	r0, r0, r3, lsl #4
 596 00b6 FFF7FEFF 		bl	elevationStep
 597              	.LVL51:
 162:StepperMotorDriver.c ****         currentEsteps = currentEsteps - 1;
 598              		.loc 1 162 0
 599 00ba 074B     		ldr	r3, .L47+12
 600 00bc 9A68     		ldr	r2, [r3, #8]
 601 00be 0132     		adds	r2, r2, #1
 602 00c0 9A60     		str	r2, [r3, #8]
 163:StepperMotorDriver.c ****         return;
 603              		.loc 1 163 0
 604 00c2 DA88     		ldrh	r2, [r3, #6]
 605 00c4 013A     		subs	r2, r2, #1
 606 00c6 DA80     		strh	r2, [r3, #6]	@ movhi
 607              	.L37:
 608 00c8 08BD     		pop	{r3, pc}
 609              	.L48:
 610 00ca 00BF     		.align	2
 611              	.L47:
 612 00cc 00000000 		.word	.LANCHOR1
 613 00d0 07000080 		.word	-2147483641
 614 00d4 04000000 		.word	.LANCHOR1+4
 615 00d8 00000000 		.word	.LANCHOR0
 616              		.cfi_endproc
 617              	.LFE72:
 618              		.size	elevation, .-elevation
 619              		.section	.text.MOTOR_STEP,"ax",%progbits
 620              		.align	2
 621              		.global	MOTOR_STEP
 622              		.thumb
 623              		.thumb_func
 624              		.type	MOTOR_STEP, %function
 625              	MOTOR_STEP:
 626              	.LFB74:
 175:StepperMotorDriver.c **** }
 176:StepperMotorDriver.c **** 
 177:StepperMotorDriver.c **** 
 178:StepperMotorDriver.c **** CY_ISR(MOTOR_STEP)
 179:StepperMotorDriver.c **** {   // interupt rutine activated by clock to take steps
 627              		.loc 1 179 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631 0000 08B5     		push	{r3, lr}
 632              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 16


 633              		.cfi_offset 3, -8
 634              		.cfi_offset 14, -4
 180:StepperMotorDriver.c ****     if (aStep)
 635              		.loc 1 180 0
 636 0002 194B     		ldr	r3, .L57
 637 0004 1B68     		ldr	r3, [r3]
 638 0006 13B1     		cbz	r3, .L50
 181:StepperMotorDriver.c ****     {   // if aStep != 0 move
 182:StepperMotorDriver.c ****         azimuth();
 639              		.loc 1 182 0
 640 0008 FFF7FEFF 		bl	azimuth
 641              	.LVL52:
 642 000c 12E0     		b	.L51
 643              	.L50:
 183:StepperMotorDriver.c ****     }
 184:StepperMotorDriver.c ****     else if (Azimuth_Pin_1_Read() == 1 || Azimuth_Pin_2_Read() == 1 || Azimuth_Pin_3_Read() == 1 ||
 644              		.loc 1 184 0
 645 000e FFF7FEFF 		bl	Azimuth_Pin_1_Read
 646              	.LVL53:
 647 0012 0128     		cmp	r0, #1
 648 0014 0BD0     		beq	.L52
 649              		.loc 1 184 0 is_stmt 0 discriminator 1
 650 0016 FFF7FEFF 		bl	Azimuth_Pin_2_Read
 651              	.LVL54:
 652 001a 0128     		cmp	r0, #1
 653 001c 07D0     		beq	.L52
 654              		.loc 1 184 0 discriminator 2
 655 001e FFF7FEFF 		bl	Azimuth_Pin_3_Read
 656              	.LVL55:
 657 0022 0128     		cmp	r0, #1
 658 0024 03D0     		beq	.L52
 659              		.loc 1 184 0 discriminator 3
 660 0026 FFF7FEFF 		bl	Azimuth_Pin_4_Read
 661              	.LVL56:
 662 002a 0128     		cmp	r0, #1
 663 002c 02D1     		bne	.L51
 664              	.L52:
 185:StepperMotorDriver.c ****     {   // if we didn't move and motor is on, turn it off
 186:StepperMotorDriver.c ****         azimuthStep(off);
 665              		.loc 1 186 0 is_stmt 1
 666 002e 0F48     		ldr	r0, .L57+4
 667 0030 FFF7FEFF 		bl	azimuthStep
 668              	.LVL57:
 669              	.L51:
 187:StepperMotorDriver.c ****     }
 188:StepperMotorDriver.c ****     
 189:StepperMotorDriver.c ****     if (eStep)
 670              		.loc 1 189 0
 671 0034 0C4B     		ldr	r3, .L57
 672 0036 9B68     		ldr	r3, [r3, #8]
 673 0038 13B1     		cbz	r3, .L53
 190:StepperMotorDriver.c ****     {   // if eStep != 0 move
 191:StepperMotorDriver.c ****         elevation();
 674              		.loc 1 191 0
 675 003a FFF7FEFF 		bl	elevation
 676              	.LVL58:
 677 003e 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 17


 678              	.L53:
 192:StepperMotorDriver.c ****     }
 193:StepperMotorDriver.c ****     else if (Elevation_Pin_1_Read() == 1 || Elevation_Pin_2_Read() == 1 || Elevation_Pin_3_Read() =
 679              		.loc 1 193 0
 680 0040 FFF7FEFF 		bl	Elevation_Pin_1_Read
 681              	.LVL59:
 682 0044 0128     		cmp	r0, #1
 683 0046 0BD0     		beq	.L55
 684              		.loc 1 193 0 is_stmt 0 discriminator 1
 685 0048 FFF7FEFF 		bl	Elevation_Pin_2_Read
 686              	.LVL60:
 687 004c 0128     		cmp	r0, #1
 688 004e 07D0     		beq	.L55
 689              		.loc 1 193 0 discriminator 2
 690 0050 FFF7FEFF 		bl	Elevation_Pin_3_Read
 691              	.LVL61:
 692 0054 0128     		cmp	r0, #1
 693 0056 03D0     		beq	.L55
 694              		.loc 1 193 0 discriminator 3
 695 0058 FFF7FEFF 		bl	Elevation_Pin_4_Read
 696              	.LVL62:
 697 005c 0128     		cmp	r0, #1
 698 005e 02D1     		bne	.L49
 699              	.L55:
 194:StepperMotorDriver.c ****     {   // if we didn't move and motor is on, turn it off
 195:StepperMotorDriver.c ****         elevationStep(off);
 700              		.loc 1 195 0 is_stmt 1
 701 0060 0248     		ldr	r0, .L57+4
 702 0062 FFF7FEFF 		bl	elevationStep
 703              	.LVL63:
 704              	.L49:
 705 0066 08BD     		pop	{r3, pc}
 706              	.L58:
 707              		.align	2
 708              	.L57:
 709 0068 00000000 		.word	.LANCHOR0
 710 006c 0C000000 		.word	.LANCHOR0+12
 711              		.cfi_endproc
 712              	.LFE74:
 713              		.size	MOTOR_STEP, .-MOTOR_STEP
 714              		.section	.text.limitLeft,"ax",%progbits
 715              		.align	2
 716              		.global	limitLeft
 717              		.thumb
 718              		.thumb_func
 719              		.type	limitLeft, %function
 720              	limitLeft:
 721              	.LFB75:
 196:StepperMotorDriver.c ****     }
 197:StepperMotorDriver.c **** }
 198:StepperMotorDriver.c **** 
 199:StepperMotorDriver.c **** bool limitLeft(){return !Limit_Left_Read();}
 722              		.loc 1 199 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 18


 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 3, -8
 729              		.cfi_offset 14, -4
 730              		.loc 1 199 0
 731 0002 FFF7FEFF 		bl	Limit_Left_Read
 732              	.LVL64:
 733 0006 B0FA80F0 		clz	r0, r0
 734 000a 4009     		lsrs	r0, r0, #5
 735 000c 08BD     		pop	{r3, pc}
 736              		.cfi_endproc
 737              	.LFE75:
 738              		.size	limitLeft, .-limitLeft
 739 000e 00BF     		.section	.text.limitRight,"ax",%progbits
 740              		.align	2
 741              		.global	limitRight
 742              		.thumb
 743              		.thumb_func
 744              		.type	limitRight, %function
 745              	limitRight:
 746              	.LFB76:
 200:StepperMotorDriver.c **** 
 201:StepperMotorDriver.c **** bool limitRight(){return !Limit_Right_Read();}
 747              		.loc 1 201 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751 0000 08B5     		push	{r3, lr}
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 3, -8
 754              		.cfi_offset 14, -4
 755              		.loc 1 201 0
 756 0002 FFF7FEFF 		bl	Limit_Right_Read
 757              	.LVL65:
 758 0006 B0FA80F0 		clz	r0, r0
 759 000a 4009     		lsrs	r0, r0, #5
 760 000c 08BD     		pop	{r3, pc}
 761              		.cfi_endproc
 762              	.LFE76:
 763              		.size	limitRight, .-limitRight
 764 000e 00BF     		.section	.text.limitUp,"ax",%progbits
 765              		.align	2
 766              		.global	limitUp
 767              		.thumb
 768              		.thumb_func
 769              		.type	limitUp, %function
 770              	limitUp:
 771              	.LFB77:
 202:StepperMotorDriver.c **** 
 203:StepperMotorDriver.c **** bool limitUp(){return !Limit_Up_Read();}
 772              		.loc 1 203 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776 0000 08B5     		push	{r3, lr}
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 3, -8
 779              		.cfi_offset 14, -4
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 19


 780              		.loc 1 203 0
 781 0002 FFF7FEFF 		bl	Limit_Up_Read
 782              	.LVL66:
 783 0006 B0FA80F0 		clz	r0, r0
 784 000a 4009     		lsrs	r0, r0, #5
 785 000c 08BD     		pop	{r3, pc}
 786              		.cfi_endproc
 787              	.LFE77:
 788              		.size	limitUp, .-limitUp
 789 000e 00BF     		.section	.text.limitDown,"ax",%progbits
 790              		.align	2
 791              		.global	limitDown
 792              		.thumb
 793              		.thumb_func
 794              		.type	limitDown, %function
 795              	limitDown:
 796              	.LFB78:
 204:StepperMotorDriver.c **** 
 205:StepperMotorDriver.c **** bool limitDown(){return !Limit_Down_Read();}
 797              		.loc 1 205 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801 0000 08B5     		push	{r3, lr}
 802              		.cfi_def_cfa_offset 8
 803              		.cfi_offset 3, -8
 804              		.cfi_offset 14, -4
 805              		.loc 1 205 0
 806 0002 FFF7FEFF 		bl	Limit_Down_Read
 807              	.LVL67:
 808 0006 B0FA80F0 		clz	r0, r0
 809 000a 4009     		lsrs	r0, r0, #5
 810 000c 08BD     		pop	{r3, pc}
 811              		.cfi_endproc
 812              	.LFE78:
 813              		.size	limitDown, .-limitDown
 814 000e 00BF     		.data
 815              		.align	2
 816              		.set	.LANCHOR1,. + 0
 817              		.type	azimuthSteps, %object
 818              		.size	azimuthSteps, 4
 819              	azimuthSteps:
 820 0000 00127A00 		.word	8000000
 821              		.type	stepSequence, %object
 822              		.size	stepSequence, 128
 823              	stepSequence:
 824 0004 01000000 		.word	1
 825 0008 00000000 		.word	0
 826 000c 00000000 		.word	0
 827 0010 01000000 		.word	1
 828 0014 00000000 		.word	0
 829 0018 00000000 		.word	0
 830 001c 00000000 		.word	0
 831 0020 01000000 		.word	1
 832 0024 00000000 		.word	0
 833 0028 00000000 		.word	0
 834 002c 01000000 		.word	1
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 20


 835 0030 01000000 		.word	1
 836 0034 00000000 		.word	0
 837 0038 00000000 		.word	0
 838 003c 01000000 		.word	1
 839 0040 00000000 		.word	0
 840 0044 00000000 		.word	0
 841 0048 01000000 		.word	1
 842 004c 01000000 		.word	1
 843 0050 00000000 		.word	0
 844 0054 00000000 		.word	0
 845 0058 01000000 		.word	1
 846 005c 00000000 		.word	0
 847 0060 00000000 		.word	0
 848 0064 01000000 		.word	1
 849 0068 01000000 		.word	1
 850 006c 00000000 		.word	0
 851 0070 00000000 		.word	0
 852 0074 01000000 		.word	1
 853 0078 00000000 		.word	0
 854 007c 00000000 		.word	0
 855 0080 00000000 		.word	0
 856              		.type	elevationSteps, %object
 857              		.size	elevationSteps, 4
 858              	elevationSteps:
 859 0084 00127A00 		.word	8000000
 860              		.section	.rodata.str1.4,"aMS",%progbits,1
 861              		.align	2
 862              	.LC0:
 863 0000 41737465 		.ascii	"Asteps: %i - Rounded: %i \015\012\000"
 863      70733A20 
 863      2569202D 
 863      20526F75 
 863      6E646564 
 864              	.LC1:
 865 001c 45737465 		.ascii	"Esteps: %i - Rounded: %i \015\012\000"
 865      70733A20 
 865      2569202D 
 865      20526F75 
 865      6E646564 
 866              		.bss
 867              		.align	2
 868              		.set	.LANCHOR0,. + 0
 869              		.type	aStep, %object
 870              		.size	aStep, 4
 871              	aStep:
 872 0000 00000000 		.space	4
 873              		.type	currentAsteps, %object
 874              		.size	currentAsteps, 2
 875              	currentAsteps:
 876 0004 0000     		.space	2
 877              		.type	currentEsteps, %object
 878              		.size	currentEsteps, 2
 879              	currentEsteps:
 880 0006 0000     		.space	2
 881              		.type	eStep, %object
 882              		.size	eStep, 4
 883              	eStep:
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 21


 884 0008 00000000 		.space	4
 885              		.type	off, %object
 886              		.size	off, 16
 887              	off:
 888 000c 00000000 		.space	16
 888      00000000 
 888      00000000 
 888      00000000 
 889              		.text
 890              	.Letext0:
 891              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 892              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 893              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 894              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 895              		.file 6 "Generated_Source\\PSoC5/UART_1.h"
 896              		.file 7 "Generated_Source\\PSoC5/Azimuth_Pin_1.h"
 897              		.file 8 "Generated_Source\\PSoC5/Azimuth_Pin_2.h"
 898              		.file 9 "Generated_Source\\PSoC5/Azimuth_Pin_3.h"
 899              		.file 10 "Generated_Source\\PSoC5/Azimuth_Pin_4.h"
 900              		.file 11 "Generated_Source\\PSoC5/Limit_Left.h"
 901              		.file 12 "Generated_Source\\PSoC5/Limit_Right.h"
 902              		.file 13 "Generated_Source\\PSoC5/Elevation_Pin_1.h"
 903              		.file 14 "Generated_Source\\PSoC5/Elevation_Pin_2.h"
 904              		.file 15 "Generated_Source\\PSoC5/Elevation_Pin_3.h"
 905              		.file 16 "Generated_Source\\PSoC5/Elevation_Pin_4.h"
 906              		.file 17 "Generated_Source\\PSoC5/Limit_Up.h"
 907              		.file 18 "Generated_Source\\PSoC5/Limit_Down.h"
 908              		.file 19 "Generated_Source\\PSoC5/core_cm3.h"
 909              		.section	.debug_info,"",%progbits
 910              	.Ldebug_info0:
 911 0000 B0060000 		.4byte	0x6b0
 912 0004 0400     		.2byte	0x4
 913 0006 00000000 		.4byte	.Ldebug_abbrev0
 914 000a 04       		.byte	0x4
 915 000b 01       		.uleb128 0x1
 916 000c D8030000 		.4byte	.LASF70
 917 0010 0C       		.byte	0xc
 918 0011 53030000 		.4byte	.LASF71
 919 0015 68030000 		.4byte	.LASF72
 920 0019 00000000 		.4byte	.Ldebug_ranges0+0
 921 001d 00000000 		.4byte	0
 922 0021 00000000 		.4byte	.Ldebug_line0
 923 0025 02       		.uleb128 0x2
 924 0026 01       		.byte	0x1
 925 0027 06       		.byte	0x6
 926 0028 1C020000 		.4byte	.LASF0
 927 002c 02       		.uleb128 0x2
 928 002d 01       		.byte	0x1
 929 002e 08       		.byte	0x8
 930 002f 98010000 		.4byte	.LASF1
 931 0033 03       		.uleb128 0x3
 932 0034 3D000000 		.4byte	.LASF4
 933 0038 02       		.byte	0x2
 934 0039 29       		.byte	0x29
 935 003a 3E000000 		.4byte	0x3e
 936 003e 02       		.uleb128 0x2
 937 003f 02       		.byte	0x2
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 22


 938 0040 05       		.byte	0x5
 939 0041 9F000000 		.4byte	.LASF2
 940 0045 02       		.uleb128 0x2
 941 0046 02       		.byte	0x2
 942 0047 07       		.byte	0x7
 943 0048 9D020000 		.4byte	.LASF3
 944 004c 03       		.uleb128 0x3
 945 004d 49030000 		.4byte	.LASF5
 946 0051 02       		.byte	0x2
 947 0052 3F       		.byte	0x3f
 948 0053 57000000 		.4byte	0x57
 949 0057 02       		.uleb128 0x2
 950 0058 04       		.byte	0x4
 951 0059 05       		.byte	0x5
 952 005a 8F010000 		.4byte	.LASF6
 953 005e 02       		.uleb128 0x2
 954 005f 04       		.byte	0x4
 955 0060 07       		.byte	0x7
 956 0061 02030000 		.4byte	.LASF7
 957 0065 02       		.uleb128 0x2
 958 0066 08       		.byte	0x8
 959 0067 05       		.byte	0x5
 960 0068 E4000000 		.4byte	.LASF8
 961 006c 02       		.uleb128 0x2
 962 006d 08       		.byte	0x8
 963 006e 07       		.byte	0x7
 964 006f 30020000 		.4byte	.LASF9
 965 0073 04       		.uleb128 0x4
 966 0074 04       		.byte	0x4
 967 0075 05       		.byte	0x5
 968 0076 696E7400 		.ascii	"int\000"
 969 007a 02       		.uleb128 0x2
 970 007b 04       		.byte	0x4
 971 007c 07       		.byte	0x7
 972 007d 70020000 		.4byte	.LASF10
 973 0081 03       		.uleb128 0x3
 974 0082 EC020000 		.4byte	.LASF11
 975 0086 03       		.byte	0x3
 976 0087 20       		.byte	0x20
 977 0088 33000000 		.4byte	0x33
 978 008c 03       		.uleb128 0x3
 979 008d 28020000 		.4byte	.LASF12
 980 0091 03       		.byte	0x3
 981 0092 2C       		.byte	0x2c
 982 0093 4C000000 		.4byte	0x4c
 983 0097 02       		.uleb128 0x2
 984 0098 04       		.byte	0x4
 985 0099 04       		.byte	0x4
 986 009a 5F010000 		.4byte	.LASF13
 987 009e 02       		.uleb128 0x2
 988 009f 08       		.byte	0x8
 989 00a0 04       		.byte	0x4
 990 00a1 14030000 		.4byte	.LASF14
 991 00a5 02       		.uleb128 0x2
 992 00a6 01       		.byte	0x1
 993 00a7 08       		.byte	0x8
 994 00a8 C6020000 		.4byte	.LASF15
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 23


 995 00ac 02       		.uleb128 0x2
 996 00ad 08       		.byte	0x8
 997 00ae 04       		.byte	0x4
 998 00af C0010000 		.4byte	.LASF16
 999 00b3 02       		.uleb128 0x2
 1000 00b4 04       		.byte	0x4
 1001 00b5 07       		.byte	0x7
 1002 00b6 B0030000 		.4byte	.LASF17
 1003 00ba 05       		.uleb128 0x5
 1004 00bb 9F040000 		.4byte	.LASF18
 1005 00bf 01       		.byte	0x1
 1006 00c0 28       		.byte	0x28
 1007 00c1 00000000 		.4byte	.LFB64
 1008 00c5 0C000000 		.4byte	.LFE64-.LFB64
 1009 00c9 01       		.uleb128 0x1
 1010 00ca 9C       		.byte	0x9c
 1011 00cb DD000000 		.4byte	0xdd
 1012 00cf 06       		.uleb128 0x6
 1013 00d0 97020000 		.4byte	.LASF28
 1014 00d4 01       		.byte	0x1
 1015 00d5 28       		.byte	0x28
 1016 00d6 73000000 		.4byte	0x73
 1017 00da 01       		.uleb128 0x1
 1018 00db 50       		.byte	0x50
 1019 00dc 00       		.byte	0
 1020 00dd 07       		.uleb128 0x7
 1021 00de 66040000 		.4byte	.LASF19
 1022 00e2 01       		.byte	0x1
 1023 00e3 2D       		.byte	0x2d
 1024 00e4 81000000 		.4byte	0x81
 1025 00e8 00000000 		.4byte	.LFB65
 1026 00ec 48000000 		.4byte	.LFE65-.LFB65
 1027 00f0 01       		.uleb128 0x1
 1028 00f1 9C       		.byte	0x9c
 1029 00f2 76010000 		.4byte	0x176
 1030 00f6 08       		.uleb128 0x8
 1031 00f7 74010000 		.4byte	.LASF20
 1032 00fb 01       		.byte	0x1
 1033 00fc 2F       		.byte	0x2f
 1034 00fd 76010000 		.4byte	0x176
 1035 0101 04       		.byte	0x4
 1036 0102 CDCC4C3D 		.4byte	0x3d4ccccd
 1037 0106 09       		.uleb128 0x9
 1038 0107 C6000000 		.4byte	.LASF21
 1039 010b 01       		.byte	0x1
 1040 010c 31       		.byte	0x31
 1041 010d 97000000 		.4byte	0x97
 1042 0111 00000000 		.4byte	.LLST0
 1043 0115 09       		.uleb128 0x9
 1044 0116 C3030000 		.4byte	.LASF22
 1045 011a 01       		.byte	0x1
 1046 011b 32       		.byte	0x32
 1047 011c 81000000 		.4byte	0x81
 1048 0120 13000000 		.4byte	.LLST1
 1049 0124 0A       		.uleb128 0xa
 1050 0125 F2000000 		.4byte	.LASF23
 1051 0129 01       		.byte	0x1
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 24


 1052 012a 34       		.byte	0x34
 1053 012b 7B010000 		.4byte	0x17b
 1054 012f 03       		.uleb128 0x3
 1055 0130 91       		.byte	0x91
 1056 0131 B07F     		.sleb128 -80
 1057 0133 0B       		.uleb128 0xb
 1058 0134 1E000000 		.4byte	.LVL5
 1059 0138 B5050000 		.4byte	0x5b5
 1060 013c 0C       		.uleb128 0xc
 1061 013d 30000000 		.4byte	.LVL8
 1062 0141 C1050000 		.4byte	0x5c1
 1063 0145 65010000 		.4byte	0x165
 1064 0149 0D       		.uleb128 0xd
 1065 014a 01       		.uleb128 0x1
 1066 014b 50       		.byte	0x50
 1067 014c 02       		.uleb128 0x2
 1068 014d 7D       		.byte	0x7d
 1069 014e 00       		.sleb128 0
 1070 014f 0D       		.uleb128 0xd
 1071 0150 01       		.uleb128 0x1
 1072 0151 51       		.byte	0x51
 1073 0152 05       		.uleb128 0x5
 1074 0153 03       		.byte	0x3
 1075 0154 00000000 		.4byte	.LC0
 1076 0158 0D       		.uleb128 0xd
 1077 0159 01       		.uleb128 0x1
 1078 015a 52       		.byte	0x52
 1079 015b 02       		.uleb128 0x2
 1080 015c 75       		.byte	0x75
 1081 015d 00       		.sleb128 0
 1082 015e 0D       		.uleb128 0xd
 1083 015f 01       		.uleb128 0x1
 1084 0160 53       		.byte	0x53
 1085 0161 02       		.uleb128 0x2
 1086 0162 74       		.byte	0x74
 1087 0163 00       		.sleb128 0
 1088 0164 00       		.byte	0
 1089 0165 0E       		.uleb128 0xe
 1090 0166 36000000 		.4byte	.LVL9
 1091 016a CC050000 		.4byte	0x5cc
 1092 016e 0D       		.uleb128 0xd
 1093 016f 01       		.uleb128 0x1
 1094 0170 50       		.byte	0x50
 1095 0171 02       		.uleb128 0x2
 1096 0172 7D       		.byte	0x7d
 1097 0173 00       		.sleb128 0
 1098 0174 00       		.byte	0
 1099 0175 00       		.byte	0
 1100 0176 0F       		.uleb128 0xf
 1101 0177 97000000 		.4byte	0x97
 1102 017b 10       		.uleb128 0x10
 1103 017c A5000000 		.4byte	0xa5
 1104 0180 8B010000 		.4byte	0x18b
 1105 0184 11       		.uleb128 0x11
 1106 0185 B3000000 		.4byte	0xb3
 1107 0189 3F       		.byte	0x3f
 1108 018a 00       		.byte	0
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 25


 1109 018b 07       		.uleb128 0x7
 1110 018c 31010000 		.4byte	.LASF24
 1111 0190 01       		.byte	0x1
 1112 0191 3B       		.byte	0x3b
 1113 0192 81000000 		.4byte	0x81
 1114 0196 00000000 		.4byte	.LFB66
 1115 019a 48000000 		.4byte	.LFE66-.LFB66
 1116 019e 01       		.uleb128 0x1
 1117 019f 9C       		.byte	0x9c
 1118 01a0 1E020000 		.4byte	0x21e
 1119 01a4 08       		.uleb128 0x8
 1120 01a5 74010000 		.4byte	.LASF20
 1121 01a9 01       		.byte	0x1
 1122 01aa 3D       		.byte	0x3d
 1123 01ab 76010000 		.4byte	0x176
 1124 01af 04       		.byte	0x4
 1125 01b0 EC51383D 		.4byte	0x3d3851ec
 1126 01b4 09       		.uleb128 0x9
 1127 01b5 C6000000 		.4byte	.LASF21
 1128 01b9 01       		.byte	0x1
 1129 01ba 3F       		.byte	0x3f
 1130 01bb 97000000 		.4byte	0x97
 1131 01bf 31000000 		.4byte	.LLST2
 1132 01c3 09       		.uleb128 0x9
 1133 01c4 C3030000 		.4byte	.LASF22
 1134 01c8 01       		.byte	0x1
 1135 01c9 40       		.byte	0x40
 1136 01ca 81000000 		.4byte	0x81
 1137 01ce 44000000 		.4byte	.LLST3
 1138 01d2 0A       		.uleb128 0xa
 1139 01d3 F2000000 		.4byte	.LASF23
 1140 01d7 01       		.byte	0x1
 1141 01d8 42       		.byte	0x42
 1142 01d9 7B010000 		.4byte	0x17b
 1143 01dd 03       		.uleb128 0x3
 1144 01de 91       		.byte	0x91
 1145 01df B07F     		.sleb128 -80
 1146 01e1 0B       		.uleb128 0xb
 1147 01e2 1C000000 		.4byte	.LVL15
 1148 01e6 B5050000 		.4byte	0x5b5
 1149 01ea 0C       		.uleb128 0xc
 1150 01eb 30000000 		.4byte	.LVL18
 1151 01ef C1050000 		.4byte	0x5c1
 1152 01f3 0D020000 		.4byte	0x20d
 1153 01f7 0D       		.uleb128 0xd
 1154 01f8 01       		.uleb128 0x1
 1155 01f9 50       		.byte	0x50
 1156 01fa 02       		.uleb128 0x2
 1157 01fb 7D       		.byte	0x7d
 1158 01fc 00       		.sleb128 0
 1159 01fd 0D       		.uleb128 0xd
 1160 01fe 01       		.uleb128 0x1
 1161 01ff 51       		.byte	0x51
 1162 0200 05       		.uleb128 0x5
 1163 0201 03       		.byte	0x3
 1164 0202 1C000000 		.4byte	.LC1
 1165 0206 0D       		.uleb128 0xd
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 26


 1166 0207 01       		.uleb128 0x1
 1167 0208 53       		.byte	0x53
 1168 0209 02       		.uleb128 0x2
 1169 020a 74       		.byte	0x74
 1170 020b 00       		.sleb128 0
 1171 020c 00       		.byte	0
 1172 020d 0E       		.uleb128 0xe
 1173 020e 36000000 		.4byte	.LVL19
 1174 0212 CC050000 		.4byte	0x5cc
 1175 0216 0D       		.uleb128 0xd
 1176 0217 01       		.uleb128 0x1
 1177 0218 50       		.byte	0x50
 1178 0219 02       		.uleb128 0x2
 1179 021a 7D       		.byte	0x7d
 1180 021b 00       		.sleb128 0
 1181 021c 00       		.byte	0
 1182 021d 00       		.byte	0
 1183 021e 12       		.uleb128 0x12
 1184 021f B3010000 		.4byte	.LASF25
 1185 0223 01       		.byte	0x1
 1186 0224 49       		.byte	0x49
 1187 0225 00000000 		.4byte	.LFB67
 1188 0229 0C000000 		.4byte	.LFE67-.LFB67
 1189 022d 01       		.uleb128 0x1
 1190 022e 9C       		.byte	0x9c
 1191 022f 12       		.uleb128 0x12
 1192 0230 3A030000 		.4byte	.LASF26
 1193 0234 01       		.byte	0x1
 1194 0235 4D       		.byte	0x4d
 1195 0236 00000000 		.4byte	.LFB68
 1196 023a 0C000000 		.4byte	.LFE68-.LFB68
 1197 023e 01       		.uleb128 0x1
 1198 023f 9C       		.byte	0x9c
 1199 0240 05       		.uleb128 0x5
 1200 0241 CB020000 		.4byte	.LASF27
 1201 0245 01       		.byte	0x1
 1202 0246 76       		.byte	0x76
 1203 0247 00000000 		.4byte	.LFB70
 1204 024b 1E000000 		.4byte	.LFE70-.LFB70
 1205 024f 01       		.uleb128 0x1
 1206 0250 9C       		.byte	0x9c
 1207 0251 89020000 		.4byte	0x289
 1208 0255 13       		.uleb128 0x13
 1209 0256 A9000000 		.4byte	.LASF29
 1210 025a 01       		.byte	0x1
 1211 025b 76       		.byte	0x76
 1212 025c 89020000 		.4byte	0x289
 1213 0260 62000000 		.4byte	.LLST4
 1214 0264 0B       		.uleb128 0xb
 1215 0265 0A000000 		.4byte	.LVL23
 1216 0269 D7050000 		.4byte	0x5d7
 1217 026d 0B       		.uleb128 0xb
 1218 026e 10000000 		.4byte	.LVL24
 1219 0272 E2050000 		.4byte	0x5e2
 1220 0276 0B       		.uleb128 0xb
 1221 0277 16000000 		.4byte	.LVL25
 1222 027b ED050000 		.4byte	0x5ed
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 27


 1223 027f 0B       		.uleb128 0xb
 1224 0280 1C000000 		.4byte	.LVL26
 1225 0284 F8050000 		.4byte	0x5f8
 1226 0288 00       		.byte	0
 1227 0289 14       		.uleb128 0x14
 1228 028a 04       		.byte	0x4
 1229 028b 73000000 		.4byte	0x73
 1230 028f 15       		.uleb128 0x15
 1231 0290 FA020000 		.4byte	.LASF32
 1232 0294 01       		.byte	0x1
 1233 0295 52       		.byte	0x52
 1234 0296 00000000 		.4byte	.LFB69
 1235 029a D0000000 		.4byte	.LFE69-.LFB69
 1236 029e 01       		.uleb128 0x1
 1237 029f 9C       		.byte	0x9c
 1238 02a0 F6020000 		.4byte	0x2f6
 1239 02a4 0B       		.uleb128 0xb
 1240 02a5 06000000 		.4byte	.LVL27
 1241 02a9 03060000 		.4byte	0x603
 1242 02ad 0B       		.uleb128 0xb
 1243 02ae 0C000000 		.4byte	.LVL28
 1244 02b2 0E060000 		.4byte	0x60e
 1245 02b6 0B       		.uleb128 0xb
 1246 02b7 12000000 		.4byte	.LVL29
 1247 02bb 19060000 		.4byte	0x619
 1248 02bf 0B       		.uleb128 0xb
 1249 02c0 18000000 		.4byte	.LVL30
 1250 02c4 24060000 		.4byte	0x624
 1251 02c8 0B       		.uleb128 0xb
 1252 02c9 36000000 		.4byte	.LVL31
 1253 02cd 40020000 		.4byte	0x240
 1254 02d1 0B       		.uleb128 0xb
 1255 02d2 44000000 		.4byte	.LVL32
 1256 02d6 2F060000 		.4byte	0x62f
 1257 02da 0B       		.uleb128 0xb
 1258 02db 6E000000 		.4byte	.LVL33
 1259 02df 40020000 		.4byte	0x240
 1260 02e3 0B       		.uleb128 0xb
 1261 02e4 86000000 		.4byte	.LVL34
 1262 02e8 3A060000 		.4byte	0x63a
 1263 02ec 0B       		.uleb128 0xb
 1264 02ed B0000000 		.4byte	.LVL35
 1265 02f1 40020000 		.4byte	0x240
 1266 02f5 00       		.byte	0
 1267 02f6 05       		.uleb128 0x5
 1268 02f7 23010000 		.4byte	.LASF30
 1269 02fb 01       		.byte	0x1
 1270 02fc 7F       		.byte	0x7f
 1271 02fd 00000000 		.4byte	.LFB71
 1272 0301 0C000000 		.4byte	.LFE71-.LFB71
 1273 0305 01       		.uleb128 0x1
 1274 0306 9C       		.byte	0x9c
 1275 0307 19030000 		.4byte	0x319
 1276 030b 06       		.uleb128 0x6
 1277 030c 97020000 		.4byte	.LASF28
 1278 0310 01       		.byte	0x1
 1279 0311 7F       		.byte	0x7f
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 28


 1280 0312 73000000 		.4byte	0x73
 1281 0316 01       		.uleb128 0x1
 1282 0317 50       		.byte	0x50
 1283 0318 00       		.byte	0
 1284 0319 05       		.uleb128 0x5
 1285 031a 47000000 		.4byte	.LASF31
 1286 031e 01       		.byte	0x1
 1287 031f A9       		.byte	0xa9
 1288 0320 00000000 		.4byte	.LFB73
 1289 0324 1E000000 		.4byte	.LFE73-.LFB73
 1290 0328 01       		.uleb128 0x1
 1291 0329 9C       		.byte	0x9c
 1292 032a 62030000 		.4byte	0x362
 1293 032e 13       		.uleb128 0x13
 1294 032f A9000000 		.4byte	.LASF29
 1295 0333 01       		.byte	0x1
 1296 0334 A9       		.byte	0xa9
 1297 0335 89020000 		.4byte	0x289
 1298 0339 80000000 		.4byte	.LLST5
 1299 033d 0B       		.uleb128 0xb
 1300 033e 0A000000 		.4byte	.LVL39
 1301 0342 45060000 		.4byte	0x645
 1302 0346 0B       		.uleb128 0xb
 1303 0347 10000000 		.4byte	.LVL40
 1304 034b 50060000 		.4byte	0x650
 1305 034f 0B       		.uleb128 0xb
 1306 0350 16000000 		.4byte	.LVL41
 1307 0354 5B060000 		.4byte	0x65b
 1308 0358 0B       		.uleb128 0xb
 1309 0359 1C000000 		.4byte	.LVL42
 1310 035d 66060000 		.4byte	0x666
 1311 0361 00       		.byte	0
 1312 0362 15       		.uleb128 0x15
 1313 0363 85010000 		.4byte	.LASF33
 1314 0367 01       		.byte	0x1
 1315 0368 84       		.byte	0x84
 1316 0369 00000000 		.4byte	.LFB72
 1317 036d DC000000 		.4byte	.LFE72-.LFB72
 1318 0371 01       		.uleb128 0x1
 1319 0372 9C       		.byte	0x9c
 1320 0373 C9030000 		.4byte	0x3c9
 1321 0377 0B       		.uleb128 0xb
 1322 0378 06000000 		.4byte	.LVL43
 1323 037c 71060000 		.4byte	0x671
 1324 0380 0B       		.uleb128 0xb
 1325 0381 0C000000 		.4byte	.LVL44
 1326 0385 7C060000 		.4byte	0x67c
 1327 0389 0B       		.uleb128 0xb
 1328 038a 12000000 		.4byte	.LVL45
 1329 038e 87060000 		.4byte	0x687
 1330 0392 0B       		.uleb128 0xb
 1331 0393 18000000 		.4byte	.LVL46
 1332 0397 92060000 		.4byte	0x692
 1333 039b 0B       		.uleb128 0xb
 1334 039c 38000000 		.4byte	.LVL47
 1335 03a0 19030000 		.4byte	0x319
 1336 03a4 0B       		.uleb128 0xb
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 29


 1337 03a5 46000000 		.4byte	.LVL48
 1338 03a9 9D060000 		.4byte	0x69d
 1339 03ad 0B       		.uleb128 0xb
 1340 03ae 74000000 		.4byte	.LVL49
 1341 03b2 19030000 		.4byte	0x319
 1342 03b6 0B       		.uleb128 0xb
 1343 03b7 8C000000 		.4byte	.LVL50
 1344 03bb A8060000 		.4byte	0x6a8
 1345 03bf 0B       		.uleb128 0xb
 1346 03c0 BA000000 		.4byte	.LVL51
 1347 03c4 19030000 		.4byte	0x319
 1348 03c8 00       		.byte	0
 1349 03c9 05       		.uleb128 0x5
 1350 03ca 0B020000 		.4byte	.LASF34
 1351 03ce 01       		.byte	0x1
 1352 03cf B2       		.byte	0xb2
 1353 03d0 00000000 		.4byte	.LFB74
 1354 03d4 70000000 		.4byte	.LFE74-.LFB74
 1355 03d8 01       		.uleb128 0x1
 1356 03d9 9C       		.byte	0x9c
 1357 03da 63040000 		.4byte	0x463
 1358 03de 0B       		.uleb128 0xb
 1359 03df 0C000000 		.4byte	.LVL52
 1360 03e3 8F020000 		.4byte	0x28f
 1361 03e7 0B       		.uleb128 0xb
 1362 03e8 12000000 		.4byte	.LVL53
 1363 03ec 03060000 		.4byte	0x603
 1364 03f0 0B       		.uleb128 0xb
 1365 03f1 1A000000 		.4byte	.LVL54
 1366 03f5 0E060000 		.4byte	0x60e
 1367 03f9 0B       		.uleb128 0xb
 1368 03fa 22000000 		.4byte	.LVL55
 1369 03fe 19060000 		.4byte	0x619
 1370 0402 0B       		.uleb128 0xb
 1371 0403 2A000000 		.4byte	.LVL56
 1372 0407 24060000 		.4byte	0x624
 1373 040b 0C       		.uleb128 0xc
 1374 040c 34000000 		.4byte	.LVL57
 1375 0410 40020000 		.4byte	0x240
 1376 0414 22040000 		.4byte	0x422
 1377 0418 0D       		.uleb128 0xd
 1378 0419 01       		.uleb128 0x1
 1379 041a 50       		.byte	0x50
 1380 041b 05       		.uleb128 0x5
 1381 041c 03       		.byte	0x3
 1382 041d 0C000000 		.4byte	.LANCHOR0+12
 1383 0421 00       		.byte	0
 1384 0422 0B       		.uleb128 0xb
 1385 0423 3E000000 		.4byte	.LVL58
 1386 0427 62030000 		.4byte	0x362
 1387 042b 0B       		.uleb128 0xb
 1388 042c 44000000 		.4byte	.LVL59
 1389 0430 71060000 		.4byte	0x671
 1390 0434 0B       		.uleb128 0xb
 1391 0435 4C000000 		.4byte	.LVL60
 1392 0439 7C060000 		.4byte	0x67c
 1393 043d 0B       		.uleb128 0xb
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 30


 1394 043e 54000000 		.4byte	.LVL61
 1395 0442 87060000 		.4byte	0x687
 1396 0446 0B       		.uleb128 0xb
 1397 0447 5C000000 		.4byte	.LVL62
 1398 044b 92060000 		.4byte	0x692
 1399 044f 0E       		.uleb128 0xe
 1400 0450 66000000 		.4byte	.LVL63
 1401 0454 19030000 		.4byte	0x319
 1402 0458 0D       		.uleb128 0xd
 1403 0459 01       		.uleb128 0x1
 1404 045a 50       		.byte	0x50
 1405 045b 05       		.uleb128 0x5
 1406 045c 03       		.byte	0x3
 1407 045d 0C000000 		.4byte	.LANCHOR0+12
 1408 0461 00       		.byte	0
 1409 0462 00       		.byte	0
 1410 0463 16       		.uleb128 0x16
 1411 0464 B9030000 		.4byte	.LASF35
 1412 0468 01       		.byte	0x1
 1413 0469 C7       		.byte	0xc7
 1414 046a 86040000 		.4byte	0x486
 1415 046e 00000000 		.4byte	.LFB75
 1416 0472 0E000000 		.4byte	.LFE75-.LFB75
 1417 0476 01       		.uleb128 0x1
 1418 0477 9C       		.byte	0x9c
 1419 0478 86040000 		.4byte	0x486
 1420 047c 0B       		.uleb128 0xb
 1421 047d 06000000 		.4byte	.LVL64
 1422 0481 2F060000 		.4byte	0x62f
 1423 0485 00       		.byte	0
 1424 0486 02       		.uleb128 0x2
 1425 0487 01       		.byte	0x1
 1426 0488 02       		.byte	0x2
 1427 0489 F4020000 		.4byte	.LASF36
 1428 048d 16       		.uleb128 0x16
 1429 048e 46010000 		.4byte	.LASF37
 1430 0492 01       		.byte	0x1
 1431 0493 C9       		.byte	0xc9
 1432 0494 86040000 		.4byte	0x486
 1433 0498 00000000 		.4byte	.LFB76
 1434 049c 0E000000 		.4byte	.LFE76-.LFB76
 1435 04a0 01       		.uleb128 0x1
 1436 04a1 9C       		.byte	0x9c
 1437 04a2 B0040000 		.4byte	0x4b0
 1438 04a6 0B       		.uleb128 0xb
 1439 04a7 06000000 		.4byte	.LVL65
 1440 04ab 3A060000 		.4byte	0x63a
 1441 04af 00       		.byte	0
 1442 04b0 16       		.uleb128 0x16
 1443 04b1 3E010000 		.4byte	.LASF38
 1444 04b5 01       		.byte	0x1
 1445 04b6 CB       		.byte	0xcb
 1446 04b7 86040000 		.4byte	0x486
 1447 04bb 00000000 		.4byte	.LFB77
 1448 04bf 0E000000 		.4byte	.LFE77-.LFB77
 1449 04c3 01       		.uleb128 0x1
 1450 04c4 9C       		.byte	0x9c
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 31


 1451 04c5 D3040000 		.4byte	0x4d3
 1452 04c9 0B       		.uleb128 0xb
 1453 04ca 06000000 		.4byte	.LVL66
 1454 04ce 9D060000 		.4byte	0x69d
 1455 04d2 00       		.byte	0
 1456 04d3 16       		.uleb128 0x16
 1457 04d4 F7000000 		.4byte	.LASF39
 1458 04d8 01       		.byte	0x1
 1459 04d9 CD       		.byte	0xcd
 1460 04da 86040000 		.4byte	0x486
 1461 04de 00000000 		.4byte	.LFB78
 1462 04e2 0E000000 		.4byte	.LFE78-.LFB78
 1463 04e6 01       		.uleb128 0x1
 1464 04e7 9C       		.byte	0x9c
 1465 04e8 F6040000 		.4byte	0x4f6
 1466 04ec 0B       		.uleb128 0xb
 1467 04ed 06000000 		.4byte	.LVL67
 1468 04f1 A8060000 		.4byte	0x6a8
 1469 04f5 00       		.byte	0
 1470 04f6 10       		.uleb128 0x10
 1471 04f7 73000000 		.4byte	0x73
 1472 04fb 0C050000 		.4byte	0x50c
 1473 04ff 11       		.uleb128 0x11
 1474 0500 B3000000 		.4byte	0xb3
 1475 0504 07       		.byte	0x7
 1476 0505 11       		.uleb128 0x11
 1477 0506 B3000000 		.4byte	0xb3
 1478 050a 03       		.byte	0x3
 1479 050b 00       		.byte	0
 1480 050c 0A       		.uleb128 0xa
 1481 050d A6010000 		.4byte	.LASF40
 1482 0511 01       		.byte	0x1
 1483 0512 11       		.byte	0x11
 1484 0513 F6040000 		.4byte	0x4f6
 1485 0517 05       		.uleb128 0x5
 1486 0518 03       		.byte	0x3
 1487 0519 04000000 		.4byte	stepSequence
 1488 051d 10       		.uleb128 0x10
 1489 051e 73000000 		.4byte	0x73
 1490 0522 2D050000 		.4byte	0x52d
 1491 0526 11       		.uleb128 0x11
 1492 0527 B3000000 		.4byte	0xb3
 1493 052b 03       		.byte	0x3
 1494 052c 00       		.byte	0
 1495 052d 17       		.uleb128 0x17
 1496 052e 6F666600 		.ascii	"off\000"
 1497 0532 01       		.byte	0x1
 1498 0533 1C       		.byte	0x1c
 1499 0534 1D050000 		.4byte	0x51d
 1500 0538 05       		.uleb128 0x5
 1501 0539 03       		.byte	0x3
 1502 053a 0C000000 		.4byte	off
 1503 053e 0A       		.uleb128 0xa
 1504 053f 01010000 		.4byte	.LASF41
 1505 0543 01       		.byte	0x1
 1506 0544 1D       		.byte	0x1d
 1507 0545 57000000 		.4byte	0x57
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 32


 1508 0549 05       		.uleb128 0x5
 1509 054a 03       		.byte	0x3
 1510 054b 00000000 		.4byte	azimuthSteps
 1511 054f 0A       		.uleb128 0xa
 1512 0550 65010000 		.4byte	.LASF42
 1513 0554 01       		.byte	0x1
 1514 0555 1E       		.byte	0x1e
 1515 0556 57000000 		.4byte	0x57
 1516 055a 05       		.uleb128 0x5
 1517 055b 03       		.byte	0x3
 1518 055c 84000000 		.4byte	elevationSteps
 1519 0560 0A       		.uleb128 0xa
 1520 0561 7D020000 		.4byte	.LASF43
 1521 0565 01       		.byte	0x1
 1522 0566 1F       		.byte	0x1f
 1523 0567 73000000 		.4byte	0x73
 1524 056b 05       		.uleb128 0x5
 1525 056c 03       		.byte	0x3
 1526 056d 00000000 		.4byte	aStep
 1527 0571 0A       		.uleb128 0xa
 1528 0572 71040000 		.4byte	.LASF44
 1529 0576 01       		.byte	0x1
 1530 0577 20       		.byte	0x20
 1531 0578 73000000 		.4byte	0x73
 1532 057c 05       		.uleb128 0x5
 1533 057d 03       		.byte	0x3
 1534 057e 08000000 		.4byte	eStep
 1535 0582 0A       		.uleb128 0xa
 1536 0583 51010000 		.4byte	.LASF45
 1537 0587 01       		.byte	0x1
 1538 0588 21       		.byte	0x21
 1539 0589 81000000 		.4byte	0x81
 1540 058d 05       		.uleb128 0x5
 1541 058e 03       		.byte	0x3
 1542 058f 04000000 		.4byte	currentAsteps
 1543 0593 0A       		.uleb128 0xa
 1544 0594 2C030000 		.4byte	.LASF46
 1545 0598 01       		.byte	0x1
 1546 0599 22       		.byte	0x22
 1547 059a 81000000 		.4byte	0x81
 1548 059e 05       		.uleb128 0x5
 1549 059f 03       		.byte	0x3
 1550 05a0 06000000 		.4byte	currentEsteps
 1551 05a4 18       		.uleb128 0x18
 1552 05a5 CB030000 		.4byte	.LASF73
 1553 05a9 13       		.byte	0x13
 1554 05aa 1207     		.2byte	0x712
 1555 05ac B0050000 		.4byte	0x5b0
 1556 05b0 19       		.uleb128 0x19
 1557 05b1 8C000000 		.4byte	0x8c
 1558 05b5 1A       		.uleb128 0x1a
 1559 05b6 16020000 		.4byte	.LASF47
 1560 05ba 16020000 		.4byte	.LASF47
 1561 05be 04       		.byte	0x4
 1562 05bf 4B01     		.2byte	0x14b
 1563 05c1 1B       		.uleb128 0x1b
 1564 05c2 03020000 		.4byte	.LASF48
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 33


 1565 05c6 03020000 		.4byte	.LASF48
 1566 05ca 05       		.byte	0x5
 1567 05cb E7       		.byte	0xe7
 1568 05cc 1B       		.uleb128 0x1b
 1569 05cd 1B030000 		.4byte	.LASF49
 1570 05d1 1B030000 		.4byte	.LASF49
 1571 05d5 06       		.byte	0x6
 1572 05d6 8B       		.byte	0x8b
 1573 05d7 1B       		.uleb128 0x1b
 1574 05d8 E1010000 		.4byte	.LASF50
 1575 05dc E1010000 		.4byte	.LASF50
 1576 05e0 07       		.byte	0x7
 1577 05e1 26       		.byte	0x26
 1578 05e2 1B       		.uleb128 0x1b
 1579 05e3 16000000 		.4byte	.LASF51
 1580 05e7 16000000 		.4byte	.LASF51
 1581 05eb 08       		.byte	0x8
 1582 05ec 26       		.byte	0x26
 1583 05ed 1B       		.uleb128 0x1b
 1584 05ee 83020000 		.4byte	.LASF52
 1585 05f2 83020000 		.4byte	.LASF52
 1586 05f6 09       		.byte	0x9
 1587 05f7 26       		.byte	0x26
 1588 05f8 1B       		.uleb128 0x1b
 1589 05f9 B2000000 		.4byte	.LASF53
 1590 05fd B2000000 		.4byte	.LASF53
 1591 0601 0A       		.byte	0xa
 1592 0602 26       		.byte	0x26
 1593 0603 1B       		.uleb128 0x1b
 1594 0604 55000000 		.4byte	.LASF54
 1595 0608 55000000 		.4byte	.LASF54
 1596 060c 07       		.byte	0x7
 1597 060d 29       		.byte	0x29
 1598 060e 1B       		.uleb128 0x1b
 1599 060f 77040000 		.4byte	.LASF55
 1600 0613 77040000 		.4byte	.LASF55
 1601 0617 08       		.byte	0x8
 1602 0618 29       		.byte	0x29
 1603 0619 1B       		.uleb128 0x1b
 1604 061a 47020000 		.4byte	.LASF56
 1605 061e 47020000 		.4byte	.LASF56
 1606 0622 09       		.byte	0x9
 1607 0623 29       		.byte	0x29
 1608 0624 1B       		.uleb128 0x1b
 1609 0625 2A000000 		.4byte	.LASF57
 1610 0629 2A000000 		.4byte	.LASF57
 1611 062d 0A       		.byte	0xa
 1612 062e 29       		.byte	0x29
 1613 062f 1B       		.uleb128 0x1b
 1614 0630 D4000000 		.4byte	.LASF58
 1615 0634 D4000000 		.4byte	.LASF58
 1616 0638 0B       		.byte	0xb
 1617 0639 29       		.byte	0x29
 1618 063a 1B       		.uleb128 0x1b
 1619 063b 68000000 		.4byte	.LASF59
 1620 063f 68000000 		.4byte	.LASF59
 1621 0643 0C       		.byte	0xc
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 34


 1622 0644 29       		.byte	0x29
 1623 0645 1B       		.uleb128 0x1b
 1624 0646 00000000 		.4byte	.LASF60
 1625 064a 00000000 		.4byte	.LASF60
 1626 064e 0D       		.byte	0xd
 1627 064f 26       		.byte	0x26
 1628 0650 1B       		.uleb128 0x1b
 1629 0651 5A020000 		.4byte	.LASF61
 1630 0655 5A020000 		.4byte	.LASF61
 1631 0659 0E       		.byte	0xe
 1632 065a 26       		.byte	0x26
 1633 065b 1B       		.uleb128 0x1b
 1634 065c 89000000 		.4byte	.LASF62
 1635 0660 89000000 		.4byte	.LASF62
 1636 0664 0F       		.byte	0xf
 1637 0665 26       		.byte	0x26
 1638 0666 1B       		.uleb128 0x1b
 1639 0667 B0020000 		.4byte	.LASF63
 1640 066b B0020000 		.4byte	.LASF63
 1641 066f 10       		.byte	0x10
 1642 0670 26       		.byte	0x26
 1643 0671 1B       		.uleb128 0x1b
 1644 0672 0E010000 		.4byte	.LASF64
 1645 0676 0E010000 		.4byte	.LASF64
 1646 067a 0D       		.byte	0xd
 1647 067b 29       		.byte	0x29
 1648 067c 1B       		.uleb128 0x1b
 1649 067d 8A040000 		.4byte	.LASF65
 1650 0681 8A040000 		.4byte	.LASF65
 1651 0685 0E       		.byte	0xe
 1652 0686 29       		.byte	0x29
 1653 0687 1B       		.uleb128 0x1b
 1654 0688 D7020000 		.4byte	.LASF66
 1655 068c D7020000 		.4byte	.LASF66
 1656 0690 0F       		.byte	0xf
 1657 0691 29       		.byte	0x29
 1658 0692 1B       		.uleb128 0x1b
 1659 0693 CC010000 		.4byte	.LASF67
 1660 0697 CC010000 		.4byte	.LASF67
 1661 069b 10       		.byte	0x10
 1662 069c 29       		.byte	0x29
 1663 069d 1B       		.uleb128 0x1b
 1664 069e F5010000 		.4byte	.LASF68
 1665 06a2 F5010000 		.4byte	.LASF68
 1666 06a6 11       		.byte	0x11
 1667 06a7 29       		.byte	0x29
 1668 06a8 1B       		.uleb128 0x1b
 1669 06a9 79000000 		.4byte	.LASF69
 1670 06ad 79000000 		.4byte	.LASF69
 1671 06b1 12       		.byte	0x12
 1672 06b2 29       		.byte	0x29
 1673 06b3 00       		.byte	0
 1674              		.section	.debug_abbrev,"",%progbits
 1675              	.Ldebug_abbrev0:
 1676 0000 01       		.uleb128 0x1
 1677 0001 11       		.uleb128 0x11
 1678 0002 01       		.byte	0x1
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 35


 1679 0003 25       		.uleb128 0x25
 1680 0004 0E       		.uleb128 0xe
 1681 0005 13       		.uleb128 0x13
 1682 0006 0B       		.uleb128 0xb
 1683 0007 03       		.uleb128 0x3
 1684 0008 0E       		.uleb128 0xe
 1685 0009 1B       		.uleb128 0x1b
 1686 000a 0E       		.uleb128 0xe
 1687 000b 55       		.uleb128 0x55
 1688 000c 17       		.uleb128 0x17
 1689 000d 11       		.uleb128 0x11
 1690 000e 01       		.uleb128 0x1
 1691 000f 10       		.uleb128 0x10
 1692 0010 17       		.uleb128 0x17
 1693 0011 00       		.byte	0
 1694 0012 00       		.byte	0
 1695 0013 02       		.uleb128 0x2
 1696 0014 24       		.uleb128 0x24
 1697 0015 00       		.byte	0
 1698 0016 0B       		.uleb128 0xb
 1699 0017 0B       		.uleb128 0xb
 1700 0018 3E       		.uleb128 0x3e
 1701 0019 0B       		.uleb128 0xb
 1702 001a 03       		.uleb128 0x3
 1703 001b 0E       		.uleb128 0xe
 1704 001c 00       		.byte	0
 1705 001d 00       		.byte	0
 1706 001e 03       		.uleb128 0x3
 1707 001f 16       		.uleb128 0x16
 1708 0020 00       		.byte	0
 1709 0021 03       		.uleb128 0x3
 1710 0022 0E       		.uleb128 0xe
 1711 0023 3A       		.uleb128 0x3a
 1712 0024 0B       		.uleb128 0xb
 1713 0025 3B       		.uleb128 0x3b
 1714 0026 0B       		.uleb128 0xb
 1715 0027 49       		.uleb128 0x49
 1716 0028 13       		.uleb128 0x13
 1717 0029 00       		.byte	0
 1718 002a 00       		.byte	0
 1719 002b 04       		.uleb128 0x4
 1720 002c 24       		.uleb128 0x24
 1721 002d 00       		.byte	0
 1722 002e 0B       		.uleb128 0xb
 1723 002f 0B       		.uleb128 0xb
 1724 0030 3E       		.uleb128 0x3e
 1725 0031 0B       		.uleb128 0xb
 1726 0032 03       		.uleb128 0x3
 1727 0033 08       		.uleb128 0x8
 1728 0034 00       		.byte	0
 1729 0035 00       		.byte	0
 1730 0036 05       		.uleb128 0x5
 1731 0037 2E       		.uleb128 0x2e
 1732 0038 01       		.byte	0x1
 1733 0039 3F       		.uleb128 0x3f
 1734 003a 19       		.uleb128 0x19
 1735 003b 03       		.uleb128 0x3
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 36


 1736 003c 0E       		.uleb128 0xe
 1737 003d 3A       		.uleb128 0x3a
 1738 003e 0B       		.uleb128 0xb
 1739 003f 3B       		.uleb128 0x3b
 1740 0040 0B       		.uleb128 0xb
 1741 0041 27       		.uleb128 0x27
 1742 0042 19       		.uleb128 0x19
 1743 0043 11       		.uleb128 0x11
 1744 0044 01       		.uleb128 0x1
 1745 0045 12       		.uleb128 0x12
 1746 0046 06       		.uleb128 0x6
 1747 0047 40       		.uleb128 0x40
 1748 0048 18       		.uleb128 0x18
 1749 0049 9742     		.uleb128 0x2117
 1750 004b 19       		.uleb128 0x19
 1751 004c 01       		.uleb128 0x1
 1752 004d 13       		.uleb128 0x13
 1753 004e 00       		.byte	0
 1754 004f 00       		.byte	0
 1755 0050 06       		.uleb128 0x6
 1756 0051 05       		.uleb128 0x5
 1757 0052 00       		.byte	0
 1758 0053 03       		.uleb128 0x3
 1759 0054 0E       		.uleb128 0xe
 1760 0055 3A       		.uleb128 0x3a
 1761 0056 0B       		.uleb128 0xb
 1762 0057 3B       		.uleb128 0x3b
 1763 0058 0B       		.uleb128 0xb
 1764 0059 49       		.uleb128 0x49
 1765 005a 13       		.uleb128 0x13
 1766 005b 02       		.uleb128 0x2
 1767 005c 18       		.uleb128 0x18
 1768 005d 00       		.byte	0
 1769 005e 00       		.byte	0
 1770 005f 07       		.uleb128 0x7
 1771 0060 2E       		.uleb128 0x2e
 1772 0061 01       		.byte	0x1
 1773 0062 3F       		.uleb128 0x3f
 1774 0063 19       		.uleb128 0x19
 1775 0064 03       		.uleb128 0x3
 1776 0065 0E       		.uleb128 0xe
 1777 0066 3A       		.uleb128 0x3a
 1778 0067 0B       		.uleb128 0xb
 1779 0068 3B       		.uleb128 0x3b
 1780 0069 0B       		.uleb128 0xb
 1781 006a 49       		.uleb128 0x49
 1782 006b 13       		.uleb128 0x13
 1783 006c 11       		.uleb128 0x11
 1784 006d 01       		.uleb128 0x1
 1785 006e 12       		.uleb128 0x12
 1786 006f 06       		.uleb128 0x6
 1787 0070 40       		.uleb128 0x40
 1788 0071 18       		.uleb128 0x18
 1789 0072 9642     		.uleb128 0x2116
 1790 0074 19       		.uleb128 0x19
 1791 0075 01       		.uleb128 0x1
 1792 0076 13       		.uleb128 0x13
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 37


 1793 0077 00       		.byte	0
 1794 0078 00       		.byte	0
 1795 0079 08       		.uleb128 0x8
 1796 007a 34       		.uleb128 0x34
 1797 007b 00       		.byte	0
 1798 007c 03       		.uleb128 0x3
 1799 007d 0E       		.uleb128 0xe
 1800 007e 3A       		.uleb128 0x3a
 1801 007f 0B       		.uleb128 0xb
 1802 0080 3B       		.uleb128 0x3b
 1803 0081 0B       		.uleb128 0xb
 1804 0082 49       		.uleb128 0x49
 1805 0083 13       		.uleb128 0x13
 1806 0084 1C       		.uleb128 0x1c
 1807 0085 0A       		.uleb128 0xa
 1808 0086 00       		.byte	0
 1809 0087 00       		.byte	0
 1810 0088 09       		.uleb128 0x9
 1811 0089 34       		.uleb128 0x34
 1812 008a 00       		.byte	0
 1813 008b 03       		.uleb128 0x3
 1814 008c 0E       		.uleb128 0xe
 1815 008d 3A       		.uleb128 0x3a
 1816 008e 0B       		.uleb128 0xb
 1817 008f 3B       		.uleb128 0x3b
 1818 0090 0B       		.uleb128 0xb
 1819 0091 49       		.uleb128 0x49
 1820 0092 13       		.uleb128 0x13
 1821 0093 02       		.uleb128 0x2
 1822 0094 17       		.uleb128 0x17
 1823 0095 00       		.byte	0
 1824 0096 00       		.byte	0
 1825 0097 0A       		.uleb128 0xa
 1826 0098 34       		.uleb128 0x34
 1827 0099 00       		.byte	0
 1828 009a 03       		.uleb128 0x3
 1829 009b 0E       		.uleb128 0xe
 1830 009c 3A       		.uleb128 0x3a
 1831 009d 0B       		.uleb128 0xb
 1832 009e 3B       		.uleb128 0x3b
 1833 009f 0B       		.uleb128 0xb
 1834 00a0 49       		.uleb128 0x49
 1835 00a1 13       		.uleb128 0x13
 1836 00a2 02       		.uleb128 0x2
 1837 00a3 18       		.uleb128 0x18
 1838 00a4 00       		.byte	0
 1839 00a5 00       		.byte	0
 1840 00a6 0B       		.uleb128 0xb
 1841 00a7 898201   		.uleb128 0x4109
 1842 00aa 00       		.byte	0
 1843 00ab 11       		.uleb128 0x11
 1844 00ac 01       		.uleb128 0x1
 1845 00ad 31       		.uleb128 0x31
 1846 00ae 13       		.uleb128 0x13
 1847 00af 00       		.byte	0
 1848 00b0 00       		.byte	0
 1849 00b1 0C       		.uleb128 0xc
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 38


 1850 00b2 898201   		.uleb128 0x4109
 1851 00b5 01       		.byte	0x1
 1852 00b6 11       		.uleb128 0x11
 1853 00b7 01       		.uleb128 0x1
 1854 00b8 31       		.uleb128 0x31
 1855 00b9 13       		.uleb128 0x13
 1856 00ba 01       		.uleb128 0x1
 1857 00bb 13       		.uleb128 0x13
 1858 00bc 00       		.byte	0
 1859 00bd 00       		.byte	0
 1860 00be 0D       		.uleb128 0xd
 1861 00bf 8A8201   		.uleb128 0x410a
 1862 00c2 00       		.byte	0
 1863 00c3 02       		.uleb128 0x2
 1864 00c4 18       		.uleb128 0x18
 1865 00c5 9142     		.uleb128 0x2111
 1866 00c7 18       		.uleb128 0x18
 1867 00c8 00       		.byte	0
 1868 00c9 00       		.byte	0
 1869 00ca 0E       		.uleb128 0xe
 1870 00cb 898201   		.uleb128 0x4109
 1871 00ce 01       		.byte	0x1
 1872 00cf 11       		.uleb128 0x11
 1873 00d0 01       		.uleb128 0x1
 1874 00d1 31       		.uleb128 0x31
 1875 00d2 13       		.uleb128 0x13
 1876 00d3 00       		.byte	0
 1877 00d4 00       		.byte	0
 1878 00d5 0F       		.uleb128 0xf
 1879 00d6 26       		.uleb128 0x26
 1880 00d7 00       		.byte	0
 1881 00d8 49       		.uleb128 0x49
 1882 00d9 13       		.uleb128 0x13
 1883 00da 00       		.byte	0
 1884 00db 00       		.byte	0
 1885 00dc 10       		.uleb128 0x10
 1886 00dd 01       		.uleb128 0x1
 1887 00de 01       		.byte	0x1
 1888 00df 49       		.uleb128 0x49
 1889 00e0 13       		.uleb128 0x13
 1890 00e1 01       		.uleb128 0x1
 1891 00e2 13       		.uleb128 0x13
 1892 00e3 00       		.byte	0
 1893 00e4 00       		.byte	0
 1894 00e5 11       		.uleb128 0x11
 1895 00e6 21       		.uleb128 0x21
 1896 00e7 00       		.byte	0
 1897 00e8 49       		.uleb128 0x49
 1898 00e9 13       		.uleb128 0x13
 1899 00ea 2F       		.uleb128 0x2f
 1900 00eb 0B       		.uleb128 0xb
 1901 00ec 00       		.byte	0
 1902 00ed 00       		.byte	0
 1903 00ee 12       		.uleb128 0x12
 1904 00ef 2E       		.uleb128 0x2e
 1905 00f0 00       		.byte	0
 1906 00f1 3F       		.uleb128 0x3f
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 39


 1907 00f2 19       		.uleb128 0x19
 1908 00f3 03       		.uleb128 0x3
 1909 00f4 0E       		.uleb128 0xe
 1910 00f5 3A       		.uleb128 0x3a
 1911 00f6 0B       		.uleb128 0xb
 1912 00f7 3B       		.uleb128 0x3b
 1913 00f8 0B       		.uleb128 0xb
 1914 00f9 11       		.uleb128 0x11
 1915 00fa 01       		.uleb128 0x1
 1916 00fb 12       		.uleb128 0x12
 1917 00fc 06       		.uleb128 0x6
 1918 00fd 40       		.uleb128 0x40
 1919 00fe 18       		.uleb128 0x18
 1920 00ff 9742     		.uleb128 0x2117
 1921 0101 19       		.uleb128 0x19
 1922 0102 00       		.byte	0
 1923 0103 00       		.byte	0
 1924 0104 13       		.uleb128 0x13
 1925 0105 05       		.uleb128 0x5
 1926 0106 00       		.byte	0
 1927 0107 03       		.uleb128 0x3
 1928 0108 0E       		.uleb128 0xe
 1929 0109 3A       		.uleb128 0x3a
 1930 010a 0B       		.uleb128 0xb
 1931 010b 3B       		.uleb128 0x3b
 1932 010c 0B       		.uleb128 0xb
 1933 010d 49       		.uleb128 0x49
 1934 010e 13       		.uleb128 0x13
 1935 010f 02       		.uleb128 0x2
 1936 0110 17       		.uleb128 0x17
 1937 0111 00       		.byte	0
 1938 0112 00       		.byte	0
 1939 0113 14       		.uleb128 0x14
 1940 0114 0F       		.uleb128 0xf
 1941 0115 00       		.byte	0
 1942 0116 0B       		.uleb128 0xb
 1943 0117 0B       		.uleb128 0xb
 1944 0118 49       		.uleb128 0x49
 1945 0119 13       		.uleb128 0x13
 1946 011a 00       		.byte	0
 1947 011b 00       		.byte	0
 1948 011c 15       		.uleb128 0x15
 1949 011d 2E       		.uleb128 0x2e
 1950 011e 01       		.byte	0x1
 1951 011f 3F       		.uleb128 0x3f
 1952 0120 19       		.uleb128 0x19
 1953 0121 03       		.uleb128 0x3
 1954 0122 0E       		.uleb128 0xe
 1955 0123 3A       		.uleb128 0x3a
 1956 0124 0B       		.uleb128 0xb
 1957 0125 3B       		.uleb128 0x3b
 1958 0126 0B       		.uleb128 0xb
 1959 0127 11       		.uleb128 0x11
 1960 0128 01       		.uleb128 0x1
 1961 0129 12       		.uleb128 0x12
 1962 012a 06       		.uleb128 0x6
 1963 012b 40       		.uleb128 0x40
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 40


 1964 012c 18       		.uleb128 0x18
 1965 012d 9742     		.uleb128 0x2117
 1966 012f 19       		.uleb128 0x19
 1967 0130 01       		.uleb128 0x1
 1968 0131 13       		.uleb128 0x13
 1969 0132 00       		.byte	0
 1970 0133 00       		.byte	0
 1971 0134 16       		.uleb128 0x16
 1972 0135 2E       		.uleb128 0x2e
 1973 0136 01       		.byte	0x1
 1974 0137 3F       		.uleb128 0x3f
 1975 0138 19       		.uleb128 0x19
 1976 0139 03       		.uleb128 0x3
 1977 013a 0E       		.uleb128 0xe
 1978 013b 3A       		.uleb128 0x3a
 1979 013c 0B       		.uleb128 0xb
 1980 013d 3B       		.uleb128 0x3b
 1981 013e 0B       		.uleb128 0xb
 1982 013f 49       		.uleb128 0x49
 1983 0140 13       		.uleb128 0x13
 1984 0141 11       		.uleb128 0x11
 1985 0142 01       		.uleb128 0x1
 1986 0143 12       		.uleb128 0x12
 1987 0144 06       		.uleb128 0x6
 1988 0145 40       		.uleb128 0x40
 1989 0146 18       		.uleb128 0x18
 1990 0147 9742     		.uleb128 0x2117
 1991 0149 19       		.uleb128 0x19
 1992 014a 01       		.uleb128 0x1
 1993 014b 13       		.uleb128 0x13
 1994 014c 00       		.byte	0
 1995 014d 00       		.byte	0
 1996 014e 17       		.uleb128 0x17
 1997 014f 34       		.uleb128 0x34
 1998 0150 00       		.byte	0
 1999 0151 03       		.uleb128 0x3
 2000 0152 08       		.uleb128 0x8
 2001 0153 3A       		.uleb128 0x3a
 2002 0154 0B       		.uleb128 0xb
 2003 0155 3B       		.uleb128 0x3b
 2004 0156 0B       		.uleb128 0xb
 2005 0157 49       		.uleb128 0x49
 2006 0158 13       		.uleb128 0x13
 2007 0159 02       		.uleb128 0x2
 2008 015a 18       		.uleb128 0x18
 2009 015b 00       		.byte	0
 2010 015c 00       		.byte	0
 2011 015d 18       		.uleb128 0x18
 2012 015e 34       		.uleb128 0x34
 2013 015f 00       		.byte	0
 2014 0160 03       		.uleb128 0x3
 2015 0161 0E       		.uleb128 0xe
 2016 0162 3A       		.uleb128 0x3a
 2017 0163 0B       		.uleb128 0xb
 2018 0164 3B       		.uleb128 0x3b
 2019 0165 05       		.uleb128 0x5
 2020 0166 49       		.uleb128 0x49
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 41


 2021 0167 13       		.uleb128 0x13
 2022 0168 3F       		.uleb128 0x3f
 2023 0169 19       		.uleb128 0x19
 2024 016a 3C       		.uleb128 0x3c
 2025 016b 19       		.uleb128 0x19
 2026 016c 00       		.byte	0
 2027 016d 00       		.byte	0
 2028 016e 19       		.uleb128 0x19
 2029 016f 35       		.uleb128 0x35
 2030 0170 00       		.byte	0
 2031 0171 49       		.uleb128 0x49
 2032 0172 13       		.uleb128 0x13
 2033 0173 00       		.byte	0
 2034 0174 00       		.byte	0
 2035 0175 1A       		.uleb128 0x1a
 2036 0176 2E       		.uleb128 0x2e
 2037 0177 00       		.byte	0
 2038 0178 3F       		.uleb128 0x3f
 2039 0179 19       		.uleb128 0x19
 2040 017a 3C       		.uleb128 0x3c
 2041 017b 19       		.uleb128 0x19
 2042 017c 6E       		.uleb128 0x6e
 2043 017d 0E       		.uleb128 0xe
 2044 017e 03       		.uleb128 0x3
 2045 017f 0E       		.uleb128 0xe
 2046 0180 3A       		.uleb128 0x3a
 2047 0181 0B       		.uleb128 0xb
 2048 0182 3B       		.uleb128 0x3b
 2049 0183 05       		.uleb128 0x5
 2050 0184 00       		.byte	0
 2051 0185 00       		.byte	0
 2052 0186 1B       		.uleb128 0x1b
 2053 0187 2E       		.uleb128 0x2e
 2054 0188 00       		.byte	0
 2055 0189 3F       		.uleb128 0x3f
 2056 018a 19       		.uleb128 0x19
 2057 018b 3C       		.uleb128 0x3c
 2058 018c 19       		.uleb128 0x19
 2059 018d 6E       		.uleb128 0x6e
 2060 018e 0E       		.uleb128 0xe
 2061 018f 03       		.uleb128 0x3
 2062 0190 0E       		.uleb128 0xe
 2063 0191 3A       		.uleb128 0x3a
 2064 0192 0B       		.uleb128 0xb
 2065 0193 3B       		.uleb128 0x3b
 2066 0194 0B       		.uleb128 0xb
 2067 0195 00       		.byte	0
 2068 0196 00       		.byte	0
 2069 0197 00       		.byte	0
 2070              		.section	.debug_loc,"",%progbits
 2071              	.Ldebug_loc0:
 2072              	.LLST0:
 2073 0000 16000000 		.4byte	.LVL3
 2074 0004 19000000 		.4byte	.LVL4-1
 2075 0008 0100     		.2byte	0x1
 2076 000a 50       		.byte	0x50
 2077 000b 00000000 		.4byte	0
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 42


 2078 000f 00000000 		.4byte	0
 2079              	.LLST1:
 2080 0013 24000000 		.4byte	.LVL7
 2081 0017 3C000000 		.4byte	.LVL10
 2082 001b 0100     		.2byte	0x1
 2083 001d 54       		.byte	0x54
 2084 001e 3C000000 		.4byte	.LVL10
 2085 0022 48000000 		.4byte	.LFE65
 2086 0026 0100     		.2byte	0x1
 2087 0028 50       		.byte	0x50
 2088 0029 00000000 		.4byte	0
 2089 002d 00000000 		.4byte	0
 2090              	.LLST2:
 2091 0031 14000000 		.4byte	.LVL13
 2092 0035 17000000 		.4byte	.LVL14-1
 2093 0039 0100     		.2byte	0x1
 2094 003b 50       		.byte	0x50
 2095 003c 00000000 		.4byte	0
 2096 0040 00000000 		.4byte	0
 2097              	.LLST3:
 2098 0044 22000000 		.4byte	.LVL17
 2099 0048 3C000000 		.4byte	.LVL20
 2100 004c 0100     		.2byte	0x1
 2101 004e 54       		.byte	0x54
 2102 004f 3C000000 		.4byte	.LVL20
 2103 0053 48000000 		.4byte	.LFE66
 2104 0057 0100     		.2byte	0x1
 2105 0059 50       		.byte	0x50
 2106 005a 00000000 		.4byte	0
 2107 005e 00000000 		.4byte	0
 2108              	.LLST4:
 2109 0062 00000000 		.4byte	.LVL21
 2110 0066 06000000 		.4byte	.LVL22
 2111 006a 0100     		.2byte	0x1
 2112 006c 50       		.byte	0x50
 2113 006d 06000000 		.4byte	.LVL22
 2114 0071 1E000000 		.4byte	.LFE70
 2115 0075 0100     		.2byte	0x1
 2116 0077 54       		.byte	0x54
 2117 0078 00000000 		.4byte	0
 2118 007c 00000000 		.4byte	0
 2119              	.LLST5:
 2120 0080 00000000 		.4byte	.LVL37
 2121 0084 06000000 		.4byte	.LVL38
 2122 0088 0100     		.2byte	0x1
 2123 008a 50       		.byte	0x50
 2124 008b 06000000 		.4byte	.LVL38
 2125 008f 1E000000 		.4byte	.LFE73
 2126 0093 0100     		.2byte	0x1
 2127 0095 54       		.byte	0x54
 2128 0096 00000000 		.4byte	0
 2129 009a 00000000 		.4byte	0
 2130              		.section	.debug_aranges,"",%progbits
 2131 0000 8C000000 		.4byte	0x8c
 2132 0004 0200     		.2byte	0x2
 2133 0006 00000000 		.4byte	.Ldebug_info0
 2134 000a 04       		.byte	0x4
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 43


 2135 000b 00       		.byte	0
 2136 000c 0000     		.2byte	0
 2137 000e 0000     		.2byte	0
 2138 0010 00000000 		.4byte	.LFB64
 2139 0014 0C000000 		.4byte	.LFE64-.LFB64
 2140 0018 00000000 		.4byte	.LFB65
 2141 001c 48000000 		.4byte	.LFE65-.LFB65
 2142 0020 00000000 		.4byte	.LFB66
 2143 0024 48000000 		.4byte	.LFE66-.LFB66
 2144 0028 00000000 		.4byte	.LFB67
 2145 002c 0C000000 		.4byte	.LFE67-.LFB67
 2146 0030 00000000 		.4byte	.LFB68
 2147 0034 0C000000 		.4byte	.LFE68-.LFB68
 2148 0038 00000000 		.4byte	.LFB70
 2149 003c 1E000000 		.4byte	.LFE70-.LFB70
 2150 0040 00000000 		.4byte	.LFB69
 2151 0044 D0000000 		.4byte	.LFE69-.LFB69
 2152 0048 00000000 		.4byte	.LFB71
 2153 004c 0C000000 		.4byte	.LFE71-.LFB71
 2154 0050 00000000 		.4byte	.LFB73
 2155 0054 1E000000 		.4byte	.LFE73-.LFB73
 2156 0058 00000000 		.4byte	.LFB72
 2157 005c DC000000 		.4byte	.LFE72-.LFB72
 2158 0060 00000000 		.4byte	.LFB74
 2159 0064 70000000 		.4byte	.LFE74-.LFB74
 2160 0068 00000000 		.4byte	.LFB75
 2161 006c 0E000000 		.4byte	.LFE75-.LFB75
 2162 0070 00000000 		.4byte	.LFB76
 2163 0074 0E000000 		.4byte	.LFE76-.LFB76
 2164 0078 00000000 		.4byte	.LFB77
 2165 007c 0E000000 		.4byte	.LFE77-.LFB77
 2166 0080 00000000 		.4byte	.LFB78
 2167 0084 0E000000 		.4byte	.LFE78-.LFB78
 2168 0088 00000000 		.4byte	0
 2169 008c 00000000 		.4byte	0
 2170              		.section	.debug_ranges,"",%progbits
 2171              	.Ldebug_ranges0:
 2172 0000 00000000 		.4byte	.LFB64
 2173 0004 0C000000 		.4byte	.LFE64
 2174 0008 00000000 		.4byte	.LFB65
 2175 000c 48000000 		.4byte	.LFE65
 2176 0010 00000000 		.4byte	.LFB66
 2177 0014 48000000 		.4byte	.LFE66
 2178 0018 00000000 		.4byte	.LFB67
 2179 001c 0C000000 		.4byte	.LFE67
 2180 0020 00000000 		.4byte	.LFB68
 2181 0024 0C000000 		.4byte	.LFE68
 2182 0028 00000000 		.4byte	.LFB70
 2183 002c 1E000000 		.4byte	.LFE70
 2184 0030 00000000 		.4byte	.LFB69
 2185 0034 D0000000 		.4byte	.LFE69
 2186 0038 00000000 		.4byte	.LFB71
 2187 003c 0C000000 		.4byte	.LFE71
 2188 0040 00000000 		.4byte	.LFB73
 2189 0044 1E000000 		.4byte	.LFE73
 2190 0048 00000000 		.4byte	.LFB72
 2191 004c DC000000 		.4byte	.LFE72
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 44


 2192 0050 00000000 		.4byte	.LFB74
 2193 0054 70000000 		.4byte	.LFE74
 2194 0058 00000000 		.4byte	.LFB75
 2195 005c 0E000000 		.4byte	.LFE75
 2196 0060 00000000 		.4byte	.LFB76
 2197 0064 0E000000 		.4byte	.LFE76
 2198 0068 00000000 		.4byte	.LFB77
 2199 006c 0E000000 		.4byte	.LFE77
 2200 0070 00000000 		.4byte	.LFB78
 2201 0074 0E000000 		.4byte	.LFE78
 2202 0078 00000000 		.4byte	0
 2203 007c 00000000 		.4byte	0
 2204              		.section	.debug_line,"",%progbits
 2205              	.Ldebug_line0:
 2206 0000 34040000 		.section	.debug_str,"MS",%progbits,1
 2206      0200B502 
 2206      00000201 
 2206      FB0E0D00 
 2206      01010101 
 2207              	.LASF60:
 2208 0000 456C6576 		.ascii	"Elevation_Pin_1_Write\000"
 2208      6174696F 
 2208      6E5F5069 
 2208      6E5F315F 
 2208      57726974 
 2209              	.LASF51:
 2210 0016 417A696D 		.ascii	"Azimuth_Pin_2_Write\000"
 2210      7574685F 
 2210      50696E5F 
 2210      325F5772 
 2210      69746500 
 2211              	.LASF57:
 2212 002a 417A696D 		.ascii	"Azimuth_Pin_4_Read\000"
 2212      7574685F 
 2212      50696E5F 
 2212      345F5265 
 2212      616400
 2213              	.LASF4:
 2214 003d 5F5F696E 		.ascii	"__int16_t\000"
 2214      7431365F 
 2214      7400
 2215              	.LASF31:
 2216 0047 656C6576 		.ascii	"elevationStep\000"
 2216      6174696F 
 2216      6E537465 
 2216      7000
 2217              	.LASF54:
 2218 0055 417A696D 		.ascii	"Azimuth_Pin_1_Read\000"
 2218      7574685F 
 2218      50696E5F 
 2218      315F5265 
 2218      616400
 2219              	.LASF59:
 2220 0068 4C696D69 		.ascii	"Limit_Right_Read\000"
 2220      745F5269 
 2220      6768745F 
 2220      52656164 
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 45


 2220      00
 2221              	.LASF69:
 2222 0079 4C696D69 		.ascii	"Limit_Down_Read\000"
 2222      745F446F 
 2222      776E5F52 
 2222      65616400 
 2223              	.LASF62:
 2224 0089 456C6576 		.ascii	"Elevation_Pin_3_Write\000"
 2224      6174696F 
 2224      6E5F5069 
 2224      6E5F335F 
 2224      57726974 
 2225              	.LASF2:
 2226 009f 73686F72 		.ascii	"short int\000"
 2226      7420696E 
 2226      7400
 2227              	.LASF29:
 2228 00a9 73657175 		.ascii	"sequence\000"
 2228      656E6365 
 2228      00
 2229              	.LASF53:
 2230 00b2 417A696D 		.ascii	"Azimuth_Pin_4_Write\000"
 2230      7574685F 
 2230      50696E5F 
 2230      345F5772 
 2230      69746500 
 2231              	.LASF21:
 2232 00c6 746F7461 		.ascii	"total_degrees\000"
 2232      6C5F6465 
 2232      67726565 
 2232      7300
 2233              	.LASF58:
 2234 00d4 4C696D69 		.ascii	"Limit_Left_Read\000"
 2234      745F4C65 
 2234      66745F52 
 2234      65616400 
 2235              	.LASF8:
 2236 00e4 6C6F6E67 		.ascii	"long long int\000"
 2236      206C6F6E 
 2236      6720696E 
 2236      7400
 2237              	.LASF23:
 2238 00f2 62756666 		.ascii	"buff\000"
 2238      00
 2239              	.LASF39:
 2240 00f7 6C696D69 		.ascii	"limitDown\000"
 2240      74446F77 
 2240      6E00
 2241              	.LASF41:
 2242 0101 617A696D 		.ascii	"azimuthSteps\000"
 2242      75746853 
 2242      74657073 
 2242      00
 2243              	.LASF64:
 2244 010e 456C6576 		.ascii	"Elevation_Pin_1_Read\000"
 2244      6174696F 
 2244      6E5F5069 
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 46


 2244      6E5F315F 
 2244      52656164 
 2245              	.LASF30:
 2246 0123 6D6F7665 		.ascii	"moveElevation\000"
 2246      456C6576 
 2246      6174696F 
 2246      6E00
 2247              	.LASF24:
 2248 0131 67657445 		.ascii	"getElevation\000"
 2248      6C657661 
 2248      74696F6E 
 2248      00
 2249              	.LASF38:
 2250 013e 6C696D69 		.ascii	"limitUp\000"
 2250      74557000 
 2251              	.LASF37:
 2252 0146 6C696D69 		.ascii	"limitRight\000"
 2252      74526967 
 2252      687400
 2253              	.LASF45:
 2254 0151 63757272 		.ascii	"currentAsteps\000"
 2254      656E7441 
 2254      73746570 
 2254      7300
 2255              	.LASF13:
 2256 015f 666C6F61 		.ascii	"float\000"
 2256      7400
 2257              	.LASF42:
 2258 0165 656C6576 		.ascii	"elevationSteps\000"
 2258      6174696F 
 2258      6E537465 
 2258      707300
 2259              	.LASF20:
 2260 0174 64656772 		.ascii	"degress_per_step\000"
 2260      6573735F 
 2260      7065725F 
 2260      73746570 
 2260      00
 2261              	.LASF33:
 2262 0185 656C6576 		.ascii	"elevation\000"
 2262      6174696F 
 2262      6E00
 2263              	.LASF6:
 2264 018f 6C6F6E67 		.ascii	"long int\000"
 2264      20696E74 
 2264      00
 2265              	.LASF1:
 2266 0198 756E7369 		.ascii	"unsigned char\000"
 2266      676E6564 
 2266      20636861 
 2266      7200
 2267              	.LASF40:
 2268 01a6 73746570 		.ascii	"stepSequence\000"
 2268      53657175 
 2268      656E6365 
 2268      00
 2269              	.LASF25:
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 47


 2270 01b3 72657365 		.ascii	"resetAzimuth\000"
 2270      74417A69 
 2270      6D757468 
 2270      00
 2271              	.LASF16:
 2272 01c0 6C6F6E67 		.ascii	"long double\000"
 2272      20646F75 
 2272      626C6500 
 2273              	.LASF67:
 2274 01cc 456C6576 		.ascii	"Elevation_Pin_4_Read\000"
 2274      6174696F 
 2274      6E5F5069 
 2274      6E5F345F 
 2274      52656164 
 2275              	.LASF50:
 2276 01e1 417A696D 		.ascii	"Azimuth_Pin_1_Write\000"
 2276      7574685F 
 2276      50696E5F 
 2276      315F5772 
 2276      69746500 
 2277              	.LASF68:
 2278 01f5 4C696D69 		.ascii	"Limit_Up_Read\000"
 2278      745F5570 
 2278      5F526561 
 2278      6400
 2279              	.LASF48:
 2280 0203 73707269 		.ascii	"sprintf\000"
 2280      6E746600 
 2281              	.LASF34:
 2282 020b 4D4F544F 		.ascii	"MOTOR_STEP\000"
 2282      525F5354 
 2282      455000
 2283              	.LASF47:
 2284 0216 726F756E 		.ascii	"round\000"
 2284      6400
 2285              	.LASF0:
 2286 021c 7369676E 		.ascii	"signed char\000"
 2286      65642063 
 2286      68617200 
 2287              	.LASF12:
 2288 0228 696E7433 		.ascii	"int32_t\000"
 2288      325F7400 
 2289              	.LASF9:
 2290 0230 6C6F6E67 		.ascii	"long long unsigned int\000"
 2290      206C6F6E 
 2290      6720756E 
 2290      7369676E 
 2290      65642069 
 2291              	.LASF56:
 2292 0247 417A696D 		.ascii	"Azimuth_Pin_3_Read\000"
 2292      7574685F 
 2292      50696E5F 
 2292      335F5265 
 2292      616400
 2293              	.LASF61:
 2294 025a 456C6576 		.ascii	"Elevation_Pin_2_Write\000"
 2294      6174696F 
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 48


 2294      6E5F5069 
 2294      6E5F325F 
 2294      57726974 
 2295              	.LASF10:
 2296 0270 756E7369 		.ascii	"unsigned int\000"
 2296      676E6564 
 2296      20696E74 
 2296      00
 2297              	.LASF43:
 2298 027d 61537465 		.ascii	"aStep\000"
 2298      7000
 2299              	.LASF52:
 2300 0283 417A696D 		.ascii	"Azimuth_Pin_3_Write\000"
 2300      7574685F 
 2300      50696E5F 
 2300      335F5772 
 2300      69746500 
 2301              	.LASF28:
 2302 0297 73746570 		.ascii	"steps\000"
 2302      7300
 2303              	.LASF3:
 2304 029d 73686F72 		.ascii	"short unsigned int\000"
 2304      7420756E 
 2304      7369676E 
 2304      65642069 
 2304      6E7400
 2305              	.LASF63:
 2306 02b0 456C6576 		.ascii	"Elevation_Pin_4_Write\000"
 2306      6174696F 
 2306      6E5F5069 
 2306      6E5F345F 
 2306      57726974 
 2307              	.LASF15:
 2308 02c6 63686172 		.ascii	"char\000"
 2308      00
 2309              	.LASF27:
 2310 02cb 617A696D 		.ascii	"azimuthStep\000"
 2310      75746853 
 2310      74657000 
 2311              	.LASF66:
 2312 02d7 456C6576 		.ascii	"Elevation_Pin_3_Read\000"
 2312      6174696F 
 2312      6E5F5069 
 2312      6E5F335F 
 2312      52656164 
 2313              	.LASF11:
 2314 02ec 696E7431 		.ascii	"int16_t\000"
 2314      365F7400 
 2315              	.LASF36:
 2316 02f4 5F426F6F 		.ascii	"_Bool\000"
 2316      6C00
 2317              	.LASF32:
 2318 02fa 617A696D 		.ascii	"azimuth\000"
 2318      75746800 
 2319              	.LASF7:
 2320 0302 6C6F6E67 		.ascii	"long unsigned int\000"
 2320      20756E73 
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 49


 2320      69676E65 
 2320      6420696E 
 2320      7400
 2321              	.LASF14:
 2322 0314 646F7562 		.ascii	"double\000"
 2322      6C6500
 2323              	.LASF49:
 2324 031b 55415254 		.ascii	"UART_1_PutString\000"
 2324      5F315F50 
 2324      75745374 
 2324      72696E67 
 2324      00
 2325              	.LASF46:
 2326 032c 63757272 		.ascii	"currentEsteps\000"
 2326      656E7445 
 2326      73746570 
 2326      7300
 2327              	.LASF26:
 2328 033a 72657365 		.ascii	"resetElevation\000"
 2328      74456C65 
 2328      76617469 
 2328      6F6E00
 2329              	.LASF5:
 2330 0349 5F5F696E 		.ascii	"__int32_t\000"
 2330      7433325F 
 2330      7400
 2331              	.LASF71:
 2332 0353 53746570 		.ascii	"StepperMotorDriver.c\000"
 2332      7065724D 
 2332      6F746F72 
 2332      44726976 
 2332      65722E63 
 2333              	.LASF72:
 2334 0368 433A5C63 		.ascii	"C:\\code\\PRJ3\\PSoC\\StepperMotorDriverSPI - Mads\\"
 2334      6F64655C 
 2334      50524A33 
 2334      5C50536F 
 2334      435C5374 
 2335 0397 53746570 		.ascii	"StepperMotorDriver.cydsn\000"
 2335      7065724D 
 2335      6F746F72 
 2335      44726976 
 2335      65722E63 
 2336              	.LASF17:
 2337 03b0 73697A65 		.ascii	"sizetype\000"
 2337      74797065 
 2337      00
 2338              	.LASF35:
 2339 03b9 6C696D69 		.ascii	"limitLeft\000"
 2339      744C6566 
 2339      7400
 2340              	.LASF22:
 2341 03c3 726F756E 		.ascii	"rounded\000"
 2341      64656400 
 2342              	.LASF73:
 2343 03cb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2343      52784275 
ARM GAS  C:\Users\madse\AppData\Local\Temp\cc21DXt8.s 			page 50


 2343      66666572 
 2343      00
 2344              	.LASF70:
 2345 03d8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2345      43313120 
 2345      352E342E 
 2345      31203230 
 2345      31363036 
 2346 040b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2346      20726576 
 2346      6973696F 
 2346      6E203233 
 2346      37373135 
 2347 043e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2347      66756E63 
 2347      74696F6E 
 2347      2D736563 
 2347      74696F6E 
 2348              	.LASF19:
 2349 0466 67657441 		.ascii	"getAzimuth\000"
 2349      7A696D75 
 2349      746800
 2350              	.LASF44:
 2351 0471 65537465 		.ascii	"eStep\000"
 2351      7000
 2352              	.LASF55:
 2353 0477 417A696D 		.ascii	"Azimuth_Pin_2_Read\000"
 2353      7574685F 
 2353      50696E5F 
 2353      325F5265 
 2353      616400
 2354              	.LASF65:
 2355 048a 456C6576 		.ascii	"Elevation_Pin_2_Read\000"
 2355      6174696F 
 2355      6E5F5069 
 2355      6E5F325F 
 2355      52656164 
 2356              	.LASF18:
 2357 049f 6D6F7665 		.ascii	"moveAzimuth\000"
 2357      417A696D 
 2357      75746800 
 2358              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
